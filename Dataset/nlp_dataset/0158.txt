Dalam pemrograman Python, bilangan kompleks adalah tipe data yang digunakan untuk merepresentasikan angka yang memiliki bagian riil dan bagian imajiner. Bilangan kompleks sangat berguna dalam berbagai aplikasi, termasuk dalam matematika, fisika, dan teknik. Python menyediakan dukungan bawaan untuk bilangan kompleks, dan memahami cara mendeklarasikan dan menggunakan bilangan kompleks adalah keterampilan penting dalam pemrograman ilmiah dan teknik.

Bilangan kompleks terdiri dari dua bagian: bagian riil dan bagian imajiner. Bagian riil adalah nilai numerik yang berada di sepanjang sumbu horizontal dalam sistem koordinat kompleks, sedangkan bagian imajiner adalah nilai numerik yang berada di sepanjang sumbu vertikal. Bilangan kompleks biasanya ditulis dalam bentuk `a + bi`, di mana `a` adalah bagian riil dan `b` adalah bagian imajiner, dan `i` adalah unit imajiner yang didefinisikan sebagai akar kuadrat dari `-1`.

### Deklarasi Bilangan Kompleks dalam Python

Di Python, bilangan kompleks dapat dideklarasikan dengan menggunakan notasi khusus yang menyertakan bagian riil dan bagian imajiner. Notasi ini menggunakan simbol `j` atau `J` untuk mewakili unit imajiner. Misalnya, bilangan kompleks `3 + 4i` dapat ditulis dalam Python sebagai `3 + 4j`.

Untuk mendeklarasikan bilangan kompleks, kita cukup menggunakan format `a + bj`, di mana `a` adalah bagian riil dan `b` adalah bagian imajiner. Python secara otomatis mengenali nilai `j` sebagai unit imajiner dan menginterpretasikan nilai tersebut dengan benar dalam konteks bilangan kompleks.

### Contoh Deklarasi

Untuk mendeklarasikan bilangan kompleks di Python, kita dapat langsung menuliskannya dalam kode dengan format `a + bj`. Misalnya, jika kita ingin mendeklarasikan bilangan kompleks dengan bagian riil `5` dan bagian imajiner `7`, kita dapat menulisnya sebagai `5 + 7j`. Python akan menyimpan nilai ini sebagai objek bilangan kompleks yang dapat digunakan dalam perhitungan matematika dan operasi lainnya.

Selain itu, kita juga dapat membuat bilangan kompleks menggunakan fungsi bawaan `complex()`. Fungsi ini memungkinkan kita untuk mendeklarasikan bilangan kompleks dengan memberikan dua argumen: bagian riil dan bagian imajiner. Misalnya, `complex(5, 7)` akan menghasilkan bilangan kompleks `5 + 7j`. Fungsi `complex()` berguna ketika kita perlu membuat bilangan kompleks secara dinamis dalam kode.

### Penggunaan dan Manipulasi Bilangan Kompleks

Setelah mendeklarasikan bilangan kompleks, kita dapat menggunakan bilangan ini dalam berbagai operasi matematika. Python mendukung operasi dasar seperti penjumlahan, pengurangan, perkalian, dan pembagian untuk bilangan kompleks. Operasi ini dilakukan dengan mempertimbangkan aturan matematika untuk bilangan kompleks.

Untuk penjumlahan bilangan kompleks, Python akan menjumlahkan bagian riil dari dua bilangan kompleks dan bagian imajiner dari dua bilangan kompleks secara terpisah. Misalnya, jika kita memiliki bilangan kompleks `3 + 4j` dan `1 + 2j`, hasil penjumlahannya adalah `4 + 6j`.

Demikian juga, untuk pengurangan bilangan kompleks, Python akan mengurangkan bagian riil dan bagian imajiner secara terpisah. Perkalian dan pembagian bilangan kompleks juga dilakukan dengan cara yang sesuai dengan aturan matematika bilangan kompleks. Perkalian melibatkan perkalian silang antara bagian riil dan bagian imajiner, sedangkan pembagian melibatkan pembagian oleh magnitudo bilangan kompleks.

### Akses Bagian Riil dan Bagian Imajiner

Python menyediakan cara untuk mengakses bagian riil dan bagian imajiner dari bilangan kompleks melalui atribut `real` dan `imag`. Atribut `real` memberikan nilai bagian riil dari bilangan kompleks, sedangkan atribut `imag` memberikan nilai bagian imajiner. Misalnya, untuk bilangan kompleks `5 + 7j`, `real` akan menghasilkan `5` dan `imag` akan menghasilkan `7`.

Akses bagian riil dan imajiner sangat berguna ketika kita perlu memanipulasi atau menganalisis bilangan kompleks dalam kode. Misalnya, jika kita hanya tertarik pada bagian riil dari bilangan kompleks untuk perhitungan tertentu, kita dapat menggunakan atribut `real` untuk mendapatkan nilai tersebut.

### Fungsi dan Metode untuk Bilangan Kompleks

Python juga menyediakan berbagai fungsi dan metode bawaan yang dapat digunakan untuk bekerja dengan bilangan kompleks. Salah satu fungsi penting adalah `abs()`, yang digunakan untuk menghitung magnitudo (atau modulus) dari bilangan kompleks. Magnitudo bilangan kompleks adalah jarak dari titik kompleks ke titik asal dalam sistem koordinat kompleks. Magnitudo ini dihitung dengan menggunakan rumus akar kuadrat dari jumlah kuadrat bagian riil dan bagian imajiner.

Selain itu, fungsi `conjugate()` digunakan untuk mendapatkan konjugat dari bilangan kompleks. Konjugat bilangan kompleks diperoleh dengan mengganti tanda bagian imajiner. Misalnya, konjugat dari bilangan kompleks `5 + 7j` adalah `5 - 7j`. Konjugat sering digunakan dalam berbagai aplikasi matematika dan fisika.

### Konversi dan Format Bilangan Kompleks

Ketika bekerja dengan bilangan kompleks, kita mungkin perlu mengonversi bilangan kompleks ke format lain atau menggabungkan bilangan kompleks dengan tipe data lain. Python menyediakan cara untuk melakukan konversi dan format bilangan kompleks dengan menggunakan fungsi dan metode bawaan.

Misalnya, kita dapat mengonversi bilangan kompleks ke string untuk ditampilkan atau diproses lebih lanjut. Python secara otomatis mengonversi bilangan kompleks ke format string dengan notasi `a + bj`. Demikian juga, kita dapat menggunakan metode `format()` untuk mengubah format tampilan bilangan kompleks sesuai kebutuhan.

### Penggunaan dalam Aplikasi Nyata

Bilangan kompleks memiliki berbagai aplikasi dalam ilmu pengetahuan dan teknik. Dalam matematika, bilangan kompleks digunakan untuk menyelesaikan persamaan yang tidak memiliki solusi dalam bilangan riil, seperti persamaan kuadrat dengan diskriminan negatif. Dalam fisika, bilangan kompleks sering digunakan untuk merepresentasikan gelombang dan sinyal, serta untuk analisis dalam domain frekuensi.

Dalam rekayasa elektronik, bilangan kompleks digunakan dalam analisis rangkaian AC dan sistem komunikasi. Bilangan kompleks juga memiliki aplikasi dalam pemrosesan sinyal, kontrol otomatis, dan berbagai bidang lain yang memerlukan representasi dan manipulasi data biner.

Secara keseluruhan, pemahaman tentang deklarasi dan penggunaan bilangan kompleks di Python adalah keterampilan penting bagi siapa saja yang bekerja dengan aplikasi matematika, fisika, atau teknik. Dengan menggunakan bilangan kompleks, kita dapat melakukan perhitungan yang lebih kompleks dan menganalisis data dengan cara yang tidak mungkin dilakukan hanya dengan bilangan riil.