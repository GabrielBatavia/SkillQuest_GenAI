{
    "sumber": "PythonID.org",
    "penulis": "Ahmad Maulana",
    "tanggal": "2023-12-05",
    "judul": "Memahami dan Menggunakan Exception Handling di Python",
    "tingkat_kesulitan": "Pemula",
    "tag": ["exception handling", "pemula"],
    "konten": "Artikel ini menjelaskan tentang penggunaan exception handling di Python. Exception handling digunakan untuk menangani kesalahan yang terjadi selama eksekusi program tanpa menghentikan program tersebut.",
    "contoh": [
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "try:\n    x = 10 / 0\nexcept ZeroDivisionError:\n    print('Tidak bisa membagi dengan nol')",
            "komentar": "Contoh penggunaan try-except untuk menangani kesalahan pembagian dengan nol"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "try:\n    file = open('file_yang_tidak_ada.txt', 'r')\nexcept FileNotFoundError:\n    print('File tidak ditemukan')",
            "komentar": "Contoh penggunaan try-except untuk menangani kesalahan file tidak ditemukan"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "try:\n    value = int('abc')\nexcept ValueError:\n    print('Nilai tidak bisa dikonversi menjadi integer')",
            "komentar": "Contoh penggunaan try-except untuk menangani kesalahan konversi nilai"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "try:\n    import modul_yang_tidak_ada\nexcept ImportError:\n    print('Modul tidak ditemukan')",
            "komentar": "Contoh penggunaan try-except untuk menangani kesalahan impor modul"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "try:\n    number = 10\n    print(number + '5')\nexcept TypeError:\n    print('Tipe data tidak sesuai')",
            "komentar": "Contoh penggunaan try-except untuk menangani kesalahan tipe data"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "try:\n    my_dict = {'key': 'value'}\n    print(my_dict['non_existent_key'])\nexcept KeyError:\n    print('Kunci tidak ditemukan dalam dictionary')",
            "komentar": "Contoh penggunaan try-except untuk menangani kesalahan kunci yang tidak ada dalam dictionary"
        }
    ],
    "topik": [
        {
            "topik": "Exception Handling",
            "deskripsi": "Cara menggunakan exception handling untuk menangani kesalahan yang terjadi selama eksekusi program tanpa menghentikan program tersebut."
        },
        {
            "topik": "Try-Except",
            "deskripsi": "Cara menggunakan blok try-except untuk menangkap dan menangani exception."
        },
        {
            "topik": "Jenis-Jenis Exception",
            "deskripsi": "Beberapa jenis exception umum di Python seperti ZeroDivisionError, FileNotFoundError, ValueError, ImportError, TypeError, dan KeyError."
        }
    ],
    "referensi": [
        {
            "judul": "Python Exceptions - W3Schools",
            "url": "https://www.w3schools.com/python/python_try_except.asp"
        },
        {
            "judul": "Exception Handling in Python - Real Python",
            "url": "https://realpython.com/python-exceptions/"
        }
    ],
    "highlight": [
        "Penjelasan dasar tentang exception handling",
        "Contoh-contoh praktis yang mudah dipahami"
    ],
    "error": [
        {
            "error": "ZeroDivisionError",
            "deskripsi": "Kesalahan yang terjadi saat mencoba membagi angka dengan nol.",
            "contoh": "x = 10 / 0",
            "solusi": "Gunakan blok try-except untuk menangani ZeroDivisionError dan pastikan pembagian tidak dilakukan dengan nol."
        },
        {
            "error": "FileNotFoundError",
            "deskripsi": "Kesalahan yang terjadi saat mencoba membuka file yang tidak ada.",
            "contoh": "file = open('file_yang_tidak_ada.txt', 'r')",
            "solusi": "Gunakan blok try-except untuk menangani FileNotFoundError dan pastikan file yang akan dibuka ada di lokasi yang ditentukan."
        }
    ]
}
