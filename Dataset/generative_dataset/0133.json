{
    "sumber": "PythonNoviceHub.com",
    "penulis": "Siti Rahma",
    "tanggal": "2024-06-20",
    "judul": "Memahami dan Menggunakan Variabel dengan Struktur Data Kompleks di Python",
    "tingkat_kesulitan": "Pemula",
    "tag": ["variable", "data structures", "pemula"],
    "konten": "Artikel ini menjelaskan tentang penggunaan variabel dengan struktur data kompleks di Python seperti list, tuple, set, dan dictionary. Struktur data ini memungkinkan kita untuk menyimpan dan mengelola kumpulan data dengan cara yang efisien.",
    "contoh": [
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "my_list = [1, 2, 3, 4, 5]\nprint('List:', my_list)\nmy_list.append(6)\nprint('List setelah append:', my_list)",
            "komentar": "Contoh mendefinisikan variabel list, menambahkan elemen baru, dan mencetak hasilnya"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "my_tuple = (1, 2, 3)\nprint('Tuple:', my_tuple)\n# my_tuple[0] = 4  # Ini akan menyebabkan TypeError karena tuple tidak bisa diubah",
            "komentar": "Contoh mendefinisikan variabel tuple dan menjelaskan bahwa tuple bersifat immutable"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "my_set = {1, 2, 3, 3, 4}\nprint('Set:', my_set)\nmy_set.add(5)\nprint('Set setelah add:', my_set)",
            "komentar": "Contoh mendefinisikan variabel set, menambahkan elemen baru, dan mencetak hasilnya"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "my_dict = {'name': 'Alice', 'age': 25}\nprint('Dictionary:', my_dict)\nmy_dict['age'] = 26\nprint('Dictionary setelah update:', my_dict)",
            "komentar": "Contoh mendefinisikan variabel dictionary, mengubah nilai salah satu kunci, dan mencetak hasilnya"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "nested_list = [[1, 2], [3, 4], [5, 6]]\nprint('List bersarang:', nested_list)\nfor sublist in nested_list:\n    for item in sublist:\n        print(item)",
            "komentar": "Contoh mendefinisikan variabel list bersarang dan mencetak setiap elemen dalam sublist"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "person = {'name': 'Bob', 'contacts': {'email': 'bob@example.com', 'phone': '123-456-7890'}}\nprint('Dictionary bersarang:', person)\nprint('Email:', person['contacts']['email'])",
            "komentar": "Contoh mendefinisikan variabel dictionary bersarang dan mengakses nilai dalam dictionary bersarang"
        }
    ],
    "topik": [
        {
            "topik": "Variabel List",
            "deskripsi": "Cara mendefinisikan dan menggunakan variabel list di Python untuk menyimpan kumpulan item dalam urutan tertentu."
        },
        {
            "topik": "Variabel Tuple",
            "deskripsi": "Cara mendefinisikan dan menggunakan variabel tuple di Python untuk menyimpan kumpulan item yang tidak dapat diubah."
        },
        {
            "topik": "Variabel Set",
            "deskripsi": "Cara mendefinisikan dan menggunakan variabel set di Python untuk menyimpan item unik tanpa urutan tertentu."
        },
        {
            "topik": "Variabel Dictionary",
            "deskripsi": "Cara mendefinisikan dan menggunakan variabel dictionary di Python untuk menyimpan pasangan kunci-nilai."
        },
        {
            "topik": "Variabel List Bersarang",
            "deskripsi": "Cara mendefinisikan dan menggunakan variabel list bersarang di Python untuk menyimpan data dalam format hierarki."
        },
        {
            "topik": "Variabel Dictionary Bersarang",
            "deskripsi": "Cara mendefinisikan dan menggunakan variabel dictionary bersarang di Python untuk menyimpan data yang lebih terstruktur."
        }
    ],
    "referensi": [
        {
            "judul": "Python Data Types - W3Schools",
            "url": "https://www.w3schools.com/python/python_datatypes.asp"
        },
        {
            "judul": "Understanding Data Structures in Python - Real Python",
            "url": "https://realpython.com/python-data-structures/"
        }
    ],
    "highlight": [
        "Penjelasan dasar tentang penggunaan variabel dengan struktur data kompleks di Python",
        "Contoh-contoh praktis yang mudah dipahami dengan penjelasan konteks yang lebih lengkap"
    ],
    "error": [
        {
            "error": "TypeError",
            "deskripsi": "Kesalahan yang terjadi saat mencoba mengubah elemen dalam tuple yang bersifat immutable.",
            "contoh": "my_tuple = (1, 2, 3)\nmy_tuple[0] = 4",
            "solusi": "Pastikan untuk tidak mencoba mengubah elemen dalam tuple. Gunakan list jika membutuhkan struktur data yang mutable."
        },
        {
            "error": "KeyError",
            "deskripsi": "Kesalahan yang terjadi saat mencoba mengakses kunci yang tidak ada dalam dictionary.",
            "contoh": "my_dict = {'name': 'Alice', 'age': 25}\nprint(my_dict['address'])",
            "solusi": "Pastikan kunci yang diakses ada dalam dictionary atau gunakan metode get dengan nilai default."
        }
    ]
}
