{
    "sumber": "LearnPythonEasy.com",
    "penulis": "Rahmat Hidayat",
    "tanggal": "2025-10-15",
    "judul": "Mengenal dan Menggunakan Boolean di Python",
    "tingkat_kesulitan": "Pemula",
    "tag": ["boolean", "python", "pemula"],
    "konten": "Artikel ini membahas konsep boolean di Python, termasuk cara membuat variabel boolean, menggunakan operator logika, dan penerapannya dalam berbagai skenario pemrograman.",
    "contoh": [
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Membuat variabel boolean\nis_awake = True\nis_asleep = False\nprint('Is awake?', is_awake)\nprint('Is asleep?', is_asleep)",
            "komentar": "Contoh sederhana membuat dan mencetak variabel boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan operator logika AND\nis_weekday = True\nis_holiday = False\nhas_work = is_weekday and not is_holiday\nprint('Has work?', has_work)",
            "komentar": "Menggunakan operator logika AND dengan variabel boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan operator logika OR\nis_sunny = True\nis_warm = False\ncan_go_beach = is_sunny or is_warm\nprint('Can go to the beach?', can_go_beach)",
            "komentar": "Menggunakan operator logika OR dengan variabel boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan operator logika NOT\nis_open = False\nis_closed = not is_open\nprint('Is closed?', is_closed)",
            "komentar": "Menggunakan operator logika NOT dengan variabel boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan boolean dalam kondisi if-else\nis_successful = True\nif is_successful:\n    print('Operation was successful')\nelse:\n    print('Operation failed')",
            "komentar": "Menggunakan variabel boolean dalam pernyataan if-else"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan boolean dari perbandingan string\npassword = 'secure123'\nis_secure_password = len(password) > 8\nprint('Is the password secure?', is_secure_password)",
            "komentar": "Menggunakan hasil perbandingan panjang string sebagai boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan fungsi all() dan any()\nconditions = [False, False, True]\nall_conditions = all(conditions)\nany_condition = any(conditions)\nprint('All conditions met?', all_conditions)\nprint('Any condition met?', any_condition)",
            "komentar": "Menggunakan fungsi all() dan any() untuk memeriksa boolean dari elemen dalam list"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan fungsi bool() untuk konversi\nnumber = 10\nzero_value = 0\nempty_list = []\nnon_empty_list = [1, 2, 3]\nprint('bool(10):', bool(number))\nprint('bool(0):', bool(zero_value))\nprint('bool([]):', bool(empty_list))\nprint('bool([1, 2, 3]):', bool(non_empty_list))",
            "komentar": "Menggunakan fungsi bool() untuk memeriksa nilai boolean dari berbagai tipe data"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan boolean dalam perulangan for\nnumbers = [2, 4, 6, 8, 10]\nfor number in numbers:\n    is_even = (number % 2 == 0)\n    if is_even:\n        print(f'{number} is even')\n    else:\n        print(f'{number} is odd')",
            "komentar": "Menggunakan variabel boolean dalam perulangan for"
        }
    ],
    "topik": [
        {
            "topik": "Membuat Variabel Boolean",
            "deskripsi": "Cara membuat dan mencetak variabel boolean di Python."
        },
        {
            "topik": "Operator Logika AND",
            "deskripsi": "Cara menggunakan operator logika AND dengan variabel boolean."
        },
        {
            "topik": "Operator Logika OR",
            "deskripsi": "Cara menggunakan operator logika OR dengan variabel boolean."
        },
        {
            "topik": "Operator Logika NOT",
            "deskripsi": "Cara menggunakan operator logika NOT dengan variabel boolean."
        },
        {
            "topik": "Boolean dalam Kondisi If-Else",
            "deskripsi": "Cara menggunakan variabel boolean dalam pernyataan if-else."
        },
        {
            "topik": "Boolean dari Perbandingan String",
            "deskripsi": "Cara menggunakan hasil perbandingan panjang string sebagai boolean."
        },
        {
            "topik": "Fungsi all() dan any()",
            "deskripsi": "Cara menggunakan fungsi all() dan any() untuk memeriksa boolean dari elemen dalam list."
        },
        {
            "topik": "Fungsi bool()",
            "deskripsi": "Cara menggunakan fungsi bool() untuk memeriksa nilai boolean dari berbagai tipe data."
        },
        {
            "topik": "Boolean dalam Perulangan For",
            "deskripsi": "Cara menggunakan variabel boolean dalam perulangan for."
        }
    ],
    "referensi": [
        {
            "judul": "Python Booleans - W3Schools",
            "url": "https://www.w3schools.com/python/python_booleans.asp"
        },
        {
            "judul": "Boolean in Python - GeeksforGeeks",
            "url": "https://www.geeksforgeeks.org/boolean-in-python/"
        }
    ],
    "highlight": [
        "Penjelasan dasar tentang boolean di Python",
        "Contoh-contoh praktis yang mudah dipahami dengan penjelasan konteks yang lebih lengkap",
        "Insight tentang berbagai metode yang bisa digunakan untuk memanipulasi boolean di Python"
    ],
    "error": [
        {
            "error": "TypeError",
            "deskripsi": "Kesalahan yang terjadi saat mencoba menggunakan nilai non-boolean dalam konteks yang membutuhkan boolean.",
            "contoh": "is_ready = 'true'\nif is_ready:\n    print('Ready')",
            "solusi": "Pastikan nilai yang digunakan dalam konteks boolean adalah nilai boolean atau konversi nilai ke boolean menggunakan bool()."
        },
        {
            "error": "NameError",
            "deskripsi": "Kesalahan yang terjadi saat variabel boolean tidak didefinisikan.",
            "contoh": "if is_finished:\n    print('Finished')",
            "solusi": "Pastikan variabel boolean sudah didefinisikan sebelum digunakan."
        }
    ]
}
