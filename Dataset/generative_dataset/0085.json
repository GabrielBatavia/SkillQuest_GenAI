{
    "sumber": "PythonMudah.com",
    "penulis": "Rina Anggraini",
    "tanggal": "2023-10-01",
    "judul": "Memahami dan Menggunakan List Comprehension di Python",
    "tingkat_kesulitan": "Pemula",
    "tag": ["list comprehension", "pemula"],
    "konten": "Artikel ini menjelaskan tentang penggunaan list comprehension di Python. List comprehension adalah cara yang ringkas dan elegan untuk membuat list baru dengan menggunakan sintaks yang lebih sederhana.",
    "contoh": [
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "squares = [x**2 for x in range(10)]\nprint(squares)",
            "komentar": "Contoh penggunaan list comprehension untuk membuat list berisi kuadrat dari 0 hingga 9"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "evens = [x for x in range(20) if x % 2 == 0]\nprint(evens)",
            "komentar": "Contoh penggunaan list comprehension dengan kondisi untuk membuat list berisi angka genap dari 0 hingga 19"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "letters = [char for char in 'hello']\nprint(letters)",
            "komentar": "Contoh penggunaan list comprehension untuk memisahkan setiap karakter dalam string menjadi elemen list"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "squares = [x**2 for x in range(10) if x % 2 != 0]\nprint(squares)",
            "komentar": "Contoh penggunaan list comprehension dengan kondisi untuk membuat list berisi kuadrat dari angka ganjil antara 0 hingga 9"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "combinations = [(x, y) for x in range(3) for y in range(3)]\nprint(combinations)",
            "komentar": "Contoh penggunaan list comprehension dengan loop bersarang untuk membuat pasangan kombinasi"
        }
    ],
    "topik": [
        {
            "topik": "List Comprehension",
            "deskripsi": "Cara menggunakan list comprehension untuk membuat list baru dengan sintaks yang lebih ringkas dan efisien."
        },
        {
            "topik": "Kondisi dalam List Comprehension",
            "deskripsi": "Cara menambahkan kondisi dalam list comprehension untuk memfilter elemen."
        },
        {
            "topik": "Loop Bersarang dalam List Comprehension",
            "deskripsi": "Cara menggunakan loop bersarang dalam list comprehension untuk membuat kombinasi elemen."
        }
    ],
    "referensi": [
        {
            "judul": "List Comprehensions in Python - W3Schools",
            "url": "https://www.w3schools.com/python/python_lists_comprehension.asp"
        },
        {
            "judul": "Understanding List Comprehensions in Python - Real Python",
            "url": "https://realpython.com/list-comprehension-python/"
        }
    ],
    "highlight": [
        "Penjelasan dasar tentang list comprehension",
        "Contoh-contoh praktis yang mudah dipahami"
    ],
    "error": [
        {
            "error": "SyntaxError",
            "deskripsi": "Kesalahan yang terjadi saat sintaks list comprehension tidak sesuai dengan aturan Python.",
            "contoh": "squares = [x**2 for x in range(10)",
            "solusi": "Pastikan list comprehension ditutup dengan tanda kurung siku yang benar."
        },
        {
            "error": "TypeError",
            "deskripsi": "Kesalahan yang terjadi saat elemen yang diiterasi tidak sesuai dengan operasi yang diterapkan.",
            "contoh": "letters = [char for char in 12345]",
            "solusi": "Pastikan elemen yang diiterasi adalah iterable seperti string atau list."
        }
    ]
}
