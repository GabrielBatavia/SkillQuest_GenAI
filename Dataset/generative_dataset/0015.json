[
    {
        "sumber": "BelajarPython.com",
        "penulis": "Andi Pratama",
        "tanggal": "2023-04-10",
        "judul": "Pengantar Python: Variabel dan Tipe Data",
        "tingkat_kesulitan": "Pemula",
        "tag": ["variabel", "tipe data", "pemula"],
        "konten": "Artikel ini membahas dasar-dasar Python, termasuk cara mendeklarasikan variabel dan mengenal tipe data dasar seperti string, integer, dan float.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "nama = 'John'\numur = 25\nberat = 70.5\nprint(nama, umur, berat)",
                "komentar": "Kode ini mendeklarasikan variabel dan mencetak nilai-nilainya."
            }
        ],
        "topik": [
            {
                "topik": "Variabel",
                "deskripsi": "Cara mendeklarasikan dan menggunakan variabel dalam Python."
            },
            {
                "topik": "Tipe Data",
                "deskripsi": "Penjelasan tentang tipe data dasar dalam Python."
            }
        ],
        "referensi": [
            {
                "judul": "Dokumentasi Resmi Python",
                "url": "https://docs.python.org/3/tutorial/introduction.html"
            }
        ],
        "highlight": ["Deklarasi variabel", "Penggunaan tipe data"],
        "error": [
            {
                "error": "NameError",
                "deskripsi": "Terjadi ketika variabel yang tidak dideklarasikan digunakan.",
                "contoh": "print(umur2)",
                "solusi": "Pastikan variabel dideklarasikan sebelum digunakan."
            }
        ]
    },
    {
        "sumber": "PythonID",
        "penulis": "Budi Santoso",
        "tanggal": "2023-06-15",
        "judul": "Struktur Data: List dan Tuple",
        "tingkat_kesulitan": "Menengah",
        "tag": ["list", "tuple", "struktur data"],
        "konten": "Artikel ini menjelaskan cara kerja dan penggunaan struktur data list dan tuple dalam Python.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "buah = ['apel', 'mangga', 'jeruk']\nhewan = ('kucing', 'anjing', 'kelinci')\nprint(buah)\nprint(hewan)",
                "komentar": "Kode ini mendeklarasikan list dan tuple, lalu mencetak nilai-nilainya."
            }
        ],
        "topik": [
            {
                "topik": "List",
                "deskripsi": "Cara mendeklarasikan, mengakses, dan memodifikasi list."
            },
            {
                "topik": "Tuple",
                "deskripsi": "Cara mendeklarasikan dan mengakses tuple."
            }
        ],
        "referensi": [
            {
                "judul": "Struktur Data di Python",
                "url": "https://docs.python.org/3/tutorial/datastructures.html"
            }
        ],
        "highlight": ["Deklarasi list", "Deklarasi tuple"],
        "error": [
            {
                "error": "TypeError",
                "deskripsi": "Terjadi ketika mencoba memodifikasi elemen tuple.",
                "contoh": "hewan[0] = 'sapi'",
                "solusi": "Ingat bahwa tuple bersifat immutable dan tidak bisa diubah setelah dideklarasikan."
            }
        ]
    },
    {
        "sumber": "PythonExpert",
        "penulis": "Citra Lestari",
        "tanggal": "2023-08-20",
        "judul": "Penggunaan Fungsi dalam Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["fungsi", "def", "python"],
        "konten": "Artikel ini mengajarkan cara mendefinisikan dan menggunakan fungsi dalam Python, termasuk parameter dan nilai kembali.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "def salam(nama):\n    return 'Halo, ' + nama\n\nprint(salam('Andi'))",
                "komentar": "Fungsi salam menerima parameter nama dan mengembalikan salam."
            }
        ],
        "topik": [
            {
                "topik": "Definisi Fungsi",
                "deskripsi": "Cara mendefinisikan fungsi dengan kata kunci def."
            },
            {
                "topik": "Parameter Fungsi",
                "deskripsi": "Penggunaan parameter dalam fungsi."
            }
        ],
        "referensi": [
            {
                "judul": "Tutorial Fungsi di Python",
                "url": "https://realpython.com/defining-your-own-python-function/"
            }
        ],
        "highlight": ["Definisi fungsi", "Penggunaan parameter"],
        "error": [
            {
                "error": "TypeError",
                "deskripsi": "Terjadi ketika fungsi dipanggil tanpa argumen yang diperlukan.",
                "contoh": "print(salam())",
                "solusi": "Pastikan fungsi dipanggil dengan jumlah dan tipe argumen yang sesuai."
            }
        ]
    },
    {
        "sumber": "PemrogramanPython",
        "penulis": "Dewi Anggraini",
        "tanggal": "2023-03-25",
        "judul": "Pemrograman Berorientasi Objek dengan Python",
        "tingkat_kesulitan": "Lanjutan",
        "tag": ["OOP", "kelas", "objek"],
        "konten": "Artikel ini membahas konsep dasar pemrograman berorientasi objek (OOP) dan penerapannya dalam Python.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "class Hewan:\n    def __init__(self, nama, umur):\n        self.nama = nama\n        self.umur = umur\n\n    def bicara(self):\n        print(f'{self.nama} bersuara.')\n\nkucing = Hewan('Kucing', 2)\nkucing.bicara()",
                "komentar": "Kode ini mendefinisikan kelas Hewan dan membuat objek kucing."
            }
        ],
        "topik": [
            {
                "topik": "Kelas dan Objek",
                "deskripsi": "Penjelasan tentang kelas dan objek dalam Python."
            },
            {
                "topik": "Metode",
                "deskripsi": "Cara mendefinisikan dan menggunakan metode dalam kelas."
            }
        ],
        "referensi": [
            {
                "judul": "OOP di Python",
                "url": "https://realpython.com/python3-object-oriented-programming/"
            }
        ],
        "highlight": ["Pembuatan kelas", "Pembuatan objek"],
        "error": [
            {
                "error": "AttributeError",
                "deskripsi": "Terjadi ketika mencoba mengakses atribut yang tidak ada.",
                "contoh": "print(kucing.berat)",
                "solusi": "Pastikan atribut yang diakses sudah didefinisikan dalam kelas."
            }
        ]
    },
    {
        "sumber": "KodeKita",
        "penulis": "Eka Wijaya",
        "tanggal": "2023-07-10",
        "judul": "Pemrograman Asinkron dengan Asyncio",
        "tingkat_kesulitan": "Lanjutan",
        "tag": ["asyncio", "asinkron", "python"],
        "konten": "Artikel ini menjelaskan konsep pemrograman asinkron di Python menggunakan modul asyncio, termasuk coroutine dan event loop.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "import asyncio\n\nasync def salam():\n    await asyncio.sleep(1)\n    print('Hello, World!')\n\nasyncio.run(salam())",
                "komentar": "Kode ini menggunakan asyncio untuk menunda eksekusi selama 1 detik sebelum mencetak 'Hello, World!'."
            }
        ],
        "topik": [
            {
                "topik": "Coroutine",
                "deskripsi": "Penjelasan tentang coroutine dan cara kerjanya dalam asyncio."
            },
            {
                "topik": "Event Loop",
                "deskripsi": "Penjelasan tentang event loop dalam asyncio."
            }
        ],
        "referensi": [
            {
                "judul": "Dokumentasi Asyncio",
                "url": "https://docs.python.org/3/library/asyncio.html"
            }
        ],
        "highlight": ["Coroutine", "Event loop"],
        "error": [
            {
                "error": "RuntimeError",
                "deskripsi": "Terjadi ketika event loop dijalankan lebih dari sekali.",
                "contoh": "asyncio.run(salam())\nasyncio.run(salam())",
                "solusi": "Pastikan event loop hanya dijalankan sekali."
            }
        ]
    }
]
