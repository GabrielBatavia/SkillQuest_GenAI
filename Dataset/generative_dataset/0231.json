[
  {
    "sumber": "realpython.com",
    "penulis": "Liam Hill",
    "tanggal": "2026-08-20",
    "judul": "Python Concurrency: Understanding Threading and Multiprocessing",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Concurrency", "Threading", "Multiprocessing", "Intermediate"],
    "konten": "Concurrency in Python allows you to execute multiple tasks concurrently...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of using threading\nimport threading\n\ndef print_numbers():\n    for i in range(1, 5):\n        print(f'Number: {i}')\n\n# Create a thread\nthread = threading.Thread(target=print_numbers)\n\n# Start the thread\nthread.start()\n\n# Join the thread\nthread.join()",
        "komentar": "Creates and starts a thread to print numbers concurrently."
      }
    ],
    "topik": [
      {
        "topik": "Concurrency dengan Threading dan Multiprocessing dalam Python",
        "deskripsi": "Menggunakan threading dan multiprocessing untuk menjalankan tugas secara konkuren dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Python Threading Documentation",
        "url": "https://docs.python.org/3/library/threading.html"
      },
      {
        "judul": "Python Multiprocessing Documentation",
        "url": "https://docs.python.org/3/library/multiprocessing.html"
      }
    ],
    "highlight": ["execute multiple tasks concurrently", "Python threading and multiprocessing"],
    "error": [
      {
        "error": "RuntimeError",
        "deskripsi": "RuntimeError occurred due to attempting to start a thread that has already been started.",
        "contoh": "thread.start()",
        "solusi": "Ensure threads are started only once or handle thread states appropriately."
      }
    ]
  },
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Zara Collins",
    "tanggal": "2026-09-05",
    "judul": "Python Matplotlib: Visualizing Data with Matplotlib",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Matplotlib", "Data Visualization", "Intermediate"],
    "konten": "Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "import matplotlib.pyplot as plt\n\n# Example of plotting a line chart\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, 8, 10]\nplt.plot(x, y)\nplt.xlabel('X-axis')\nplt.ylabel('Y-axis')\nplt.title('Line Chart')\nplt.show()",
        "komentar": "Plots a line chart using Matplotlib."
      }
    ],
    "topik": [
      {
        "topik": "Visualisasi Data dengan Matplotlib dalam Python",
        "deskripsi": "Menggunakan Matplotlib untuk membuat visualisasi statis, animasi, dan interaktif dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Matplotlib Documentation",
        "url": "https://matplotlib.org/stable/contents.html"
      }
    ],
    "highlight": ["comprehensive library for creating visualizations", "Matplotlib line chart"],
    "error": [
      {
        "error": "ImportError",
        "deskripsi": "ImportError occurred due to missing Matplotlib module.",
        "contoh": "import matplotlib.pyplot as plt",
        "solusi": "Ensure Matplotlib is installed using 'pip install matplotlib'."
      }
    ]
  }
]
