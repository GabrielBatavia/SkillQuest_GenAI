[
  {
    "sumber": "realpython.com",
    "penulis": "Bailey Harrison",
    "tanggal": "2027-05-05",
    "judul": "Python Regular Expressions: Understanding and Using Regex in Python",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Regular Expressions", "Regex", "Intermediate"],
    "konten": "Regular expressions (regex) in Python provide powerful pattern matching capabilities for text processing...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "import re\n\n# Example of using regex to find email addresses\ntext = 'Contact us at hello@example.com'\nmatch = re.search(r'[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}', text)\nif match:\n    print('Email found:', match.group())",
        "komentar": "Uses regex to search for and extract email addresses from text."
      }
    ],
    "topik": [
      {
        "topik": "Penggunaan Regular Expressions (Regex) dalam Python",
        "deskripsi": "Menggunakan regular expressions (regex) untuk pencocokan pola dan pemrosesan teks dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Python Regular Expression Documentation",
        "url": "https://docs.python.org/3/howto/regex.html"
      }
    ],
    "highlight": ["powerful pattern matching capabilities", "Python regex for email addresses"],
    "error": [
      {
        "error": "SyntaxError",
        "deskripsi": "SyntaxError occurred due to invalid regex pattern.",
        "contoh": "re.search('[a-z+', text)",
        "solusi": "Ensure regex patterns are correctly formatted and valid."
      }
    ]
  },
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Skylar Fisher",
    "tanggal": "2027-05-20",
    "judul": "Python Unit Testing: Writing and Running Tests with Pytest",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Unit Testing", "Pytest", "Intermediate"],
    "konten": "Pytest is a popular framework for writing and running unit tests in Python...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of writing a unit test with pytest\nimport pytest\n\ndef add(x, y):\n    return x + y\n\ndef test_add():\n    assert add(1, 2) == 3",
        "komentar": "Writes a unit test using pytest to verify the 'add' function."
      }
    ],
    "topik": [
      {
        "topik": "Penulisan dan Menjalankan Unit Testing dengan Pytest dalam Python",
        "deskripsi": "Menggunakan Pytest untuk menulis dan menjalankan unit testing dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Pytest Documentation",
        "url": "https://docs.pytest.org/en/latest/"
      }
    ],
    "highlight": ["popular framework for unit tests", "Pytest unit testing"],
    "error": [
      {
        "error": "AssertionError",
        "deskripsi": "AssertionError occurred due to failed assertion in unit test.",
        "contoh": "assert add(1, 2) == 4",
        "solusi": "Ensure assertions in unit tests match expected results."
      }
    ]
  }
]
