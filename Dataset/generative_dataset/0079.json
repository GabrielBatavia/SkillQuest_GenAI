{
    "sumber": "PythonMudah.com",
    "penulis": "Ahmad Maulana",
    "tanggal": "2023-08-12",
    "judul": "Memahami dan Menggunakan Operator Logika di Python",
    "tingkat_kesulitan": "Pemula",
    "tag": ["operator logika", "pemula"],
    "konten": "Artikel ini menjelaskan tentang penggunaan operator logika di Python. Operator logika digunakan untuk menggabungkan pernyataan kondisional dan mengembalikan nilai boolean.",
    "contoh": [
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "x = 5\ny = 10\nprint(x > 3 and y < 15)",
            "komentar": "Contoh penggunaan operator 'and' untuk memeriksa dua kondisi"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "x = 5\ny = 10\nprint(x > 3 or y > 15)",
            "komentar": "Contoh penggunaan operator 'or' untuk memeriksa setidaknya satu kondisi"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "x = 5\nprint(not(x > 3))",
            "komentar": "Contoh penggunaan operator 'not' untuk membalikkan kondisi"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "x = True\ny = False\nprint(x and y)\nprint(x or y)\nprint(not x)",
            "komentar": "Contoh penggunaan operator logika dengan nilai boolean langsung"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "a = 10\nb = 5\nc = 15\nprint((a > b) and (c > a))\nprint((a < b) or (c > a))\nprint(not (a == b))",
            "komentar": "Contoh gabungan penggunaan beberapa operator logika"
        }
    ],
    "topik": [
        {
            "topik": "Operator Logika",
            "deskripsi": "Cara menggunakan operator logika 'and', 'or', dan 'not' untuk menggabungkan pernyataan kondisional."
        },
        {
            "topik": "Operator And",
            "deskripsi": "Operator yang mengembalikan True hanya jika kedua kondisi bernilai True."
        },
        {
            "topik": "Operator Or",
            "deskripsi": "Operator yang mengembalikan True jika salah satu kondisi bernilai True."
        },
        {
            "topik": "Operator Not",
            "deskripsi": "Operator yang mengembalikan True jika kondisi bernilai False, dan sebaliknya."
        }
    ],
    "referensi": [
        {
            "judul": "Python Logical Operators - W3Schools",
            "url": "https://www.w3schools.com/python/python_operators.asp"
        },
        {
            "judul": "Understanding Logical Operators in Python - Real Python",
            "url": "https://realpython.com/python-conditional-statements/#logical-operators"
        }
    ],
    "highlight": [
        "Penjelasan dasar tentang operator logika",
        "Contoh-contoh praktis yang mudah dipahami"
    ],
    "error": [
        {
            "error": "TypeError",
            "deskripsi": "Kesalahan yang terjadi saat menggunakan tipe data yang tidak sesuai dengan operator logika.",
            "contoh": "print(5 and 'hello')",
            "solusi": "Pastikan operator logika digunakan dengan nilai boolean atau kondisi yang menghasilkan nilai boolean."
        },
        {
            "error": "SyntaxError",
            "deskripsi": "Kesalahan yang terjadi saat sintaks tidak sesuai dengan aturan Python.",
            "contoh": "print(not x > 3)",
            "solusi": "Pastikan untuk menggunakan tanda kurung untuk memperjelas kondisi dalam operator not, misalnya: print(not (x > 3))."
        }
    ]
}
