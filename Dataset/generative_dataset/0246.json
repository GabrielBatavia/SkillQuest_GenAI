[
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Riley James",
    "tanggal": "2027-11-20",
    "judul": "Python Deep Learning: Introduction to Neural Networks with Keras",
    "tingkat_kesulitan": "Lanjutan",
    "tag": ["Python", "Deep Learning", "Neural Networks", "Keras", "Advanced"],
    "konten": "Keras is a high-level neural networks API in Python that simplifies the process of building and training neural networks...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "import tensorflow as tf\nfrom tensorflow.keras import layers\n\n# Example of defining a simple neural network with Keras\nmodel = tf.keras.Sequential([\n    layers.Dense(64, activation='relu', input_shape=(784,)),\n    layers.Dense(10, activation='softmax')\n])\nmodel.summary()",
        "komentar": "Defines a simple neural network using Keras."
      }
    ],
    "topik": [
      {
        "topik": "Pengantar Neural Networks dengan Keras dalam Deep Learning Python",
        "deskripsi": "Menggunakan Keras untuk mempermudah proses pembuatan dan pelatihan neural networks dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Keras Documentation",
        "url": "https://keras.io/"
      }
    ],
    "highlight": ["high-level neural networks API", "Keras neural network definition"],
    "error": [
      {
        "error": "ImportError",
        "deskripsi": "ImportError occurred due to missing TensorFlow or Keras installation.",
        "contoh": "import tensorflow as tf",
        "solusi": "Ensure TensorFlow and Keras are installed correctly."
      }
    ]
  },
  {
    "sumber": "realpython.com",
    "penulis": "Kai Avery",
    "tanggal": "2027-12-05",
    "judul": "Python Testing: Introduction to Unit Testing with unittest",
    "tingkat_kesulitan": "Pemula",
    "tag": ["Python", "Testing", "Unit Testing", "Unittest", "Beginner"],
    "konten": "Unittest is a built-in Python module for testing Python code. It allows you to verify that individual units of your code work as expected...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of writing a simple unit test with unittest\nimport unittest\n\ndef add(a, b):\n    return a + b\n\nclass TestAdd(unittest.TestCase):\n    def test_add(self):\n        result = add(3, 5)\n        self.assertEqual(result, 8)\n\nif __name__ == '__main__':\n    unittest.main()",
        "komentar": "Writes a unit test using unittest to verify the add function."
      }
    ],
    "topik": [
      {
        "topik": "Pengantar Unit Testing dengan unittest dalam Python",
        "deskripsi": "Menggunakan unittest untuk memverifikasi bahwa unit-unit kode Python berfungsi seperti yang diharapkan."
      }
    ],
    "referensi": [
      {
        "judul": "Unittest Documentation",
        "url": "https://docs.python.org/3/library/unittest.html"
      }
    ],
    "highlight": ["built-in Python module for testing", "unittest for unit testing in Python"],
    "error": [
      {
        "error": "AssertionError",
        "deskripsi": "AssertionError occurred due to assertion failure in unit test.",
        "contoh": "self.assertEqual(result, expected)",
        "solusi": "Ensure assertions in unittests match expected outcomes."
      }
    ]
  }
]
