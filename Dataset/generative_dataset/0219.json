[
  {
    "sumber": "realpython.com",
    "penulis": "Sophia Green",
    "tanggal": "2026-11-20",
    "judul": "Python Concurrency: Concurrent Programming in Python",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Concurrency", "Multithreading", "Multiprocessing", "Intermediate"],
    "konten": "Concurrency in Python allows multiple tasks to run simultaneously...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of using threading for concurrency\nimport threading\n\ndef print_numbers():\n    for i in range(5):\n        print(i)\n\n# Create and start a thread\nthread = threading.Thread(target=print_numbers)\nthread.start()\nthread.join()",
        "komentar": "Uses threading to run a function concurrently."
      }
    ],
    "topik": [
      {
        "topik": "Pemrograman Concurrent dalam Python",
        "deskripsi": "Menggunakan concurrency untuk menjalankan beberapa tugas secara simultan dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Python Concurrency Documentation",
        "url": "https://docs.python.org/3/library/concurrency.html"
      }
    ],
    "highlight": ["allows multiple tasks to run simultaneously", "Python threading for concurrency"],
    "error": [
      {
        "error": "RuntimeError",
        "deskripsi": "RuntimeError occurred due to attempting to start thread multiple times.",
        "contoh": "thread.start()",
        "solusi": "Ensure threads are created and started only once."
      }
    ]
  },
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Finn Hughes",
    "tanggal": "2026-12-05",
    "judul": "Python Machine Learning: Introduction to Machine Learning with Python",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Machine Learning", "Introduction", "Intermediate"],
    "konten": "Machine learning in Python involves using algorithms that iteratively learn from data...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# Example of training a K-nearest neighbors classifier\niris = load_iris()\nX_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, random_state=0)\nknn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(X_train, y_train)\nscore = knn.score(X_test, y_test)\nprint(f'Accuracy: {score}')",
        "komentar": "Trains a K-nearest neighbors classifier on the Iris dataset and calculates accuracy."
      }
    ],
    "topik": [
      {
        "topik": "Pengantar Machine Learning dengan Python",
        "deskripsi": "Menggunakan algoritma machine learning untuk belajar secara iteratif dari data dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Scikit-learn Documentation",
        "url": "https://scikit-learn.org/stable/documentation.html"
      }
    ],
    "highlight": ["involves using algorithms that iteratively learn from data", "Python machine learning algorithms"],
    "error": [
      {
        "error": "ValueError",
        "deskripsi": "ValueError occurred due to mismatched dimensions in training data and labels.",
        "contoh": "knn.fit(X_train, y_train)",
        "solusi": "Ensure training data and labels have matching dimensions."
      }
    ]
  }
]
