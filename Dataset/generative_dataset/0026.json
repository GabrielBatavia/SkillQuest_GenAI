[
    {
        "sumber": "Python.org",
        "penulis": "Martin v. LÃ¶wis",
        "tanggal": "2020-05-08",
        "judul": "Membuat Paket Distribusi dengan Setuptools",
        "tingkat_kesulitan": "Menengah",
        "tag": [
            "python",
            "setuptools",
            "distribusi paket"
        ],
        "konten": "Artikel ini menjelaskan cara membuat dan mendistribusikan paket Python menggunakan setuptools.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "from setuptools import setup\n\nsetup(\n    name='mypackage',\n    version='0.1',\n    packages=['mypackage'],\n    install_requires=[],\n)",
                "komentar": "Contoh sederhana berkas setup.py untuk mendistribusikan paket Python."
            }
        ],
        "topik": [
            {
                "topik": "Setuptools",
                "deskripsi": "Paket yang digunakan untuk mendistribusikan dan mengelola paket Python."
            },
            {
                "topik": "Distribusi Paket",
                "deskripsi": "Proses membuat, mengelola, dan mendistribusikan paket Python."
            }
        ],
        "referensi": [
            {
                "judul": "Setuptools Documentation",
                "url": "https://setuptools.pypa.io/en/latest/"
            }
        ],
        "highlight": [
            "Distribusi Paket",
            "Setuptools"
        ],
        "error": [
            {
                "error": "DistutilsError",
                "deskripsi": "Kesalahan ini terjadi saat ada masalah dengan pengaturan distribusi.",
                "contoh": "setup(name='', version='0.1', packages=['mypackage'])",
                "solusi": "Pastikan semua argumen yang diperlukan untuk setup diberikan dengan benar."
            }
        ]
    },
    {
        "sumber": "Python.org",
        "penulis": "Barry Warsaw",
        "tanggal": "2023-04-01",
        "judul": "Pemrograman Fungsional di Python",
        "tingkat_kesulitan": "Lanjutan",
        "tag": [
            "python",
            "fungsional",
            "pemrograman"
        ],
        "konten": "Artikel ini membahas konsep pemrograman fungsional di Python termasuk penggunaan fungsi lambda dan map.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "squared = list(map(lambda x: x ** 2, [1, 2, 3, 4]))\nprint(squared)",
                "komentar": "Contoh penggunaan fungsi lambda dan map untuk mengkuadratkan setiap elemen dalam daftar."
            }
        ],
        "topik": [
            {
                "topik": "Lambda",
                "deskripsi": "Fungsi anonim yang dapat digunakan untuk operasi sederhana."
            },
            {
                "topik": "Map",
                "deskripsi": "Fungsi yang menerapkan fungsi tertentu ke setiap item dari iterable."
            }
        ],
        "referensi": [
            {
                "judul": "Functional Programming HOWTO",
                "url": "https://docs.python.org/3/howto/functional.html"
            }
        ],
        "highlight": [
            "Pemrograman Fungsional",
            "Fungsi Lambda"
        ],
        "error": [
            {
                "error": "TypeError",
                "deskripsi": "Kesalahan tipe terjadi saat operasi tidak didukung oleh tipe data yang digunakan.",
                "contoh": "map(lambda x: x ** 2, 'string')",
                "solusi": "Pastikan data yang diterapkan fungsi map adalah iterable yang sesuai."
            }
        ]
    }
]