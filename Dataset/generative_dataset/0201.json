[
  {
    "sumber": "realpython.com",
    "penulis": "Michaela Brown",
    "tanggal": "2025-08-10",
    "judul": "Python Decorators: Simplifying Functionality",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Decorators", "Intermediate"],
    "konten": "Decorators in Python allow you to modify the behavior of a function or class...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "def decorator_function(original_function):\n    def wrapper_function(*args, **kwargs):\n        print(f'Wrapper executed this before {original_function.__name__} function')\n        return original_function(*args, **kwargs)\n    return wrapper_function\n\n@decorator_function\ndef display():\n    print('Display function executed')\n\ndisplay()",
        "komentar": "Uses a decorator function to modify the behavior of another function."
      }
    ],
    "topik": [
      {
        "topik": "Decorator dalam Python",
        "deskripsi": "Menggunakan decorator untuk memodifikasi perilaku fungsi atau kelas dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Python Decorators Documentation",
        "url": "https://realpython.com/primer-on-python-decorators/"
      }
    ],
    "highlight": ["modify the behavior of a function", "Decorator"],
    "error": [
      {
        "error": "TypeError",
        "deskripsi": "TypeError occurred due to incompatible types in decorator.",
        "contoh": "@decorator_function(5)",
        "solusi": "Ensure decorator accepts correct arguments and types."
      }
    ]
  },
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Gabriel Clark",
    "tanggal": "2025-09-05",
    "judul": "Python Data Analysis: NumPy Essentials",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Data Analysis", "NumPy", "Intermediate"],
    "konten": "NumPy is a fundamental library in Python for numerical computing...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "import numpy as np\n\n# Create a NumPy array\narr = np.array([1, 2, 3, 4, 5])\nprint('Array:', arr)\n\n# Perform arithmetic operations on the array\nmean = np.mean(arr)\nprint('Mean:', mean)",
        "komentar": "Creates a NumPy array and performs arithmetic operations."
      }
    ],
    "topik": [
      {
        "topik": "Analisis Data dengan NumPy dalam Python",
        "deskripsi": "Menggunakan NumPy untuk komputasi numerik dan analisis data."
      }
    ],
    "referensi": [
      {
        "judul": "NumPy Documentation",
        "url": "https://numpy.org/doc/stable/"
      }
    ],
    "highlight": ["fundamental library for numerical computing", "NumPy"],
    "error": [
      {
        "error": "ValueError",
        "deskripsi": "ValueError occurred due to incorrect value passed to NumPy function.",
        "contoh": "np.array('abc')",
        "solusi": "Pass correct argument type and value to NumPy functions."
      }
    ]
  }
]
