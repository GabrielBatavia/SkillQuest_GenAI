[
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Hayden Grant",
    "tanggal": "2027-10-20",
    "judul": "Python Data Visualization: Creating Static Plots with Matplotlib",
    "tingkat_kesulitan": "Pemula",
    "tag": ["Python", "Data Visualization", "Matplotlib", "Pemula"],
    "konten": "Matplotlib is a widely-used library for creating static, animated, and interactive visualizations...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "import matplotlib.pyplot as plt\n\n# Example of plotting a line graph\nx = [1, 2, 3, 4, 5]\ny = [10, 20, 15, 25, 30]\nplt.plot(x, y)\nplt.xlabel('X-axis')\nplt.ylabel('Y-axis')\nplt.title('Line Graph')\nplt.show()",
        "komentar": "Plots a line graph using Matplotlib."
      }
    ],
    "topik": [
      {
        "topik": "Pembuatan Plot Statis dengan Matplotlib dalam Python",
        "deskripsi": "Menggunakan Matplotlib untuk membuat visualisasi plot statis, animasi, dan interaktif."
      }
    ],
    "referensi": [
      {
        "judul": "Matplotlib Documentation",
        "url": "https://matplotlib.org/stable/contents.html"
      }
    ],
    "highlight": ["widely-used library for creating visualizations", "Matplotlib line graph"],
    "error": [
      {
        "error": "TypeError",
        "deskripsi": "TypeError occurred due to incorrect data type used in plotting function.",
        "contoh": "plt.plot('x', 'y', data=df)",
        "solusi": "Ensure correct data types are used for plotting with Matplotlib."
      }
    ]
  },
  {
    "sumber": "realpython.com",
    "penulis": "Quinn Murphy",
    "tanggal": "2027-11-05",
    "judul": "Python Multithreading: Concurrent Programming with Threading in Python",
    "tingkat_kesulitan": "Lanjutan",
    "tag": ["Python", "Multithreading", "Threading", "Concurrent Programming", "Advanced"],
    "konten": "Threading in Python allows multiple threads to run concurrently, improving performance for tasks...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of using threading\nimport threading\n\n# Define a function for the thread\ndef print_numbers():\n    for i in range(1, 6):\n        print('Thread executing:', i)\n\n# Create two threads as follows\nthread1 = threading.Thread(target=print_numbers)\nthread2 = threading.Thread(target=print_numbers)\n\n# Start both threads\nthread1.start()\nthread2.start()\n\n# Join both threads\nthread1.join()\nthread2.join()",
        "komentar": "Uses threading to execute a function concurrently in Python."
      }
    ],
    "topik": [
      {
        "topik": "Pemrograman Concurrent dengan Threading dalam Python",
        "deskripsi": "Menggunakan threading untuk menjalankan tugas secara konkuren dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Python Threading Documentation",
        "url": "https://docs.python.org/3/library/threading.html"
      }
    ],
    "highlight": ["allows multiple threads to run concurrently", "Python threading"],
    "error": [
      {
        "error": "RuntimeError",
        "deskripsi": "RuntimeError occurred due to attempting to start an already started thread.",
        "contoh": "thread1.start()",
        "solusi": "Ensure threads are started only once and are not restarted."
      }
    ]
  }
]
