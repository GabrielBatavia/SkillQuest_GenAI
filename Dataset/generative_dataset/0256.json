[
  {
    "sumber": "medium.com",
    "penulis": "Aria Griffin",
    "tanggal": "2028-02-20",
    "judul": "Python Unit Testing: Getting Started with Pytest",
    "tingkat_kesulitan": "Pemula",
    "tag": ["Python", "Unit Testing", "Pytest", "Pemula"],
    "konten": "Pytest is a popular testing framework for Python that makes it easy to write simple yet scalable tests...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of a basic test using Pytest\nimport pytest\n\ndef add_numbers(a, b):\n    return a + b\n\ndef test_add_numbers():\n    assert add_numbers(3, 5) == 8",
        "komentar": "Defines and tests a function using Pytest."
      }
    ],
    "topik": [
      {
        "topik": "Memulai Unit Testing dengan Pytest dalam Python",
        "deskripsi": "Menggunakan Pytest untuk menulis dan menjalankan tes dalam Python secara efisien."
      }
    ],
    "referensi": [
      {
        "judul": "Pytest Documentation",
        "url": "https://docs.pytest.org/en/latest/"
      }
    ],
    "highlight": ["popular testing framework for Python", "Pytest unit testing"],
    "error": [
      {
        "error": "AssertionError",
        "deskripsi": "AssertionError occurred due to assertion failure in test function.",
        "contoh": "assert add_numbers(3, 5) == 8",
        "solusi": "Ensure expected and actual values match in test assertions."
      }
    ]
  },
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Arlo Peters",
    "tanggal": "2028-03-05",
    "judul": "Python Machine Learning: Introduction to Scikit-Learn",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Machine Learning", "Scikit-Learn", "Intermediate"],
    "konten": "Scikit-Learn is a widely-used Python library for machine learning that provides simple and efficient tools...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "from sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# Example of using K-Nearest Neighbors (KNN) algorithm\niris = datasets.load_iris()\nX_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.2, random_state=42)\nmodel = KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X_train, y_train)\nscore = model.score(X_test, y_test)\nprint('Accuracy:', score)",
        "komentar": "Uses Scikit-Learn to implement the K-Nearest Neighbors (KNN) algorithm for classification."
      }
    ],
    "topik": [
      {
        "topik": "Pengantar Scikit-Learn dalam Machine Learning dengan Python",
        "deskripsi": "Menggunakan Scikit-Learn untuk alat dan teknik machine learning yang efisien dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Scikit-Learn Documentation",
        "url": "https://scikit-learn.org/stable/documentation.html"
      }
    ],
    "highlight": ["widely-used Python library for machine learning", "Scikit-Learn K-Nearest Neighbors"],
    "error": [
      {
        "error": "ValueError",
        "deskripsi": "ValueError occurred due to incompatible shapes of input data in machine learning model.",
        "contoh": "model.fit(X_train, y_train)",
        "solusi": "Ensure input data has compatible shapes for model training."
      }
    ]
  }
]
