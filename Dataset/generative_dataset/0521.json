{
    "sumber": "PythonInsights.com",
    "penulis": "Nadia Fitria",
    "tanggal": "2025-10-05",
    "judul": "Penggunaan Boolean di Python: Konsep dan Contoh",
    "tingkat_kesulitan": "Pemula",
    "tag": ["boolean", "python", "pemula"],
    "konten": "Artikel ini memberikan pemahaman tentang boolean di Python, termasuk cara membuat variabel boolean, menggunakan operator logika, dan penerapannya dalam berbagai konteks pemrograman.",
    "contoh": [
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Membuat variabel boolean\nis_active = True\nis_inactive = False\nprint('Is active?', is_active)\nprint('Is inactive?', is_inactive)",
            "komentar": "Contoh sederhana membuat dan mencetak variabel boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan operator logika NOT dan AND\nis_sunny = True\nis_rainy = False\ncan_go_outside = is_sunny and not is_rainy\nprint('Can go outside?', can_go_outside)",
            "komentar": "Menggunakan operator logika NOT dan AND dengan variabel boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan operator logika OR\nis_holiday = False\nis_weekend = True\ncan_rest = is_holiday or is_weekend\nprint('Can rest?', can_rest)",
            "komentar": "Menggunakan operator logika OR dengan variabel boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan boolean dalam kondisi if-else\nis_logged_in = False\nif is_logged_in:\n    print('Welcome back!')\nelse:\n    print('Please log in.')",
            "komentar": "Menggunakan variabel boolean dalam pernyataan if-else"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan boolean dari perbandingan angka\nage = 21\nis_adult = age >= 18\nprint('Is adult?', is_adult)",
            "komentar": "Menggunakan hasil perbandingan angka sebagai boolean"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan fungsi any() dan all()\nrequirements = [True, True, False]\nall_met = all(requirements)\nany_met = any(requirements)\nprint('All requirements met?', all_met)\nprint('Any requirement met?', any_met)",
            "komentar": "Menggunakan fungsi any() dan all() untuk memeriksa boolean dari elemen dalam list"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan fungsi bool() untuk konversi\nvalue1 = 0\nvalue2 = 'Hello'\nvalue3 = []\nvalue4 = [1, 2, 3]\nprint('bool(0):', bool(value1))\nprint('bool(\"Hello\"):', bool(value2))\nprint('bool([]):', bool(value3))\nprint('bool([1, 2, 3]):', bool(value4))",
            "komentar": "Menggunakan fungsi bool() untuk memeriksa nilai boolean dari berbagai tipe data"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan boolean dalam perulangan for\nnumbers = [10, 20, 30, 40, 50]\nfor num in numbers:\n    is_even = (num % 2 == 0)\n    if is_even:\n        print(f'{num} is even')\n    else:\n        print(f'{num} is odd')",
            "komentar": "Menggunakan variabel boolean dalam perulangan for"
        }
    ],
    "topik": [
        {
            "topik": "Membuat Variabel Boolean",
            "deskripsi": "Cara membuat dan mencetak variabel boolean di Python."
        },
        {
            "topik": "Operator Logika NOT dan AND",
            "deskripsi": "Cara menggunakan operator logika NOT dan AND dengan variabel boolean."
        },
        {
            "topik": "Operator Logika OR",
            "deskripsi": "Cara menggunakan operator logika OR dengan variabel boolean."
        },
        {
            "topik": "Boolean dalam Kondisi If-Else",
            "deskripsi": "Cara menggunakan variabel boolean dalam pernyataan if-else."
        },
        {
            "topik": "Boolean dari Perbandingan Angka",
            "deskripsi": "Cara menggunakan hasil perbandingan angka sebagai boolean."
        },
        {
            "topik": "Fungsi any() dan all()",
            "deskripsi": "Cara menggunakan fungsi any() dan all() untuk memeriksa boolean dari elemen dalam list."
        },
        {
            "topik": "Fungsi bool()",
            "deskripsi": "Cara menggunakan fungsi bool() untuk memeriksa nilai boolean dari berbagai tipe data."
        },
        {
            "topik": "Boolean dalam Perulangan For",
            "deskripsi": "Cara menggunakan variabel boolean dalam perulangan for."
        }
    ],
    "referensi": [
        {
            "judul": "Python Booleans - W3Schools",
            "url": "https://www.w3schools.com/python/python_booleans.asp"
        },
        {
            "judul": "Boolean in Python - GeeksforGeeks",
            "url": "https://www.geeksforgeeks.org/boolean-in-python/"
        }
    ],
    "highlight": [
        "Penjelasan dasar tentang boolean di Python",
        "Contoh-contoh praktis yang mudah dipahami dengan penjelasan konteks yang lebih lengkap",
        "Insight tentang berbagai metode yang bisa digunakan untuk memanipulasi boolean di Python"
    ],
    "error": [
        {
            "error": "TypeError",
            "deskripsi": "Kesalahan yang terjadi saat mencoba menggunakan nilai non-boolean dalam konteks yang membutuhkan boolean.",
            "contoh": "is_enabled = 'yes'\nif is_enabled:\n    print('Enabled')",
            "solusi": "Pastikan nilai yang digunakan dalam konteks boolean adalah nilai boolean atau konversi nilai ke boolean menggunakan bool()."
        },
        {
            "error": "NameError",
            "deskripsi": "Kesalahan yang terjadi saat variabel boolean tidak didefinisikan.",
            "contoh": "if is_complete:\n    print('Complete')",
            "solusi": "Pastikan variabel boolean sudah didefinisikan sebelum digunakan."
        }
    ]
}
