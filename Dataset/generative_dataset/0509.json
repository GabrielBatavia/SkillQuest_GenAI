{
    "sumber": "PythonCodeMaster.com",
    "penulis": "Andi Susanto",
    "tanggal": "2025-07-20",
    "judul": "Teknik Manipulasi Strings di Python untuk Pemula",
    "tingkat_kesulitan": "Pemula",
    "tag": ["strings", "python", "pemula"],
    "konten": "Artikel ini menjelaskan berbagai teknik untuk memanipulasi strings di Python, termasuk metode bawaan yang dapat digunakan untuk memanipulasi dan mengelola strings.",
    "contoh": [
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Membuat string\nteks = 'Python sangat fleksibel!'\nprint('Teks:', teks)\nprint('Tipe data:', type(teks))",
            "komentar": "Contoh sederhana membuat dan mencetak string"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan metode upper() dan lower()\nteks = 'Belajar Python Sangat Menyenangkan'\nteks_upper = teks.upper()\nteks_lower = teks.lower()\nprint('Uppercase:', teks_upper)\nprint('Lowercase:', teks_lower)",
            "komentar": "Mengubah string menjadi huruf besar dan huruf kecil menggunakan metode upper() dan lower()"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan metode strip()\nteks = '   Banyak Spasi   '\nteks_strip = teks.strip()\nprint('Strip:', teks_strip)",
            "komentar": "Menghapus spasi di awal dan akhir string menggunakan metode strip()"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan metode splitlines()\nteks = 'Baris 1\nBaris 2\nBaris 3'\nbaris_list = teks.splitlines()\nprint('Splitlines:', baris_list)",
            "komentar": "Memisahkan string berdasarkan baris baru menggunakan metode splitlines()"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan metode format() dengan nama variabel\nnama = 'Sari'\numur = 25\ninfo = 'Nama saya {nama} dan saya berusia {umur} tahun.'.format(nama=nama, umur=umur)\nprint(info)",
            "komentar": "Menggunakan metode format() untuk menyisipkan variabel dalam string berdasarkan nama variabel"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan metode isdigit()\nteks = '123456'\nis_digit = teks.isdigit()\nprint('Apakah teks hanya berisi angka?', is_digit)",
            "komentar": "Memeriksa apakah semua karakter dalam string adalah angka menggunakan metode isdigit()"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Menggunakan metode ljust()\nangka = '89'\nangka_ljust = angka.ljust(5, '0')\nprint('Ljust:', angka_ljust)",
            "komentar": "Menambahkan karakter di sebelah kanan string hingga mencapai panjang tertentu menggunakan metode ljust()"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "# Mengakses substring dengan slicing\nteks = 'Pemrograman Python sangat mengasyikkan'\nsubstring = teks[12:18]\nprint('Substring:', substring)",
            "komentar": "Mengakses substring dalam string menggunakan teknik slicing"
        }
    ],
    "topik": [
        {
            "topik": "Membuat String",
            "deskripsi": "Cara membuat dan mencetak string di Python."
        },
        {
            "topik": "Metode upper() dan lower()",
            "deskripsi": "Cara mengubah string menjadi huruf besar dan huruf kecil menggunakan metode upper() dan lower()."
        },
        {
            "topik": "Metode strip()",
            "deskripsi": "Cara menghapus spasi di awal dan akhir string menggunakan metode strip()."
        },
        {
            "topik": "Metode splitlines()",
            "deskripsi": "Cara memisahkan string berdasarkan baris baru menggunakan metode splitlines()."
        },
        {
            "topik": "Metode format() dengan Nama Variabel",
            "deskripsi": "Cara menggunakan metode format() untuk menyisipkan variabel dalam string berdasarkan nama variabel."
        },
        {
            "topik": "Metode isdigit()",
            "deskripsi": "Cara memeriksa apakah semua karakter dalam string adalah angka menggunakan metode isdigit()."
        },
        {
            "topik": "Metode ljust()",
            "deskripsi": "Cara menambahkan karakter di sebelah kanan string hingga mencapai panjang tertentu menggunakan metode ljust()."
        },
        {
            "topik": "Slicing",
            "deskripsi": "Cara mengakses substring dalam string menggunakan teknik slicing."
        }
    ],
    "referensi": [
        {
            "judul": "Python Strings - W3Schools",
            "url": "https://www.w3schools.com/python/python_strings.asp"
        },
        {
            "judul": "Python String Methods - GeeksforGeeks",
            "url": "https://www.geeksforgeeks.org/python-string-methods/"
        }
    ],
    "highlight": [
        "Penjelasan dasar tentang strings di Python",
        "Contoh-contoh praktis yang mudah dipahami dengan penjelasan konteks yang lebih lengkap",
        "Insight tentang berbagai metode yang bisa digunakan untuk memanipulasi strings di Python"
    ],
    "error": [
        {
            "error": "IndexError",
            "deskripsi": "Kesalahan yang terjadi saat mencoba mengakses indeks yang tidak ada dalam string.",
            "contoh": "teks = 'Python'\nkarakter = teks[10]",
            "solusi": "Pastikan indeks yang diakses berada dalam rentang panjang string."
        },
        {
            "error": "TypeError",
            "deskripsi": "Kesalahan yang terjadi saat mencoba menggabungkan string dengan tipe data non-string.",
            "contoh": "nama = 'Andi'\numur = 30\ninfo = nama + umur",
            "solusi": "Konversi tipe data non-string ke string sebelum menggabungkan."
        }
    ]
}
