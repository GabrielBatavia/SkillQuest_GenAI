{
    "sumber": "PythonID.org",
    "penulis": "Ahmad Maulana",
    "tanggal": "2023-06-15",
    "judul": "Memahami dan Menggunakan Loop While di Python",
    "tingkat_kesulitan": "Pemula",
    "tag": ["loop while", "pemula"],
    "konten": "Artikel ini menjelaskan tentang penggunaan loop while di Python. Loop while digunakan untuk mengulang eksekusi blok kode selama kondisi tertentu terpenuhi.",
    "contoh": [
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "i = 1\nwhile i < 6:\n    print(i)\n    i += 1",
            "komentar": "Contoh dasar loop while yang mencetak angka dari 1 hingga 5"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "i = 1\nwhile i < 10:\n    if i % 2 == 0:\n        print(i)\n    i += 1",
            "komentar": "Contoh loop while dengan kondisi if untuk mencetak angka genap kurang dari 10"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "i = 10\nwhile i > 0:\n    print(i)\n    i -= 1\nprint('Blastoff!')",
            "komentar": "Contoh loop while untuk countdown dari 10 hingga 1 diikuti dengan mencetak 'Blastoff!'"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "i = 0\nwhile i < 5:\n    print('Python is fun!')\n    i += 1",
            "komentar": "Contoh loop while yang mencetak 'Python is fun!' sebanyak 5 kali"
        },
        {
            "tipe": "kode",
            "bahasa": "python",
            "isi": "i = 1\nwhile i <= 3:\n    print(f'This is iteration number {i}')\n    i += 1",
            "komentar": "Contoh loop while dengan f-string untuk mencetak nomor iterasi"
        }
    ],
    "topik": [
        {
            "topik": "Loop While",
            "deskripsi": "Cara menggunakan loop while untuk mengulang eksekusi blok kode selama kondisi tertentu terpenuhi."
        },
        {
            "topik": "Kondisi Loop",
            "deskripsi": "Cara menentukan kondisi yang harus dipenuhi agar loop while terus berjalan."
        },
        {
            "topik": "Increment dan Decrement",
            "deskripsi": "Cara menambah atau mengurangi variabel counter dalam loop while."
        }
    ],
    "referensi": [
        {
            "judul": "Python While Loops - W3Schools",
            "url": "https://www.w3schools.com/python/python_while_loops.asp"
        },
        {
            "judul": "Mastering While Loops in Python - Real Python",
            "url": "https://realpython.com/python-while-loop/"
        }
    ],
    "highlight": [
        "Penjelasan dasar tentang loop while",
        "Contoh-contoh praktis yang mudah dipahami"
    ],
    "error": [
        {
            "error": "Infinite Loop",
            "deskripsi": "Kesalahan yang terjadi saat kondisi loop while selalu terpenuhi sehingga loop berjalan tanpa henti.",
            "contoh": "i = 1\nwhile i > 0:\n    print(i)\n    i += 1",
            "solusi": "Pastikan kondisi loop eventually menjadi False dengan memperbarui variabel counter atau menambahkan kondisi penghentian."
        },
        {
            "error": "IndentationError",
            "deskripsi": "Kesalahan yang terjadi saat indentasi dalam blok loop while tidak konsisten.",
            "contoh": "i = 1\nwhile i < 6:\nprint(i)\ni += 1",
            "solusi": "Pastikan semua baris dalam blok loop while memiliki indentasi yang sama."
        }
    ]
}
