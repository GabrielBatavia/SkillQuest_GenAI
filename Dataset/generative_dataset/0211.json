[
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Aria Wright",
    "tanggal": "2026-03-20",
    "judul": "Python Iterators and Generators: Enhancing Efficiency with Iteration",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Iterators", "Generators", "Efficiency", "Intermediate"],
    "konten": "Iterators and generators in Python provide efficient ways to iterate over data...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of a generator\ndef square_numbers(nums):\n    for num in nums:\n        yield num ** 2\n\n# Generate squares of numbers 1 to 5\nmy_nums = square_numbers([1, 2, 3, 4, 5])\nprint(list(my_nums))",
        "komentar": "Defines a generator function to yield squares of numbers."
      }
    ],
    "topik": [
      {
        "topik": "Iterators dan Generators dalam Python",
        "deskripsi": "Menggunakan iterators dan generators untuk meningkatkan efisiensi iterasi data dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Python Iterators Documentation",
        "url": "https://docs.python.org/3/tutorial/classes.html#iterators"
      }
    ],
    "highlight": ["efficient ways to iterate over data", "Python iterators and generators"],
    "error": [
      {
        "error": "TypeError",
        "deskripsi": "TypeError occurred due to passing non-iterable object to iterator function.",
        "contoh": "my_nums = square_numbers(10)",
        "solusi": "Ensure iterable objects (like lists or tuples) are passed to iterator functions."
      }
    ]
  },
  {
    "sumber": "realpython.com",
    "penulis": "Daniel Miller",
    "tanggal": "2026-04-05",
    "judul": "Python File Handling: Reading and Writing Files",
    "tingkat_kesulitan": "Pemula",
    "tag": ["Python", "File Handling", "Reading Files", "Writing Files", "Pemula"],
    "konten": "File handling in Python allows you to read from and write to files...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of reading from a file\nwith open('example.txt', 'r') as file:\n    content = file.read()\n    print(content)\n\n# Example of writing to a file\nwith open('example.txt', 'w') as file:\n    file.write('Hello, World!')",
        "komentar": "Reads from and writes to a file using Python file handling."
      }
    ],
    "topik": [
      {
        "topik": "Penanganan File (File Handling) dalam Python",
        "deskripsi": "Menggunakan file handling untuk membaca dan menulis ke file dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Python File Handling Documentation",
        "url": "https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files"
      }
    ],
    "highlight": ["read from and write to files", "Python file handling"],
    "error": [
      {
        "error": "FileNotFoundError",
        "deskripsi": "FileNotFoundError occurred due to accessing non-existent file.",
        "contoh": "with open('nonexistent.txt', 'r') as file:",
        "solusi": "Ensure file exists at specified path or handle FileNotFoundError gracefully."
      }
    ]
  }
]
