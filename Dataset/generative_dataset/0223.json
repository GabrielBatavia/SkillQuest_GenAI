[
  {
    "sumber": "towardsdatascience.com",
    "penulis": "Ethan Butler",
    "tanggal": "2026-08-05",
    "judul": "Python Pandas: Introduction to Data Analysis with Pandas",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Pandas", "Data Analysis", "Intermediate"],
    "konten": "Pandas is a powerful library for data analysis and manipulation in Python...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "import pandas as pd\n\n# Example of creating a DataFrame\ndata = {'Name': ['John', 'Anna', 'Peter'], 'Age': [28, 35, 42]}\ndf = pd.DataFrame(data)\nprint(df)",
        "komentar": "Creates a Pandas DataFrame from a dictionary."
      }
    ],
    "topik": [
      {
        "topik": "Analisis Data dengan Pandas dalam Python",
        "deskripsi": "Menggunakan Pandas untuk analisis dan manipulasi data dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Pandas Documentation",
        "url": "https://pandas.pydata.org/docs/"
      }
    ],
    "highlight": ["powerful library for data analysis and manipulation", "Python Pandas DataFrame creation"],
    "error": [
      {
        "error": "KeyError",
        "deskripsi": "KeyError occurred due to accessing non-existent key in dictionary.",
        "contoh": "print(data['Height'])",
        "solusi": "Ensure key 'Height' exists in dictionary before accessing."
      }
    ]
  },
  {
    "sumber": "realpython.com",
    "penulis": "Sophie Richardson",
    "tanggal": "2026-08-20",
    "judul": "Python Concurrency: Understanding Parallelism and Concurrency in Python",
    "tingkat_kesulitan": "Menengah",
    "tag": ["Python", "Concurrency", "Parallelism", "Concurrency Control", "Intermediate"],
    "konten": "Concurrency in Python allows you to run multiple tasks at the same time...",
    "contoh": [
      {
        "tipe": "Code Example",
        "bahasa": "Python",
        "isi": "# Example of using threading\nimport threading\n\ndef print_numbers():\n    for i in range(1, 6):\n        print('Number:', i)\n\n# Create a thread\nthread = threading.Thread(target=print_numbers)\n\n# Start the thread\nthread.start()\n\n# Wait for the thread to complete\nthread.join()",
        "komentar": "Creates and starts a thread to print numbers."
      }
    ],
    "topik": [
      {
        "topik": "Concurrency dalam Python",
        "deskripsi": "Menggunakan konsep concurrency untuk menjalankan beberapa tugas secara bersamaan dalam Python."
      }
    ],
    "referensi": [
      {
        "judul": "Python Threading Documentation",
        "url": "https://docs.python.org/3/library/threading.html"
      }
    ],
    "highlight": ["run multiple tasks at the same time", "Python threading example"],
    "error": [
      {
        "error": "RuntimeError",
        "deskripsi": "RuntimeError occurred due to attempting to start already started thread.",
        "contoh": "thread.start()",
        "solusi": "Ensure threads are started only once or handle thread states appropriately."
      }
    ]
  }
]
