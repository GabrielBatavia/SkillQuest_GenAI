[
    {
        "sumber": "Blog Python Pemula",
        "penulis": "Dewi Lestari",
        "tanggal": "2023-05-12",
        "judul": "Memulai dengan Python: Panduan Dasar",
        "tingkat_kesulitan": "Pemula",
        "tag": ["pemula", "dasar", "python"],
        "konten": "Artikel ini menjelaskan langkah-langkah dasar untuk memulai belajar Python, termasuk instalasi dan menulis skrip sederhana.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "print('Hello, World!')",
                "komentar": "Kode ini mencetak 'Hello, World!' ke layar."
            }
        ],
        "topik": [
            {
                "topik": "Instalasi Python",
                "deskripsi": "Cara mengunduh dan menginstal Python di berbagai sistem operasi."
            }
        ],
        "referensi": [
            {
                "judul": "Panduan Resmi Python",
                "url": "https://docs.python.org/3/installation/"
            }
        ],
        "highlight": ["Instalasi mudah", "Sintaks sederhana"],
        "error": [
            {
                "error": "SyntaxError",
                "deskripsi": "Terjadi ketika ada kesalahan dalam penulisan kode.",
                "contoh": "print('Hello World!)",
                "solusi": "Pastikan semua tanda kutip dan kurung ditutup dengan benar."
            }
        ]
    },
    {
        "sumber": "BelajarPython.com",
        "penulis": "Ahmad Fauzi",
        "tanggal": "2022-11-20",
        "judul": "Pemrograman Berorientasi Objek dengan Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["OOP", "kelas", "python"],
        "konten": "Artikel ini membahas konsep dasar pemrograman berorientasi objek (OOP) dan bagaimana menerapkannya dalam Python.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "class Hewan:\n    def __init__(self, nama):\n        self.nama = nama\n\nkucing = Hewan('Kucing')\nprint(kucing.nama)",
                "komentar": "Kode ini mendefinisikan kelas Hewan dan membuat objek kucing dengan nama 'Kucing'."
            }
        ],
        "topik": [
            {
                "topik": "Kelas dan Objek",
                "deskripsi": "Penjelasan tentang kelas dan objek dalam Python."
            }
        ],
        "referensi": [
            {
                "judul": "Tutorial OOP Python",
                "url": "https://realpython.com/python3-object-oriented-programming/"
            }
        ],
        "highlight": ["Modularisasi kode", "Penggunaan kembali kode"],
        "error": [
            {
                "error": "AttributeError",
                "deskripsi": "Terjadi ketika mencoba mengakses atribut yang tidak ada.",
                "contoh": "print(kucing.umur)",
                "solusi": "Pastikan atribut yang diakses sudah didefinisikan dalam kelas."
            }
        ]
    },
    {
        "sumber": "KodeKita",
        "penulis": "Siti Nurhaliza",
        "tanggal": "2023-08-15",
        "judul": "Menggunakan Fungsi dalam Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["fungsi", "def", "python"],
        "konten": "Artikel ini mengajarkan cara mendefinisikan dan menggunakan fungsi dalam Python, termasuk argumen dan pengembalian nilai.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "def tambah(a, b):\n    return a + b\n\nhasil = tambah(3, 4)\nprint(hasil)",
                "komentar": "Fungsi tambah menambahkan dua angka dan mengembalikan hasilnya."
            }
        ],
        "topik": [
            {
                "topik": "Definisi Fungsi",
                "deskripsi": "Cara mendefinisikan fungsi menggunakan kata kunci def."
            }
        ],
        "referensi": [
            {
                "judul": "Fungsi di Python",
                "url": "https://docs.python.org/3/tutorial/controlflow.html#defining-functions"
            }
        ],
        "highlight": ["Penggunaan fungsi", "Argumen fungsi"],
        "error": [
            {
                "error": "TypeError",
                "deskripsi": "Terjadi ketika fungsi dipanggil dengan jumlah atau tipe argumen yang salah.",
                "contoh": "tambah(3)",
                "solusi": "Pastikan jumlah dan tipe argumen yang dikirim sesuai dengan definisi fungsi."
            }
        ]
    },
    {
        "sumber": "PythonExpert",
        "penulis": "Budi Santoso",
        "tanggal": "2023-01-05",
        "judul": "Manipulasi String di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["string", "manipulasi", "python"],
        "konten": "Artikel ini membahas berbagai cara untuk memanipulasi string dalam Python, seperti penggabungan, pemotongan, dan format.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "nama = 'Python'\nselamat = 'Selamat belajar, ' + nama + '!'\nprint(selamat)",
                "komentar": "Kode ini menggabungkan string menggunakan operator +."
            }
        ],
        "topik": [
            {
                "topik": "Penggabungan String",
                "deskripsi": "Cara menggabungkan beberapa string menjadi satu."
            }
        ],
        "referensi": [
            {
                "judul": "Manipulasi String di Python",
                "url": "https://realpython.com/python-string-split-concatenate/"
            }
        ],
        "highlight": ["Penggabungan string", "Format string"],
        "error": [
            {
                "error": "TypeError",
                "deskripsi": "Terjadi ketika mencoba menggabungkan string dengan tipe data lain tanpa konversi.",
                "contoh": "nama = 'Python'\numur = 30\nselamat = 'Selamat belajar, ' + nama + '! Anda berusia ' + umur + ' tahun.'",
                "solusi": "Gunakan fungsi str() untuk mengonversi tipe data lain menjadi string sebelum penggabungan."
            }
        ]
    },
    {
        "sumber": "AdvancedPython",
        "penulis": "Rahmat Hidayat",
        "tanggal": "2022-12-30",
        "judul": "Pemrograman Asinkron dengan Asyncio",
        "tingkat_kesulitan": "Lanjutan",
        "tag": ["asyncio", "asinkron", "python"],
        "konten": "Artikel ini menjelaskan konsep pemrograman asinkron di Python menggunakan modul asyncio, termasuk coroutine dan event loop.",
        "contoh": [
            {
                "tipe": "kode",
                "bahasa": "python",
                "isi": "import asyncio\n\nasync def salam():\n    await asyncio.sleep(1)\n    print('Hello, World!')\n\nasyncio.run(salam())",
                "komentar": "Kode ini menggunakan asyncio untuk menunda eksekusi selama 1 detik sebelum mencetak 'Hello, World!'."
            }
        ],
        "topik": [
            {
                "topik": "Coroutine",
                "deskripsi": "Penjelasan tentang coroutine dan cara kerjanya dalam asyncio."
            }
        ],
        "referensi": [
            {
                "judul": "Dokumentasi Asyncio",
                "url": "https://docs.python.org/3/library/asyncio.html"
            }
        ],
        "highlight": ["Coroutine", "Event loop"],
        "error": [
            {
                "error": "RuntimeError",
                "deskripsi": "Terjadi ketika event loop dijalankan lebih dari sekali.",
                "contoh": "asyncio.run(salam())\nasyncio.run(salam())",
                "solusi": "Pastikan event loop hanya dijalankan sekali."
            }
        ]
    }
]
