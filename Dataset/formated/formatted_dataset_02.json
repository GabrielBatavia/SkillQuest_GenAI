[
    {
        "source": "Python Tutorial",
        "title": "yang",
        "content": "Python adalah salah satu bahasa pemrograman yang sangat populer dan sering digunakan oleh banyak programmer di seluruh dunia. Salah satu alasan utama popularitasnya adalah karena sintaks yang sederhana dan mudah dipahami. Python sangat cocok untuk pemula yang baru mulai belajar pemrograman, tetapi juga kuat dan serbaguna untuk pengembang yang lebih berpengalaman.",
        "examples": [],
        "topics": [
            "salah",
            "satu",
            "dunia",
            "dan",
            "Python",
            "adalah",
            "bahasa",
            "populer",
            "sering"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Python",
        "content": "Dalam Python, segala sesuatu adalah objek, termasuk angka dan fungsi. Ini membuat Python menjadi bahasa yang sangat fleksibel. Berikut adalah contoh sederhana dari bagaimana kita dapat menggunakan variabel dan tipe data dasar dalam Python:",
        "examples": [],
        "topics": [
            "segala",
            "objek",
            "termasuk",
            "fungsi",
            "Dalam",
            "sesuatu",
            "angka",
            "adalah",
            "dan"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "John",
        "content": "```python # Menginisialisasi variabel nama = \"John\" umur = 25 tinggi = 180.5",
        "examples": [],
        "topics": [
            "python",
            "umur",
            "tinggi",
            "Menginisialisasi",
            "nama",
            "variabel"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Menampilkan",
        "content": "# Menampilkan variabel print print print Python juga mendukung berbagai tipe data kompleks seperti list, tuple, dan dictionary. List adalah koleksi yang dapat diubah dan terurut, sedangkan tuple adalah koleksi yang tidak dapat diubah. Dictionary adalah koleksi pasangan kunci-nilai yang tidak terurut.",
        "examples": [],
        "topics": [
            "print",
            "Python",
            "koleksi",
            "adalah",
            "yang",
            "terurut",
            "list",
            "tuple",
            "dan"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "print",
        "content": "# Contoh list buah =  print",
        "examples": [],
        "topics": [
            "Contoh",
            "buah",
            "list"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "print",
        "content": "# Contoh tuple warna =  print",
        "examples": [],
        "topics": [
            "Contoh",
            "warna",
            "tuple"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Ayu",
        "content": "# Contoh dictionary mahasiswa = {\"nama\": \"Ayu\", \"jurusan\": \"Informatika\", \"angkatan\": 2020} print Python juga mendukung pemrograman berorientasi objek . Dalam OOP, kita dapat mendefinisikan kelas yang merupakan cetak biru untuk objek.",
        "examples": [],
        "topics": [
            "Informatika",
            "nama",
            "jurusan",
            "angkatan",
            "Contoh",
            "Dalam",
            "OOP",
            "objek",
            "Python"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "def",
        "content": "# Mendefinisikan kelas class Mahasiswa: def __init__: self.nama = nama self.jurusan = jurusan self.angkatan = angkatan",
        "examples": [],
        "topics": [
            "init",
            "self.nama",
            "angkatan",
            "Mendefinisikan",
            "Mahasiswa",
            "nama",
            "self.jurusan",
            "jurusan",
            "self.angkatan"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "print",
        "content": "def tampilkan_info: print print print",
        "examples": [],
        "topics": [
            "info",
            "def",
            "tampilkan"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Mahasiswa",
        "content": "# Membuat objek dari kelas Mahasiswa mahasiswa1 = Mahasiswa mahasiswa1.tampilkan_info Dengan Python, kita juga dapat melakukan banyak hal seperti pengolahan data, pengembangan web, otomatisasi tugas, dan banyak lagi. Python memiliki banyak pustaka yang kuat seperti NumPy, Pandas, dan Matplotlib untuk analisis data, Django dan Flask untuk pengembangan web, dan Selenium untuk otomatisasi web.",
        "examples": [],
        "topics": [
            "web",
            "Membuat",
            "Dengan",
            "dan",
            "data",
            "Python",
            "banyak",
            "pengembangan",
            "info"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "File 2: `dataset_part2.txt`",
        "content": "",
        "examples": [],
        "topics": []
    },
    {
        "source": "Python Tutorial",
        "title": "Python",
        "content": "Pemrograman dengan Python sangat efisien karena banyaknya pustaka dan framework yang tersedia. Sebagai contoh, dalam pengolahan data, kita dapat menggunakan pustaka Pandas yang menyediakan struktur data dan alat analisis yang sangat kuat. Pandas sangat membantu dalam menangani data berukuran besar dan kompleks dengan cara yang intuitif dan efisien.",
        "examples": [],
        "topics": [
            "dan",
            "yang",
            "sangat",
            "Pemrograman",
            "tersedia",
            "pustaka",
            "Pandas",
            "data",
            "karena"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "import",
        "content": "import pandas as pd",
        "examples": [],
        "topics": [
            "pandas"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Nama",
        "content": "# Membuat DataFrame dari dictionary data = { \"Nama\": , \"Umur\": , \"Kota\":  } df = pd.DataFrame",
        "examples": [],
        "topics": [
            "Umur",
            "Kota",
            "pd.DataFrame",
            "Membuat",
            "data",
            "DataFrame",
            "dari",
            "dictionary"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Menampilkan",
        "content": "# Menampilkan DataFrame print",
        "examples": [],
        "topics": [
            "print",
            "DataFrame"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Menambahkan",
        "content": "# Menambahkan kolom baru df =  print Selain Pandas, Python juga memiliki pustaka Matplotlib untuk visualisasi data. Dengan Matplotlib, kita dapat membuat berbagai jenis grafik dan plot untuk menganalisis data secara visual.",
        "examples": [],
        "topics": [
            "Pandas",
            "Python",
            "Selain",
            "Matplotlib",
            "print",
            "untuk",
            "data",
            "kolom",
            "baru"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "import",
        "content": "import matplotlib.pyplot as plt",
        "examples": [],
        "topics": [
            "plt",
            "matplotlib.pyplot"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Data",
        "content": "# Data untuk grafik x =  y =",
        "examples": [],
        "topics": [
            "untuk",
            "grafik"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Membuat",
        "content": "# Membuat grafik garis plt.plot plt.xlabel plt.ylabel plt.title plt.show Dalam pengembangan web, Python sangat populer dengan framework seperti Django dan Flask. Django adalah framework web tingkat tinggi yang mendorong pengembangan cepat dan desain bersih, sementara Flask adalah microframework yang ringan dan fleksibel.",
        "examples": [],
        "topics": [
            "Python",
            "Dalam",
            "Flask",
            "Django",
            "dan",
            "pengembangan",
            "web",
            "framework",
            "grafik"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "flask",
        "content": "from flask import Flask",
        "examples": [],
        "topics": [
            "import"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Flask",
        "content": "app = Flask",
        "examples": [],
        "topics": [
            "app"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "world",
        "content": "@app.route def hello_world: return 'Hello, World!'",
        "examples": [],
        "topics": [
            "return",
            "app.route",
            "def"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Salah",
        "content": "if __name__ == '__main__': app.run Salah satu fitur utama Python adalah dukungan yang kuat untuk pembelajaran mesin dan kecerdasan buatan. Pustaka seperti Scikit-Learn, TensorFlow, dan PyTorch memungkinkan pengembang untuk membuat dan melatih model pembelajaran mesin dengan mudah. Scikit-Learn, misalnya, adalah pustaka untuk pembelajaran mesin di Python yang menyediakan alat sederhana namun efisien untuk analisis data dan pemodelan prediktif.",
        "examples": [],
        "topics": [
            "pembelajaran",
            "main",
            "untuk",
            "mesin",
            "Python",
            "dan",
            "app.run",
            "buatan",
            "Scikit-Learn"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "import",
        "content": "from sklearn import datasets from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score",
        "examples": [],
        "topics": [
            "test",
            "score",
            "sklearn.model",
            "selection",
            "train",
            "split",
            "sklearn.linear",
            "model",
            "accuracy"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Mengimpor",
        "content": "# Mengimpor dataset iris iris = datasets.load_iris X = iris.data y = iris.target",
        "examples": [],
        "topics": [
            "datasets.load",
            "iris.target",
            "iris",
            "iris.data",
            "dataset"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "train",
        "content": "# Membagi data menjadi training dan testing X_train, X_test, y_train, y_test = train_test_split",
        "examples": [],
        "topics": [
            "test",
            "Membagi",
            "split",
            "data",
            "menjadi",
            "training",
            "dan",
            "testing"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Membuat",
        "content": "# Membuat model Logistic Regression model = LogisticRegression model.fit",
        "examples": [],
        "topics": [
            "Logistic",
            "Regression",
            "LogisticRegression",
            "model.fit",
            "model"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "pred",
        "content": "# Memprediksi data testing y_pred = model.predict",
        "examples": [],
        "topics": [
            "model.predict",
            "Memprediksi",
            "data",
            "testing"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Mengukur",
        "content": "# Mengukur akurasi model print}\") Python terus berkembang dan komunitasnya yang besar selalu menyediakan dukungan dan sumber daya untuk pemrogram. Inilah yang membuat Python tetap relevan dan terus digunakan dalam berbagai bidang teknologi.",
        "examples": [],
        "topics": [
            "Python",
            "print",
            "pemrogram",
            "dan",
            "terus",
            "yang",
            "akurasi",
            "model",
            "berkembang"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "File 3: `dataset_part3.txt`",
        "content": "",
        "examples": [],
        "topics": []
    },
    {
        "source": "Python Tutorial",
        "title": "string",
        "content": "Dalam Python, kita juga dapat melakukan manipulasi string dengan sangat mudah. Python menyediakan berbagai metode string yang memungkinkan kita untuk melakukan berbagai operasi pada string, seperti menggabungkan, memotong, dan mengganti bagian dari string.",
        "examples": [],
        "topics": [
            "Python",
            "Dalam",
            "mudah",
            "kita",
            "melakukan",
            "juga",
            "dapat",
            "manipulasi",
            "dengan"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "nama",
        "content": "# Menggabungkan string nama_depan = \"John\" nama_belakang = \"Doe\" nama_lengkap = nama_depan + \" \" + nama_belakang print",
        "examples": [],
        "topics": [
            "depan",
            "John",
            "Doe",
            "belakang",
            "Menggabungkan",
            "lengkap",
            "print",
            "string"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "World",
        "content": "# Mengganti karakter dalam string kalimat = \"Hello, World!\" kalimat_baru = kalimat.replace print",
        "examples": [],
        "topics": [
            "Mengganti",
            "kalimat",
            "baru",
            "karakter",
            "dalam",
            "string",
            "kalimat.replace",
            "print"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Memotong",
        "content": "# Memotong string substring = kalimat print Selain itu, Python juga sangat kuat dalam bekerja dengan file. Kita dapat membuka, membaca, menulis, dan menutup file dengan mudah menggunakan built-in functions.",
        "examples": [],
        "topics": [
            "Python",
            "Selain",
            "substring",
            "kalimat",
            "itu",
            "membaca",
            "menulis",
            "dengan",
            "file"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "file.write",
        "content": "# Menulis ke dalam file with open as file: file.write",
        "examples": [],
        "topics": [
            "Menulis",
            "file",
            "dalam",
            "open"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Membaca",
        "content": "# Membaca dari file with open as file: isi_file = file.read print Python juga mendukung pengolahan dan analisis data yang canggih menggunakan pustaka seperti NumPy. NumPy adalah pustaka untuk komputasi ilmiah yang mendukung array besar dan matriks multidimensi serta berbagai fungsi matematika tingkat tinggi untuk operasi ini.",
        "examples": [],
        "topics": [
            "isi",
            "Python",
            "file",
            "file.read",
            "mendukung",
            "dan",
            "yang",
            "pustaka",
            "NumPy"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "import",
        "content": "import numpy as np",
        "examples": [],
        "topics": [
            "numpy"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "np.array",
        "content": "# Membuat array NumPy array = np.array",
        "examples": [],
        "topics": [
            "Membuat",
            "array",
            "NumPy"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Operasi",
        "content": "# Operasi matematika dengan array print print",
        "examples": [],
        "topics": [
            "print",
            "matematika",
            "dengan",
            "array"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Membuat",
        "content": "# Membuat matriks matrix = np.array print",
        "examples": [],
        "topics": [
            "matrix",
            "np.array",
            "print",
            "matriks"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Transpose",
        "content": "# Transpose matriks print Dalam pengembangan perangkat lunak, pengujian sangat penting untuk memastikan bahwa kode kita bekerja seperti yang diharapkan. Python memiliki pustaka unittest yang built-in untuk menulis dan menjalankan tes unit.",
        "examples": [],
        "topics": [
            "Dalam",
            "lunak",
            "pengujian",
            "diharapkan",
            "untuk",
            "yang",
            "matriks",
            "print",
            "pengembangan"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "import",
        "content": "import unittest",
        "examples": [],
        "topics": [
            "unittest"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Fungsi",
        "content": "# Fungsi yang akan diuji def tambah: return a + b",
        "examples": [],
        "topics": [
            "tambah",
            "return",
            "yang",
            "akan",
            "diuji",
            "def"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "self.assertEqual",
        "content": "# Kelas tes unit class TestTambah: def test_tambah: self.assertEqual, 5) self.assertEqual, 0) self.assertEqual, 0)",
        "examples": [],
        "topics": [
            "Kelas",
            "tambah",
            "TestTambah",
            "def",
            "test",
            "tes",
            "unit",
            "class"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "main",
        "content": "if __name__ == '__main__': unittest.main Python juga mendukung integrasi dengan berbagai database seperti SQLite, MySQL, dan PostgreSQL. Kita dapat menggunakan pustaka seperti SQLite3 dan SQLAlchemy untuk mengelola dan berinteraksi dengan database.",
        "examples": [],
        "topics": [
            "MySQL",
            "Python",
            "unittest.main",
            "SQLite",
            "PostgreSQL",
            "dan",
            "dengan",
            "database",
            "seperti"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "import",
        "content": "import sqlite3",
        "examples": [],
        "topics": []
    },
    {
        "source": "Python Tutorial",
        "title": "Membuat",
        "content": "# Membuat koneksi ke database conn = sqlite3.connect",
        "examples": [],
        "topics": [
            "conn",
            "koneksi",
            "database"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "conn.cursor",
        "content": "# Membuat cursor cur = conn.cursor",
        "examples": [],
        "topics": [
            "Membuat",
            "cur",
            "cursor"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Membuat",
        "content": "# Membuat tabel cur.execute''')",
        "examples": [],
        "topics": [
            "cur.execute",
            "tabel"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Menambahkan",
        "content": "# Menambahkan data ke tabel cur.execute VALUES \")",
        "examples": [],
        "topics": [
            "data",
            "tabel",
            "cur.execute"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Menyimpan",
        "content": "# Menyimpan perubahan conn.commit",
        "examples": [],
        "topics": [
            "conn.commit",
            "perubahan"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Membaca",
        "content": "# Membaca data dari tabel cur.execute print)",
        "examples": [],
        "topics": [
            "print",
            "data",
            "dari",
            "tabel",
            "cur.execute"
        ]
    },
    {
        "source": "Python Tutorial",
        "title": "Menutup",
        "content": "# Menutup koneksi conn.close Dengan memahami dasar-dasar Python dan berbagai pustaka yang tersedia, kita dapat membangun berbagai aplikasi yang kuat dan efisien. Python adalah bahasa yang sangat serbaguna dan dapat digunakan dalam berbagai bidang seperti pengembangan web, analisis data, pembelajaran mesin, dan banyak lagi.",
        "examples": [],
        "topics": [
            "Dengan",
            "dan",
            "Python",
            "berbagai",
            "yang",
            "tersedia",
            "kita",
            "efisien",
            "dapat"
        ]
    }
]