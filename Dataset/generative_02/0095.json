[
    {
        "sumber": "pemrogramanpython.com",
        "penulis": "Ani Setiawati",
        "tanggal": "2023-08-14",
        "judul": "Penggunaan List Comprehensions di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "list comprehensions", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan list comprehensions di Python untuk membuat dan memanipulasi list dengan sintaks yang lebih ringkas dan efisien.",
        "pertanyaan": [
            {
                "question": "Saya sering mendengar tentang list comprehension. Apa sebenarnya itu dan kenapa harus digunakan?",
                "answer": "List comprehensions adalah cara singkat untuk membuat list baru dari iterable yang ada menggunakan satu baris kode. Ini membuat kode lebih bersih dan mudah dibaca."
            },
            {
                "question": "Bagaimana cara saya membuat list comprehension? Saya sudah coba, tapi hasilnya tidak seperti yang diharapkan.",
                "answer": "Anda bisa membuat list comprehension dengan sintaks `[expression for item in iterable]`. Contohnya: `[x for x in range(5)]`."
            },
            {
                "question": "Saya tidak tahu bagaimana menambahkan syarat dalam list comprehension. Bisa kasih tahu contohnya?",
                "question_code": "[x for x in range(10) if x % 2 == 0]",
                "answer": "Anda bisa menambahkan syarat dengan menambahkan `if` di akhir list comprehension. Contohnya: `[x for x in range(10) if x % 2 == 0]` untuk mendapatkan angka genap.",
                "answer_code": "[x for x in range(10) if x % 2 == 0]"
            },
            {
                "question": "Saya ingin menggunakan fungsi dalam list comprehension. Bagaimana cara melakukannya?",
                "question_code": "[x^2 for x in range(10)]",
                "answer": "Anda bisa menggunakan fungsi atau operasi di dalam list comprehension. Misalnya, `[x**2 for x in range(10)]` untuk mengkuadratkan setiap angka dari 0 sampai 9.",
                "answer_code": "[x**2 for x in range(10)]"
            },
            {
                "question": "Bagaimana saya bisa menggunakan list comprehension untuk mengubah elemen dari list yang sudah ada?",
                "question_code": "numbers = [1, 2, 3, 4, 5]\nsquares = [x^2 for x in numbers]",
                "answer": "Anda bisa menggunakan list comprehension untuk mengubah elemen dengan cara `[expression for item in list]`. Misalnya, `squares = [x**2 for x in numbers]` untuk mendapatkan kuadrat dari setiap elemen dalam list `numbers`.",
                "answer_code": "squares = [x**2 for x in numbers]"
            },
            {
                "question": "Apa itu nested list comprehension dan bagaimana cara menggunakannya?",
                "question_code": "[[x, y] for x in range(3) for y in range(3) if x > y]",
                "answer": "Nested list comprehensions melibatkan beberapa loop di dalam satu list comprehension. Contohnya: `[[x, y] for x in range(3) for y in range(3)]` menghasilkan pasangan koordinat (x, y).",
                "answer_code": "[[x, y] for x in range(3) for y in range(3)]"
            },
            {
                "question": "Bagaimana cara saya memanipulasi string menggunakan list comprehension? Saya tidak tahu caranya.",
                "question_code": "[char.upper() for char in 'hello']",
                "answer": "Anda bisa memanipulasi string dengan list comprehension dengan iterasi karakter di dalam string. Contohnya: `[char.upper() for char in 'hello']` untuk mengubah semua huruf menjadi kapital.",
                "answer_code": "[char.upper() for char in 'hello']"
            },
            {
                "question": "Saya coba membuat list comprehension dari dictionary tapi hasilnya tidak sesuai harapan. Apa yang salah?",
                "question_code": "{k: v*2 for k, v in {'a': 1, 'b': 2}}",
                "answer": "Anda bisa membuat list comprehension dari dictionary dengan iterasi kunci dan nilai menggunakan `.items()`. Contohnya: `{k: v**2 for k, v in {'a': 1, 'b': 2}.items()}` untuk mendapatkan kuadrat nilai dari setiap kunci.",
                "answer_code": "{k: v**2 for k, v in {'a': 1, 'b': 2}.items()}"
            },
            {
                "question": "Bagaimana cara menggunakan set comprehension? Saya bingung dengan cara pembuatannya.",
                "question_code": "{x for x in range(5) if x % 2 == 1}",
                "answer": "Set comprehension mirip dengan list comprehension, tetapi menggunakan tanda kurung kurawal `{}`. Contohnya: `{x for x in range(5)}` untuk membuat set dari angka 0 sampai 4.",
                "answer_code": "{x for x in range(5)}"
            }
        ]
    },
    {
        "sumber": "belajarcoding.id",
        "penulis": "Dewi Lestari",
        "tanggal": "2024-02-18",
        "judul": "Penggunaan Fungsi Input dan Output di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "input", "output", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi input dan output di Python untuk mengambil input dari pengguna dan menampilkan output ke layar.",
        "pertanyaan": [
            {
                "question": "Saya tidak tahu cara meminta input dari pengguna. Bisa jelasin langkah-langkahnya?",
                "answer": "Anda bisa meminta input dari pengguna dengan fungsi `input()`. Contohnya: `input('Masukkan nama Anda: ')` untuk meminta nama pengguna."
            },
            {
                "question": "Bagaimana cara menampilkan hasil ke layar? Saya sudah coba tapi tidak keluar.",
                "answer": "Anda bisa menampilkan hasil ke layar dengan fungsi `print()`. Contohnya: `print('Hello, World!')` untuk menampilkan teks 'Hello, World!'."
            },
            {
                "question": "Saya mau mengambil angka dari input, tapi kok error ya? Bagaimana caranya yang benar?",
                "question_code": "age = input('Enter your age: ').toInt()",
                "answer": "Untuk mengambil angka, Anda perlu mengonversi input ke integer dengan `int()`. Contohnya: `int(input('Enter your age: '))`.",
                "answer_code": "age = int(input('Enter your age: '))"
            },
            {
                "question": "Saya ingin mengambil angka desimal dari input. Apa yang harus dilakukan?",
                "question_code": "height = input('Enter your height: ').toFloat()",
                "answer": "Untuk mengambil angka desimal, Anda perlu mengonversi input ke float dengan `float()`. Contohnya: `float(input('Enter your height: '))`.",
                "answer_code": "height = float(input('Enter your height: '))"
            },
            {
                "question": "Bagaimana cara menampilkan beberapa variabel dalam satu `print`? Saya tidak bisa memisahkan mereka.",
                "question_code": "name = 'Alice'\nage = 30\nprint('Name:', name, 'Age:', age)",
                "answer": "Untuk menampilkan beberapa variabel, gunakan koma dalam fungsi `print()`. Contohnya: `print('Name:', name, 'Age:', age)`.",
                "answer_code": "name = 'Alice'\nage = 30\nprint('Name:', name, 'Age:', age)"
            },
            {
                "question": "Saya mau coba f-string tapi bingung dengan sintaksnya. Bisa beri contoh sederhana?",
                "question_code": "name = 'Alice'\nage = 30\nprint(f'Name: {name} Age: {age}')",
                "answer": "F-string memudahkan format string dengan menempatkan variabel di dalam kurung kurawal `{}`. Contohnya: `print(f'Name: {name}, Age: {age}')`.",
                "answer_code": "name = 'Alice'\nage = 30\nprint(f'Name: {name}, Age: {age}')"
            },
            {
                "question": "Bagaimana cara menambahkan pemisah khusus saat menggunakan `print`? Saya tidak tahu caranya.",
                "question_code": "print('Hello', 'World', separator='-')",
                "answer": "Untuk menambahkan pemisah, gunakan parameter `sep` dalam `print()`. Contohnya: `print('Hello', 'World', sep='-')`.",
                "answer_code": "print('Hello', 'World', sep='-')"
            },
            {
                "question": "Saya ingin `print` beberapa hal tanpa baris baru di akhir. Bagaimana caranya?",
                "question_code": "print('Hello', end = '')\nprint('World')",
                "answer": "Untuk menghindari baris baru di akhir, gunakan parameter `end` dalam `print()`. Contohnya: `print('Hello', end=' '); print('World')`.",
                "answer_code": "print('Hello', end=' ')\nprint('World')"
            },
            {
                "question": "Bagaimana cara menginput beberapa nilai sekaligus dari pengguna? Saya bingung dengan metode yang tepat.",
                "question_code": "data = input('Enter numbers separated by space: ').split().map(int)",
                "answer": "Untuk menginput beberapa nilai, gunakan `split()` untuk memisahkan nilai dan `int()` untuk mengonversi ke integer. Contohnya: `data = input('Enter numbers separated by space: ').split(); numbers = [int(x) for x in data]`.",
                "answer_code": "data = input('Enter numbers separated by space: ').split()\nnumbers = [int(x) for x in data]"
            }
        ]
    }
]
