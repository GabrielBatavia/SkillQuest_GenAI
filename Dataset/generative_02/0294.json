[
    {
        "sumber": "pythontips.com",
        "penulis": "Ari Wijaya",
        "tanggal": "2024-12-20",
        "judul": "Penggunaan Fungsi Sorted dan Lambda di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "sorted", "lambda", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi `sorted` bersama dengan fungsi lambda di Python untuk mengurutkan list dan iterable lainnya.",
        "pertanyaan": [
            {
                "question": "Saya dengar ada fungsi bernama `sorted` di Python. Apa sebenarnya fungsi ini dan bagaimana cara kerjanya?",
                "answer": "Fungsi `sorted` digunakan untuk mengembalikan list baru yang berisi elemen-elemen dari iterable yang diurutkan. Fungsi ini tidak mengubah iterable asli, melainkan menghasilkan list yang diurutkan."
            },
            {
                "question": "Bisakah Anda memberikan contoh bagaimana cara menggunakan fungsi `sorted` untuk mengurutkan list? Saya masih agak bingung.",
                "question_code": "data = [8, 3, 1, 7]\nresult = sorted(data)",
                "answer": "Tentu, Anda bisa menggunakan fungsi `sorted` dengan memberikan list sebagai argumen. Sebagai contoh: `sorted(data)` akan mengurutkan list `data`.",
                "answer_code": "data = [8, 3, 1, 7]\nresult = sorted(data)"
            },
            {
                "question": "Bagaimana caranya jika saya ingin mengurutkan list secara terbalik menggunakan fungsi `sorted`? Bisa dijelaskan?",
                "question_code": "values = [4, 5, 1, 2]\nreversed_values = sorted(values, reverse=True)",
                "answer": "Anda bisa menggunakan parameter `reverse=True` dengan fungsi `sorted` untuk mengurutkan elemen-elemen dalam urutan menurun. Sebagai contoh: `sorted(values, reverse=True)`.",
                "answer_code": "values = [4, 5, 1, 2]\nreversed_values = sorted(values, reverse=True)"
            },
            {
                "question": "Saya mendengar bahwa fungsi lambda bisa digunakan dengan `sorted` untuk mengurutkan berdasarkan panjang string. Bagaimana caranya?",
                "question_code": "words = ['apple', 'pie', 'banana', 'kiwi']\nwords_sorted_by_length = sorted(words, key=lambda word: len(word))",
                "answer": "Benar, Anda bisa menggunakan fungsi `sorted` dengan parameter `key` yang diisi dengan fungsi lambda untuk menentukan kunci pengurutan. Contohnya: `sorted(words, key=lambda word: len(word))` akan mengurutkan list `words` berdasarkan panjang string.",
                "answer_code": "words = ['apple', 'pie', 'banana', 'kiwi']\nwords_sorted_by_length = sorted(words, key=lambda word: len(word))"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sorted` untuk mengurutkan dictionary berdasarkan nilainya? Saya agak bingung dengan konsepnya.",
                "question_code": "scores = {'John': 75, 'Jane': 85, 'Dave': 95}\nsorted_scores = sorted(scores.items(), key=lambda item: item[1])",
                "answer": "Anda bisa mengurutkan dictionary berdasarkan nilai dengan fungsi `sorted` menggunakan `items()` dan lambda. Contohnya: `sorted(scores.items(), key=lambda item: item[1])`.",
                "answer_code": "scores = {'John': 75, 'Jane': 85, 'Dave': 95}\nsorted_scores = sorted(scores.items(), key=lambda item: item[1])"
            },
            {
                "question": "Bisa tolong jelaskan bagaimana cara menggunakan fungsi `sorted` untuk mengurutkan list of dictionaries? Saya butuh penjelasan yang sederhana.",
                "question_code": "people = [{'name': 'Ali', 'age': 30}, {'name': 'Budi', 'age': 25}, {'name': 'Citra', 'age': 35}]\nsorted_people = sorted(people, key=lambda person: person['age'])",
                "answer": "Untuk mengurutkan list of dictionaries, Anda bisa menggunakan fungsi `sorted` dengan lambda untuk menentukan kunci pengurutan. Sebagai contoh: `sorted(people, key=lambda person: person['age'])` akan mengurutkan list `people` berdasarkan `age`.",
                "answer_code": "people = [{'name': 'Ali', 'age': 30}, {'name': 'Budi', 'age': 25}, {'name': 'Citra', 'age': 35}]\nsorted_people = sorted(people, key=lambda person: person['age'])"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sorted` dengan multiple keys di Python? Bisa diberikan contoh?",
                "question_code": "employees = [{'name': 'Sarah', 'salary': 6000}, {'name': 'Tom', 'salary': 6000}, {'name': 'Anna', 'salary': 7000}]\nsorted_employees = sorted(employees, key=lambda emp: (emp['salary'], emp['name']))",
                "answer": "Anda bisa menggunakan fungsi `sorted` dengan multiple keys menggunakan tuple di dalam lambda. Contohnya: `sorted(employees, key=lambda emp: (emp['salary'], emp['name']))` akan mengurutkan list `employees` berdasarkan `salary` dan kemudian `name`.",
                "answer_code": "employees = [{'name': 'Sarah', 'salary': 6000}, {'name': 'Tom', 'salary': 6000}, {'name': 'Anna', 'salary': 7000}]\nsorted_employees = sorted(employees, key=lambda emp: (emp['salary'], emp['name']))"
            }
        ]
    },
    {
        "sumber": "pythonadvancedguide.com",
        "penulis": "Sari Indah",
        "tanggal": "2024-12-22",
        "judul": "Penggunaan Fungsi Enumerate di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "enumerate", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi `enumerate` di Python untuk iterasi yang lebih efisien dan efektif dengan menambahkan penghitung ke dalam iterable.",
        "pertanyaan": [
            {
                "question": "Saya masih baru dalam pemrograman dan tidak mengerti tentang fungsi `enumerate` di Python. Bisa dijelaskan apa itu dan bagaimana cara kerjanya?",
                "answer": "Fungsi `enumerate` digunakan untuk menambahkan penghitung ke iterable dan mengembalikan objek enumerate. Ini sangat berguna saat Anda ingin mengakses indeks dan nilai dari sebuah iterable secara bersamaan."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `enumerate` di Python? Bisakah Anda memberikan contoh yang mudah dimengerti?",
                "question_code": "cities = ['Jakarta', 'Bandung', 'Surabaya']\nfor idx, city in enumerate(cities):\n    print(idx, city)",
                "answer": "Anda bisa menggunakan fungsi `enumerate` dengan memanggilnya pada iterable dan menggunakannya dalam loop. Contohnya: `for idx, city in enumerate(cities): print(idx, city)` akan mencetak indeks dan nama kota.",
                "answer_code": "cities = ['Jakarta', 'Bandung', 'Surabaya']\nfor idx, city in enumerate(cities):\n    print(idx, city)"
            },
            {
                "question": "Saya ingin tahu bagaimana cara memulai penghitung dari angka tertentu menggunakan fungsi `enumerate`. Bisakah Anda memberikan contohnya?",
                "question_code": "fruits = ['apple', 'banana', 'cherry']\nfor idx, fruit in enumerate(fruits, start=5):\n    print(idx, fruit)",
                "answer": "Anda bisa menggunakan parameter `start` dengan fungsi `enumerate` untuk menentukan nilai awal penghitung. Contohnya: `for idx, fruit in enumerate(fruits, start=5): print(idx, fruit)` akan memulai penghitung dari 5.",
                "answer_code": "fruits = ['apple', 'banana', 'cherry']\nfor idx, fruit in enumerate(fruits, start=5):\n    print(idx, fruit)"
            },
            {
                "question": "Bisakah Anda menjelaskan bagaimana menggunakan fungsi `enumerate` dengan list comprehension? Saya ingin membuat list of tuples dengan indeks dan nilai.",
                "question_code": "vehicles = ['car', 'bike', 'plane']\nindexed_vehicles = [(i, vehicle) for i, vehicle in enumerate(vehicles)]",
                "answer": "Anda bisa menggunakan fungsi `enumerate` dengan list comprehension untuk membuat list of tuples yang berisi indeks dan nilai. Contohnya: `[(i, vehicle) for i, vehicle in enumerate(vehicles)]`.",
                "answer_code": "vehicles = ['car', 'bike', 'plane']\nindexed_vehicles = [(i, vehicle) for i, vehicle in enumerate(vehicles)]"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `enumerate` dengan dictionary di Python? Saya ingin membuat dictionary baru dengan indeks sebagai key.",
                "question_code": "items = {'apple': 3, 'banana': 2, 'cherry': 5}\nindexed_items = {i: key for i, key in enumerate(items.keys())}",
                "answer": "Anda bisa menggunakan fungsi `enumerate` dengan dictionary untuk membuat dictionary baru yang berisi indeks sebagai key dan nilai dictionary asli sebagai value. Contohnya: `{i: key for i, key in enumerate(items.keys())}`.",
                "answer_code": "items = {'apple': 3, 'banana': 2, 'cherry': 5}\nindexed_items = {i: key for i, key in enumerate(items.keys())}"
            },
            {
                "question": "Apakah mungkin menggunakan fungsi `enumerate` dengan string di Python? Jika ya, bagaimana caranya?",
                "question_code": "text = 'hello'\nenum_text = [(i, char) for i, char in enumerate(text)]",
                "answer": "Ya, Anda bisa menggunakan fungsi `enumerate` dengan string untuk membuat list of tuples yang berisi indeks dan karakter. Contohnya: `[(i, char) for i, char in enumerate(text)]`.",
                "answer_code": "text = 'hello'\nenum_text = [(i, char) for i, char in enumerate(text)]"
            },
            {
                "question": "Bagaimana caranya menggunakan fungsi `enumerate` untuk mengakses indeks dan nilai secara bersamaan dalam loop di Python? Bisa beri contoh?",
                "question_code": "vegetables = ['carrot', 'broccoli', 'lettuce']\nfor idx, vegetable in enumerate(vegetables):\n    print(f'{idx}: {vegetable}')",
                "answer": "Anda bisa menggunakan fungsi `enumerate` untuk mengakses indeks dan nilai secara bersamaan dalam loop. Contohnya: `for idx, vegetable in enumerate(vegetables): print(f'{idx}: {vegetable}')`.",
                "answer_code": "vegetables = ['carrot', 'broccoli', 'lettuce']\nfor idx, vegetable in enumerate(vegetables):\n    print(f'{idx}: {vegetable}')"
            }
        ]
    }
]
