[
    {
        "sumber": "PythonPemula.com",
        "penulis": "Rian Saputra",
        "tanggal": "2024-07-13",
        "judul": "Dasar-Dasar Pemrograman Python",
        "tingkat_kesulitan": "pemula",
        "tag": ["dasar", "pemula", "python"],
        "konten": "Artikel ini menjelaskan dasar-dasar pemrograman Python, termasuk sintaks dasar dan penggunaan variabel.",
        "pertanyaan": [
            {
                "question": "Saya baru mulai belajar Python. Bagaimana cara membuat variabel?",
                "answer": "Untuk membuat variabel di Python, cukup berikan nilai pada nama variabel. Contoh: `x = 10`."
            },
            {
                "question": "Apa yang harus saya lakukan jika saya ingin melihat nilai dari variabel yang saya buat?",
                "answer": "Gunakan fungsi `print()`. Misalnya: `print(x)` akan menampilkan nilai dari variabel `x`."
            },
            {
                "question": "Saya tidak tahu apa itu variabel. Bisa jelaskan?",
                "answer": "Variabel adalah tempat untuk menyimpan informasi dalam program. Misalnya, `x = 10` berarti kita menyimpan angka 10 di dalam variabel `x`."
            },
            {
                "question": "Bagaimana cara menambahkan dua angka di Python?",
                "question_code": "a = 7\nb = 3\nprint(a + b)",
                "answer": "Gunakan operator `+` untuk menjumlahkan dua angka. Jadi `a + b` akan memberikan hasil penjumlahan dari `a` dan `b`."
            },
            {
                "question": "Kenapa saya mendapatkan kesalahan NameError saat mencoba mencetak nilai?",
                "question_code": "print(y)",
                "answer": "Kesalahan `NameError` terjadi jika Anda mencoba menggunakan variabel yang belum dideklarasikan. Pastikan variabel tersebut sudah ada sebelumnya."
            },
            {
                "question": "Saya ingin menggabungkan dua kata menjadi satu. Bagaimana caranya?",
                "question_code": "word1 = 'Hello'\nword2 = 'Python'\nprint(word1 + ' ' + word2)",
                "answer": "Gunakan operator `+` untuk menggabungkan string. Misalnya, `'Hello' + ' ' + 'Python'` akan menghasilkan `Hello Python`."
            },
            {
                "question": "Bagaimana saya bisa membuat semua huruf dalam string menjadi kecil?",
                "question_code": "text = 'Python IS FUN'\nprint(text.lower())",
                "answer": "Gunakan metode `lower()` untuk mengubah seluruh string menjadi huruf kecil. Contohnya: `text.lower()`."
            },
            {
                "question": "Saya perlu memotong bagian dari string. Apa yang harus saya lakukan?",
                "question_code": "message = 'Welcome to Python'\nprint(message[0:7])",
                "answer": "Gunakan slicing untuk memotong string. Misalnya: `message[0:7]` akan mengambil karakter dari indeks 0 hingga 6."
            },
            {
                "question": "Bagaimana cara membandingkan dua angka di Python?",
                "question_code": "x = 8\ny = 4\nif x > y:\n    print('x lebih besar dari y')",
                "answer": "Gunakan operator perbandingan seperti `>` untuk membandingkan angka. Misalnya: `if x > y: print('x lebih besar dari y')`."
            }
        ]
    },
    {
        "sumber": "BelajarPython.net",
        "penulis": "Indra Permana",
        "tanggal": "2024-06-20",
        "judul": "Kontrol Alur di Python",
        "tingkat_kesulitan": "menengah",
        "tag": ["kontrol alur", "if", "loop"],
        "konten": "Artikel ini membahas tentang struktur kontrol alur seperti if-else dan loop di Python.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan if untuk memeriksa suatu kondisi?",
                "answer": "Gunakan `if` diikuti dengan kondisi yang ingin diperiksa. Contoh: `if x == 10: print('x sama dengan 10')`."
            },
            {
                "question": "Saya ingin menjalankan kode jika kondisi tidak terpenuhi. Bagaimana caranya?",
                "answer": "Gunakan `else` setelah pernyataan `if`. Misalnya: `if x < 5: print('x kurang dari 5') else: print('x 5 atau lebih')`."
            },
            {
                "question": "Bagaimana cara menambahkan kondisi tambahan dalam if statement?",
                "answer": "Gunakan `elif` untuk kondisi tambahan. Misalnya: `if x < 0: print('x negatif') elif x == 0: print('x nol')`."
            },
            {
                "question": "Bagaimana cara membuat loop yang mencetak angka dari 0 hingga 4?",
                "question_code": "for i in range(5):\nprint(i)",
                "answer": "Gunakan `for` loop dengan `range()` untuk mengulangi kode. Misalnya: `for i in range(5): print(i)`."
            },
            {
                "question": "Kenapa kode ini menghasilkan kesalahan? `for i in range(3):\nprint(i)`",
                "question_code": "for i in range(3):\nprint(i)",
                "answer": "Pastikan kode memiliki indentasi yang benar. Kode yang benar harus memiliki indentasi di bawah `for` loop."
            },
            {
                "question": "Bagaimana cara membuat loop yang berhenti saat angka mencapai 3?",
                "question_code": "i = 0\nwhile i < 5:\n    if i == 3:\n        break\n    print(i)\n    i += 1",
                "answer": "Gunakan `break` di dalam loop untuk menghentikan loop ketika kondisi tertentu terpenuhi. Misalnya: `if i == 3: break`."
            },
            {
                "question": "Bagaimana cara menggunakan if-else di dalam loop?",
                "question_code": "for i in range(5):\nif i % 2 == 0:\nprint(i, 'genap')\nelse:\nprint(i, 'ganjil')",
                "answer": "Anda bisa menggunakan `if-else` di dalam loop untuk memeriksa kondisi pada setiap iterasi. Misalnya: `if i % 2 == 0: print(i, 'genap') else: print(i, 'ganjil')`."
            },
            {
                "question": "Bagaimana cara menulis loop yang mencetak semua kombinasi dari dua daftar?",
                "question_code": "for i in range(3):\n    for j in range(2):\n        print(i, j)",
                "answer": "Gunakan loop bersarang untuk membuat kombinasi dari dua daftar. Contohnya: `for i in range(3): for j in range(2): print(i, j)`."
            },
            {
                "question": "Bagaimana cara menghentikan loop jika menemukan nilai 2?",
                "question_code": "for i in range(5):\n    if i == 2:\n        break\n    print(i)",
                "answer": "Gunakan `break` di dalam loop untuk berhenti ketika kondisi tertentu terpenuhi. Misalnya: `if i == 2: break`."
            }
        ]
    }
]
