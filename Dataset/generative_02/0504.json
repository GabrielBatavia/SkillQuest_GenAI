[
    {
        "sumber": "Advanced Python Techniques",
        "penulis": "Alex Chen",
        "tanggal": "2024-12-20",
        "judul": "List Comprehension: Transformasi Data dengan Cara yang Elegan",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Pemula"],
        "konten": "Artikel ini menjelaskan berbagai cara menggunakan list comprehension untuk memanipulasi dan mentransformasi data. Dengan pendekatan yang efisien, Anda dapat menghindari penggunaan loop yang lebih rumit.",
        "pertanyaan": [
            {
                "question": "Misalkan Anda memiliki daftar angka `[-5, -1, 0, 1, 5]`. Bagaimana Anda bisa membuat sebuah list yang hanya berisi nilai absolut dari angka-angka tersebut, namun hanya jika nilai absolutnya lebih dari 1?",
                "answer": "Gunakan kode berikut: `[abs(x) for x in [-5, -1, 0, 1, 5] if abs(x) > 1]`. Ini akan menghasilkan list `[5]`."
            },
            {
                "question": "Anda memiliki string yang berisi beberapa kata: `'hello world, python is fun'`. Bagaimana cara menggunakan list comprehension untuk menghasilkan list yang hanya berisi kata-kata dengan panjang lebih dari 4 karakter?",
                "answer": "Gunakan kode berikut: `[word for word in 'hello world, python is fun'.split() if len(word) > 4]`. Ini akan menghasilkan list `['hello', 'python']`."
            },
            {
                "question": "Jika Anda ingin membuat list dari kuadrat bilangan ganjil dalam list `[1, 2, 3, 4, 5, 6]`, bagaimana Anda melakukannya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[x**2 for x in [1, 2, 3, 4, 5, 6] if x % 2 != 0]`. Ini akan menghasilkan list `[1, 9, 25]`."
            },
            {
                "question": "Bagaimana Anda bisa menghasilkan sebuah list yang berisi setiap karakter dalam string `'code'` dengan index genap jika Anda hanya menggunakan list comprehension?",
                "answer": "Gunakan kode berikut: `[char for index, char in enumerate('code') if index % 2 == 0]`. Ini akan menghasilkan list `['c', 'd']`."
            },
            {
                "question": "Anda memiliki dua list: `[1, 2, 3]` dan `[4, 5, 6]`. Bagaimana cara menghasilkan list berisi hasil penjumlahan dari setiap elemen pada posisi yang sama dalam kedua list ini menggunakan list comprehension?",
                "question_code": "[x + y for x, y in zip([1, 2, 3], [4, 5, 6])]",
                "answer": "Gunakan kode berikut: `[x + y for x, y in zip([1, 2, 3], [4, 5, 6])]`. Ini akan menghasilkan list `[5, 7, 9]`.",
                "answer_code": "[x + y for x, y in zip([1, 2, 3], [4, 5, 6])]"
            },
            {
                "question": "Apakah Anda bisa menjelaskan mengapa hasil dari list comprehension `[x*2 for x in range(10) if x % 3 == 1]` mungkin berbeda dari yang Anda harapkan?",
                "question_code": "[x*2 for x in range(10) if x % 3 == 1]",
                "answer": "Hasil list comprehension ini `[2, 8, 14]` karena kode ini hanya mengambil angka-angka yang memiliki sisa 1 ketika dibagi 3, dan kemudian menggandakannya. Pastikan bahwa kondisi filter sesuai dengan ekspektasi Anda.",
                "answer_code": "[x*2 for x in range(10) if x % 3 == 1]"
            },
            {
                "question": "Bagaimana Anda dapat membuat list yang berisi hasil pembagian antara setiap elemen dalam list `[30, 45, 60]` dengan 5 jika hasilnya adalah bilangan bulat, menggunakan list comprehension?",
                "answer": "Gunakan kode berikut: `[x // 5 for x in [30, 45, 60] if x % 5 == 0]`. Ini akan menghasilkan list `[6, 9, 12]`."
            }
        ]
    },
    {
        "sumber": "Python Essentials for Beginners",
        "penulis": "Jordan Kim",
        "tanggal": "2024-12-21",
        "judul": "Memanfaatkan List Comprehension untuk Pemula: Teknik dan Tips",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Pemula"],
        "konten": "Panduan ini dirancang untuk membantu pemula memahami cara menggunakan list comprehension dalam Python dengan berbagai contoh praktis. Teknik ini dapat menyederhanakan kode dan meningkatkan efisiensi.",
        "pertanyaan": [
            {
                "question": "Anda diberi list `['apple', 'banana', 'cherry']`. Bagaimana cara menghasilkan list baru yang hanya berisi kata-kata yang dimulai dengan huruf 'b'?",
                "answer": "Gunakan kode berikut: `[word for word in ['apple', 'banana', 'cherry'] if word.startswith('b')]`. Ini akan menghasilkan list `['banana']`."
            },
            {
                "question": "Jika Anda memiliki list angka `[-10, 0, 5, 8, 15]` dan ingin menghasilkan list yang berisi angka-angka positif yang lebih besar dari 5, apa kode list comprehension yang dapat digunakan?",
                "answer": "Gunakan kode berikut: `[x for x in [-10, 0, 5, 8, 15] if x > 5]`. Ini akan menghasilkan list `[8, 15]`."
            },
            {
                "question": "Bagaimana Anda bisa menggunakan list comprehension untuk membuat list baru dari setiap elemen dalam list `[7, 14, 21]` yang dibagi 7 dan kemudian dikalikan dengan 3?",
                "answer": "Gunakan kode berikut: `[x // 7 * 3 for x in [7, 14, 21]]`. Ini akan menghasilkan list `[3, 6, 9]`."
            },
            {
                "question": "Anda diberi string `'data science'`. Bagaimana Anda dapat membuat list dari setiap huruf vokal dalam string tersebut menggunakan list comprehension?",
                "answer": "Gunakan kode berikut: `[char for char in 'data science' if char in 'aeiou']`. Ini akan menghasilkan list `['a', 'a', 'i', 'e']`."
            },
            {
                "question": "Mengapa hasil dari list comprehension `[char*3 for char in 'abc']` mungkin tidak sesuai dengan ekspektasi Anda?",
                "question_code": "[char*3 for char in 'abc']",
                "answer": "Hasil dari kode ini adalah `['aaa', 'bbb', 'ccc']`, yang menggandakan setiap karakter sebanyak tiga kali. Jika hasilnya tidak seperti yang diharapkan, pastikan Anda benar-benar ingin menduplikasi karakter seperti itu.",
                "answer_code": "[char*3 for char in 'abc']"
            },
            {
                "question": "Bagaimana Anda bisa membuat list dari hasil pengurangan setiap angka dalam list `[10, 20, 30]` dengan angka 5 menggunakan list comprehension?",
                "answer": "Gunakan kode berikut: `[x - 5 for x in [10, 20, 30]]`. Ini akan menghasilkan list `[5, 15, 25]`."
            }
        ]
    }
]
