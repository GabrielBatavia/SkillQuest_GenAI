[
    {
        "sumber": "Python Beginners Guide",
        "penulis": "Guido van Rossum",
        "tanggal": "2024-07-27",
        "judul": "Mengelola Elemen dalam Nested List di Python",
        "tingkat_kesulitan": "Beginner",
        "tag": ["Python", "Lists", "Nested Lists"],
        "konten": "Artikel ini menjelaskan cara mengakses, menambahkan, dan menghapus elemen dalam nested list di Python, termasuk beberapa contoh kode praktis.",
        "pertanyaan": [
            {
                "question": "Bagaimana Anda menemukan nilai spesifik dalam struktur list yang lebih dalam?",
                "answer": "Gunakan dua indeks, satu untuk memilih sub-list dan satu lagi untuk memilih elemen dalam sub-list tersebut. Misalnya, `nested_list[1][0]` mengakses elemen pertama dari sub-list kedua."
            },
            {
                "question": "Bagaimana Anda dapat menambah item baru ke dalam sub-list di dalam list bersarang?",
                "answer": "Anda bisa menggunakan metode append() atau insert() pada sub-list yang diinginkan. Contoh: `nested_list[0].append('item baru')` menambahkan 'item baru' ke sub-list pertama."
            },
            {
                "question": "Apa cara yang tepat untuk menghapus elemen dari sub-list di dalam list bersarang?",
                "answer": "Gunakan metode remove(), del, atau pop() pada sub-list yang diinginkan. Contoh: `del nested_list[1][1]` menghapus elemen kedua dari sub-list kedua."
            },
            {
                "question": "Apa yang menyebabkan kode ini tidak bekerja dengan benar?",
                "question_code": "matrix = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]\nvalue = matrix[3][0]",
                "answer": "Kode tersebut menghasilkan kesalahan karena mencoba mengakses indeks yang tidak ada dalam list. List utama hanya memiliki tiga sub-list, sehingga indeks 3 tidak ada.",
                "answer_code": "matrix = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]\nvalue = matrix[2][0]"
            },
            {
                "question": "Mengapa item tidak ditambahkan ke sub-list yang benar?",
                "question_code": "nested_list = [['apple', 'banana'], ['cherry', 'date']]\nnested_list[2].append('elderberry')",
                "answer": "Kesalahan terjadi karena sub-list ketiga tidak ada. Indeks yang benar adalah 1 untuk sub-list kedua.",
                "answer_code": "nested_list = [['apple', 'banana'], ['cherry', 'date']]\nnested_list[1].append('elderberry')"
            },
            {
                "question": "Apa yang salah dengan kode ini saat mencoba menghapus elemen dari sub-list?",
                "question_code": "data = [['x', 'y'], ['z', 'w']]\ndata.remove(['z', 'w'][1])",
                "answer": "Metode remove() digunakan dengan cara yang salah. Seharusnya menggunakan del atau pop untuk menghapus elemen dari sub-list.",
                "answer_code": "data = [['x', 'y'], ['z', 'w']]\ndel data[1][1]"
            },
            {
                "question": "Kenapa kode ini menghasilkan kesalahan?",
                "question_code": "nested_list = [[1, 2], [3, [4, 5]], 6]\nitem = nested_list[2].pop(1)",
                "answer": "Kesalahan terjadi karena elemen `nested_list[2]` adalah integer, bukan list, sehingga tidak bisa menggunakan metode pop.",
                "answer_code": "nested_list = [[1, 2], [3, [4, 5]], [6]]\nitem = nested_list[2].pop()"
            },
            {
                "question": "Apa yang akan terjadi pada nested list setelah menjalankan kode berikut?",
                "question_code": "nested = [100, [200, 300], 400, [500, 600], 700]\nnested[1].append(350)",
                "answer": "Kode tersebut benar dan menyebabkan perubahan pada nested list dengan menambahkan elemen 350 ke sub-list kedua.",
                "answer_code": "nested = [100, [200, 300], 400, [500, 600], 700]\nnested[1].append(350)"
            },
            {
                "question": "Apa yang menyebabkan kode ini tidak berfungsi saat mencoba menghapus elemen dari nested list?",
                "question_code": "matrix = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]\ndel matrix[2][3]",
                "answer": "Kesalahan terjadi karena mencoba mengakses indeks yang tidak ada dalam sub-list. Sub-list ketiga hanya memiliki tiga elemen dengan indeks maksimal 2.",
                "answer_code": "matrix = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]\ndel matrix[2][2]"
            }
        ]
    },
    {
        "sumber": "Python Simplified",
        "penulis": "Alice Johnson",
        "tanggal": "2024-07-27",
        "judul": "Mengelola Elemen dalam Nested List di Python",
        "tingkat_kesulitan": "Beginner",
        "tag": ["Python", "Lists", "Nested Lists"],
        "konten": "Panduan ini membahas cara mengakses, menambahkan, dan menghapus elemen pada nested list di Python dengan beberapa contoh praktis.",
        "pertanyaan": [
            {
                "question": "Bagaimana nested list membantu mengorganisir data yang lebih kompleks?",
                "answer": "Nested list membantu mengorganisir data yang lebih kompleks dalam beberapa tingkatan atau dimensi, seperti tabel atau matriks, membuat pengelolaan data lebih terstruktur dan efisien."
            },
            {
                "question": "Apakah Anda bisa menambahkan sub-list baru ke dalam list bersarang? Jika ya, bagaimana caranya?",
                "answer": "Ya, Anda bisa menambahkan sub-list baru menggunakan metode append() atau insert(). Contoh: `nested_list.append([100, 200, 300])` menambahkan sub-list baru ke dalam list utama."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam sub-list tertentu di dalam list bersarang?",
                "answer": "Gunakan dua indeks, satu untuk memilih sub-list dan satu lagi untuk memilih elemen dalam sub-list tersebut. Contoh: `nested_list[1][2]` mengakses elemen ketiga dari sub-list kedua."
            },
            {
                "question": "Mengapa kode ini menghasilkan kesalahan?",
                "question_code": "data_structure = [['a', 'b'], ['c', 'd', 'e']]\nvalue = data_structure[2][1]",
                "answer": "Kesalahan terjadi karena indeks yang diakses berada di luar jangkauan. List utama hanya memiliki dua sub-list, sehingga indeks 2 tidak ada.",
                "answer_code": "data_structure = [['a', 'b'], ['c', 'd', 'e']]\nvalue = data_structure[1][2]"
            },
            {
                "question": "Mengapa elemen tidak ditambahkan ke sub-list yang benar?",
                "question_code": "nested_data = [['x', 'y'], ['z', 'w']]\nnested_data[2].append('v')",
                "answer": "Kesalahan terjadi karena sub-list ketiga tidak ada. Indeks yang benar adalah 1 untuk sub-list kedua.",
                "answer_code": "nested_data = [['x', 'y'], ['z', 'w']]\nnested_data[1].append('v')"
            },
            {
                "question": "Apa yang tidak tepat dalam kode ini untuk menghapus elemen dari sub-list?",
                "question_code": "data = [['cat', 'dog'], ['fish', 'bird']]\ndata.pop([1][1])",
                "answer": "Metode pop() digunakan dengan cara yang salah. Seharusnya menggunakan del untuk menghapus elemen dari sub-list.",
                "answer_code": "data = [['cat', 'dog'], ['fish', 'bird']]\ndel data[1][1]"
            },
            {
                "question": "Kenapa kode ini menyebabkan error?",
                "question_code": "complex_list = [[5, 10], [15, [20, 25]], 30]\nelement = complex_list[2].pop(1)",
                "answer": "Kesalahan terjadi karena elemen `complex_list[2]` adalah integer (30), bukan list, sehingga tidak bisa menggunakan metode pop.",
                "answer_code": "complex_list = [[5, 10], [15, [20, 25]], [30]]\nelement = complex_list[2].pop()"
            },
            {
                "question": "Apa yang akan terjadi pada nested list setelah menjalankan kode berikut?",
                "question_code": "nested_elements = [1, [2, 3], 4, [5, 6], 7]\nnested_elements[1].append(8)",
                "answer": "Kode tersebut benar dan menyebabkan perubahan pada nested list dengan menambahkan elemen 8 ke sub-list kedua.",
                "answer_code": "nested_elements = [1, [2, 3], 4, [5, 6], 7]\nnested_elements[1].append(8)"
            },
            {
                "question": "Apa yang menyebabkan kode ini tidak berfungsi saat mencoba menghapus elemen dari nested list?",
                "question_code": "matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nmatrix[2].remove(10)",
                "answer": "Kesalahan terjadi karena elemen 10 tidak ada dalam sub-list ketiga, sehingga tidak bisa dihapus.",
                "answer_code": "matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nmatrix[2].remove(9)"
            }
        ]
    }
]
