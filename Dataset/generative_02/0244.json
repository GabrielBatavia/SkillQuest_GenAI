[
    {
        "sumber": "PythonUntukPemula.com",
        "penulis": "Anita Prasetyo",
        "tanggal": "2024-01-10",
        "judul": "Penggunaan Variabel dan Tipe Data di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["variabel", "tipe data", "python"],
        "konten": "Artikel ini menjelaskan cara mendeklarasikan variabel dan menggunakan berbagai tipe data di Python.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat variabel di Python?",
                "answer": "Anda bisa membuat variabel dengan memberikan nilai padanya, seperti `x = 10`."
            },
            {
                "question": "Bagaimana cara mencetak nilai dari sebuah variabel?",
                "answer": "Gunakan fungsi `print()` untuk mencetak nilai variabel. Contohnya: `print(x)`."
            },
            {
                "question": "Apa itu tipe data di Python?",
                "answer": "Tipe data mengacu pada jenis nilai yang dapat disimpan dalam variabel, seperti integer, float, string, dan boolean."
            },
            {
                "question": "Kenapa kode saya tidak mencetak apa-apa?",
                "question_code": "x = 5\ny = 10\nprint(x + y",
                "answer": "Pastikan semua tanda kurung ditutup dengan benar. Contohnya: `print(x + y)`.",
                "answer_code": "x = 5\ny = 10\nprint(x + y)"
            },
            {
                "question": "Bagaimana cara menggabungkan string dan angka dalam satu print?",
                "question_code": "umur = 25\npesan = 'Umur saya adalah ' + umur\nprint(pesan)",
                "answer": "Anda harus mengonversi angka menjadi string sebelum menggabungkannya. Contohnya: `pesan = 'Umur saya adalah ' + str(umur)`.",
                "answer_code": "umur = 25\npesan = 'Umur saya adalah ' + str(umur)\nprint(pesan)"
            },
            {
                "question": "Bagaimana cara mengubah angka menjadi string?",
                "question_code": "angka = 100\nteks = str(angka)\nprint(teks)",
                "answer": "Gunakan fungsi `str()` untuk mengubah angka menjadi string. Contohnya: `teks = str(angka)`.",
                "answer_code": "angka = 100\nteks = str(angka)\nprint(teks)"
            },
            {
                "question": "Bagaimana cara memotong string di Python?",
                "question_code": "kata = 'Python'\npotongan = kata[1:4]\nprint(potongan)",
                "answer": "Anda bisa menggunakan slicing dengan notasi indeks. Contohnya: `kata[1:4]`.",
                "answer_code": "kata = 'Python'\npotongan = kata[1:4]\nprint(potongan)"
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf besar semua?",
                "question_code": "teks = 'python'\nprint(teks.UPPER())",
                "answer": "Pastikan metode yang digunakan benar. Gunakan `upper()` bukan `UPPER()`. Contohnya: `teks.upper()`.",
                "answer_code": "teks = 'python'\nprint(teks.upper())"
            },
            {
                "question": "Bagaimana cara menghitung panjang sebuah string?",
                "question_code": "teks = 'Python'\npanjang = len(teks)\nprint(panjang)",
                "answer": "Gunakan fungsi `len()` untuk menghitung panjang string. Contohnya: `len(teks)`.",
                "answer_code": "teks = 'Python'\npanjang = len(teks)\nprint(panjang)"
            }
        ]
    },
    {
        "sumber": "BelajarPythonAsik.com",
        "penulis": "Dedi Kurniawan",
        "tanggal": "2023-06-15",
        "judul": "Penggunaan Loop di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["loop", "for", "while", "python"],
        "konten": "Artikel ini membahas penggunaan loop di Python, termasuk for loop dan while loop untuk mengulang eksekusi kode.",
        "pertanyaan": [
            {
                "question": "Apa itu loop dalam pemrograman Python?",
                "answer": "Loop digunakan untuk mengulang eksekusi kode beberapa kali. Ada dua jenis loop utama di Python: for loop dan while loop."
            },
            {
                "question": "Bagaimana cara kerja for loop di Python?",
                "answer": "For loop digunakan untuk mengulang eksekusi kode untuk setiap elemen dalam sebuah iterable. Contohnya: `for i in range(5): print(i)`."
            },
            {
                "question": "Bagaimana cara kerja while loop di Python?",
                "answer": "While loop mengulang eksekusi kode selama kondisi tertentu bernilai True. Contohnya: `while x > 0: print(x); x -= 1`."
            },
            {
                "question": "Kenapa loop saya tidak berhenti?",
                "question_code": "x = 10\nwhile x > 0:\nprint(x)",
                "answer": "Anda perlu mengurangi nilai x di dalam loop agar kondisinya bisa berubah menjadi False. Contohnya: `x -= 1` di dalam loop.",
                "answer_code": "x = 10\nwhile x > 0:\n    print(x)\n    x -= 1"
            },
            {
                "question": "Bagaimana cara menghindari loop yang tidak pernah berhenti?",
                "question_code": "while True:\nprint('Looping')",
                "answer": "Pastikan ada kondisi yang bisa membuat loop berhenti. Misalnya, tambahkan syarat break dalam kondisi tertentu.",
                "answer_code": "count = 0\nwhile True:\n    print('Looping')\n    count += 1\n    if count == 5:\n        break"
            },
            {
                "question": "Bagaimana cara menggunakan loop dalam list?",
                "question_code": "buah = ['apel', 'jeruk', 'mangga']\nfor item in buah\nprint(item)",
                "answer": "Pastikan ada titik dua setelah for loop. Contohnya: `for item in buah:`.",
                "answer_code": "buah = ['apel', 'jeruk', 'mangga']\nfor item in buah:\n    print(item)"
            },
            {
                "question": "Bagaimana cara menghentikan loop lebih awal?",
                "question_code": "for i in range(10):\n    if i == 5:\n        break\n    print(i)",
                "answer": "Gunakan pernyataan `break` untuk menghentikan loop sebelum selesai. Contohnya: `if i == 5: break`.",
                "answer_code": "for i in range(10):\n    if i == 5:\n        break\n    print(i)"
            },
            {
                "question": "Bagaimana cara melewati iterasi dalam loop?",
                "question_code": "for i in range(10):\n    if i % 2 == 0:\n        continue\n    print(i)",
                "answer": "Gunakan pernyataan `continue` untuk melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya. Contohnya: `if i % 2 == 0: continue`.",
                "answer_code": "for i in range(10):\n    if i % 2 == 0:\n        continue\n    print(i)"
            },
            {
                "question": "Bagaimana cara menggunakan else dalam loop?",
                "question_code": "for i in range(5):\n    print(i)\nelse:\n    print('Loop selesai')",
                "answer": "Anda bisa menambahkan blok else yang akan dijalankan setelah loop selesai. Contohnya: `else: print('Loop selesai')`.",
                "answer_code": "for i in range(5):\n    print(i)\nelse:\n    print('Loop selesai')"
            }
        ]
    }
]
