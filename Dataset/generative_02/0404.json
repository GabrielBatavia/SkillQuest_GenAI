[
    {
        "sumber": "Python Programming Guide",
        "penulis": "Emily Roberts",
        "tanggal": "2024-11-03",
        "judul": "Menggabungkan List dengan `extend()` dan Operator `+`",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "extend", "Operator", "Pemula"],
        "konten": "Panduan ini menjelaskan cara menggabungkan dua list di Python menggunakan metode `extend()` dan operator `+`. Metode ini berguna untuk mengelola dan memanipulasi data dalam list. Pelajari perbedaan cara kerja dan contoh penggunaannya.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan `extend()` untuk menggabungkan list `list_x` dan `list_y`?",
                "answer": "Untuk menggabungkan list `list_x` dengan `list_y` menggunakan `extend()`, jalankan `list_x.extend(list_y)`. Ini akan menambahkan semua elemen dari `list_y` ke dalam `list_x`, dan `list_x` akan berisi elemen gabungan."
            },
            {
                "question": "Apa keuntungan dari menggunakan `+` dibandingkan `extend()` ketika menggabungkan dua list?",
                "answer": "Keuntungan utama dari operator `+` adalah bahwa ia tidak mengubah list yang ada, melainkan menghasilkan list baru yang berisi elemen gabungan dari kedua list. Sebaliknya, `extend()` mengubah list yang sudah ada dengan menambahkan elemen dari list lain."
            },
            {
                "question": "Bagaimana cara menggabungkan list `[100, 200]` dengan list `[300, 400]` menggunakan operator `+`?",
                "answer": "Untuk menggabungkan list `[100, 200]` dan `[300, 400]` menggunakan operator `+`, gunakan kode berikut: `result_list = [100, 200] + [300, 400]`. Ini akan menghasilkan list baru `[100, 200, 300, 400]`."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'str' object cannot be interpreted as an integer' saat menggunakan `extend()`?",
                "question_code": "list_a = [1, 2, 3]\nlist_a.extend('text')",
                "answer": "Error ini terjadi karena `extend()` hanya dapat menerima iterable. String 'text' adalah iterable, tetapi `extend()` mengharapkan iterable yang berisi elemen-elemen yang dapat ditambahkan ke list.",
                "answer_code": "list_a = [1, 2, 3]\nlist_a.extend(['text'])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'tuple') to list' ketika menggunakan operator `+`?",
                "question_code": "list_a = [5, 6]\ncombined_list = list_a + (7, 8)",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Konversikan tuple menjadi list untuk penggabungan.",
                "answer_code": "list_a = [5, 6]\ncombined_list = list_a + list((7, 8))"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'set') to list' saat menggunakan operator `+`?",
                "question_code": "list_a = [1, 2, 3]\ncombined_list = list_a + {4, 5}",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Gunakan `list()` untuk mengonversi set menjadi list sebelum penggabungan.",
                "answer_code": "list_a = [1, 2, 3]\ncombined_list = list_a + list({4, 5})"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'NoneType') to list' ketika menggunakan operator `+`?",
                "question_code": "list_a = [10, 20]\ncombined_list = list_a + None",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Konversikan tipe data lain menjadi list sebelum penggabungan.",
                "answer_code": "list_a = [10, 20]\ncombined_list = list_a + [None]"
            },
            {
                "question": "Kenapa terjadi error 'AttributeError: 'list' object has no attribute 'add_all'' ketika menggunakan `extend()`?",
                "question_code": "list_a = [1, 2, 3]\nlist_a.add_all([4, 5])",
                "answer": "Error ini terjadi karena method `add_all()` tidak ada pada list. Gunakan method `extend()` untuk menambahkan elemen dari iterable ke list yang ada.",
                "answer_code": "list_a = [1, 2, 3]\nlist_a.extend([4, 5])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'dict') to list' ketika menggunakan operator `+`?",
                "question_code": "list_a = [1, 2]\ncombined_list = list_a + {'key': 'value'}",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Konversikan dictionary menjadi list jika Anda ingin menggabungkannya.",
                "answer_code": "list_a = [1, 2]\ncombined_list = list_a + list({'key': 'value'})"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'float') to list' ketika menggunakan operator `+`?",
                "question_code": "list_a = [1, 2]\ncombined_list = list_a + 3.5",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Pastikan untuk mengonversi tipe data lain menjadi list terlebih dahulu.",
                "answer_code": "list_a = [1, 2]\ncombined_list = list_a + [3.5]"
            }
        ]
    },
    {
        "sumber": "Python for Beginners",
        "penulis": "David Lee",
        "tanggal": "2024-11-04",
        "judul": "Cara Menggabungkan List di Python dengan `extend()` dan `+`",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "Lists", "extend", "Operator", "Pemula"],
        "konten": "Artikel ini memberikan panduan langkah demi langkah tentang bagaimana menggabungkan dua list di Python menggunakan `extend()` dan operator `+`. Temukan bagaimana setiap metode berfungsi dan kapan sebaiknya menggunakannya.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan `extend()` untuk menggabungkan list `list_one` dan `list_two`?",
                "answer": "Untuk menggunakan `extend()` dalam menggabungkan list `list_one` dengan `list_two`, jalankan `list_one.extend(list_two)`. Ini akan menambahkan setiap elemen dari `list_two` ke `list_one` dan `list_one` akan berisi elemen gabungan."
            },
            {
                "question": "Apa perbedaan utama antara operator `+` dan `extend()` dalam menggabungkan list?",
                "answer": "Operator `+` menghasilkan list baru yang berisi elemen dari kedua list, sedangkan `extend()` mengubah list yang sudah ada dengan menambahkan elemen dari list lain."
            },
            {
                "question": "Bagaimana cara menggabungkan list `[1, 2, 3]` dengan list `[4, 5, 6]` menggunakan operator `+`?",
                "answer": "Untuk menggabungkan list `[1, 2, 3]` dan `[4, 5, 6]` menggunakan operator `+`, gunakan kode berikut: `combined = [1, 2, 3] + [4, 5, 6]`. Ini akan menghasilkan list baru `[1, 2, 3, 4, 5, 6]`."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'set') to list' saat menggunakan operator `+`?",
                "question_code": "list_a = [10, 20]\ncombined = list_a + {30, 40}",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Konversikan set menjadi list sebelum penggabungan.",
                "answer_code": "list_a = [10, 20]\ncombined = list_a + list({30, 40})"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'dict') to list' ketika menggunakan operator `+`?",
                "question_code": "list_a = [1, 2, 3]\ncombined = list_a + {'a': 10}",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Konversikan dictionary menjadi list jika Anda ingin menggabungkannya.",
                "answer_code": "list_a = [1, 2, 3]\ncombined = list_a + list({'a': 10}.items())"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'list' object cannot be interpreted as an integer' saat menggunakan `extend()`?",
                "question_code": "list_b = [1, 2]\nlist_b.extend(100)",
                "answer": "Error ini terjadi karena `extend()` hanya menerima iterable sebagai argumen. Untuk menambahkan elemen ke list, pastikan untuk memberikan iterable yang sesuai.",
                "answer_code": "list_b = [1, 2]\nlist_b.extend([100])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'tuple') to list' ketika menggunakan operator `+`?",
                "question_code": "list_c = [7, 8]\ncombined = list_c + (9, 10)",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Gunakan `list()` untuk mengonversi tuple menjadi list.",
                "answer_code": "list_c = [7, 8]\ncombined = list_c + list((9, 10))"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: can only concatenate list (not 'float') to list' saat menggunakan operator `+`?",
                "question_code": "list_d = [1, 2]\ncombined = list_d + 4.5",
                "answer": "Error ini terjadi karena operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Konversikan float menjadi list sebelum penggabungan.",
                "answer_code": "list_d = [1, 2]\ncombined = list_d + [4.5]"
            }
        ]
    }
]
