[
    {
        "sumber": "pythontutorial.net",
        "penulis": "Rahmat Hidayat",
        "tanggal": "2023-03-20",
        "judul": "Penggunaan List dan Dictionary di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "list", "dictionary"],
        "konten": "Artikel ini membahas cara menggunakan list dan dictionary di Python, termasuk cara membuat, mengakses, dan memodifikasi elemen.",
        "pertanyaan": [
            {
                "question": "Apa itu list di Python?",
                "answer": "List adalah struktur data yang dapat menyimpan beberapa item dalam satu variabel dan diakses menggunakan indeks."
            },
            {
                "question": "Bagaimana cara membuat list di Python?",
                "answer": "Anda bisa membuat list dengan menggunakan tanda kurung siku `[]` dan memisahkan item dengan koma. Contohnya: `my_list = [1, 2, 3]`."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam list?",
                "answer": "Anda bisa mengakses elemen dalam list dengan menggunakan indeks. Contohnya: `my_list[0]`."
            },
            {
                "question": "Bagaimana cara menambahkan elemen ke dalam list?",
                "question_code": "my_list.append(4)",
                "answer": "Anda bisa menambahkan elemen ke dalam list dengan menggunakan metode `append()`. Contohnya: `my_list.append(4)`."
            },
            {
                "question": "Bagaimana cara menghapus elemen dari list?",
                "question_code": "my_list.remove(2)",
                "answer": "Anda bisa menghapus elemen dari list dengan menggunakan metode `remove()`. Contohnya: `my_list.remove(2)`."
            },
            {
                "question": "Apa itu dictionary di Python?",
                "question_code": "my_dict = {'key': 'value'}",
                "answer": "Dictionary adalah struktur data yang menyimpan data dalam bentuk pasangan kunci-nilai. Contohnya: `my_dict = {'key': 'value'}`."
            },
            {
                "question": "Bagaimana cara mengakses nilai dalam dictionary?",
                "question_code": "value = my_dict['key']",
                "answer": "Anda bisa mengakses nilai dalam dictionary dengan menggunakan kunci. Contohnya: `value = my_dict['key']`."
            },
            {
                "question": "Bagaimana cara menambahkan pasangan kunci-nilai ke dictionary?",
                "question_code": "my_dict['new_key'] = 'new_value'",
                "answer": "Anda bisa menambahkan pasangan kunci-nilai ke dictionary dengan menugaskan nilai baru ke kunci baru. Contohnya: `my_dict['new_key'] = 'new_value'`."
            },
            {
                "question": "Bagaimana cara menghapus pasangan kunci-nilai dari dictionary?",
                "question_code": "del my_dict['key']",
                "answer": "Anda bisa menghapus pasangan kunci-nilai dari dictionary dengan menggunakan kata kunci `del`. Contohnya: `del my_dict['key']`."
            }
        ]
    },
    {
        "sumber": "pythonforbeginners.com",
        "penulis": "Lina Sari",
        "tanggal": "2024-05-18",
        "judul": "Penggunaan Loop di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "loop", "menengah"],
        "konten": "Artikel ini menjelaskan berbagai jenis loop di Python, termasuk loop `for` dan `while`, serta cara penggunaannya.",
        "pertanyaan": [
            {
                "question": "Apa itu loop `for` di Python?",
                "answer": "Loop `for` adalah struktur kontrol yang digunakan untuk mengulang blok kode sejumlah item dalam urutan."
            },
            {
                "question": "Bagaimana cara membuat loop `for` di Python?",
                "answer": "Anda bisa membuat loop `for` dengan menggunakan sintaks `for item in iterable:` diikuti dengan blok kode yang akan diulang."
            },
            {
                "question": "Apa itu loop `while` di Python?",
                "answer": "Loop `while` adalah struktur kontrol yang digunakan untuk mengulang blok kode selama kondisi tertentu terpenuhi."
            },
            {
                "question": "Bagaimana cara membuat loop `while` di Python?",
                "question_code": "while condition:\n    # blok kode",
                "answer": "Anda bisa membuat loop `while` dengan menggunakan sintaks `while condition:` diikuti dengan blok kode yang akan diulang.",
                "answer_code": "while condition:\n    # blok kode"
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `break` di dalam loop?",
                "question_code": "for item in iterable:\n    if condition:\n        break",
                "answer": "Pernyataan `break` digunakan untuk menghentikan loop sebelum loop selesai menjalankan semua iterasi. Contohnya: `if condition: break`."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `continue` di dalam loop?",
                "question_code": "for item in iterable:\n    if condition:\n        continue\n    # blok kode",
                "answer": "Pernyataan `continue` digunakan untuk melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya. Contohnya: `if condition: continue`."
            },
            {
                "question": "Bagaimana cara menggunakan loop bersarang di Python?",
                "question_code": "for i in range(3):\n    for j in range(3):\n        print(i, j)",
                "answer": "Anda bisa menggunakan loop bersarang dengan menempatkan satu loop di dalam loop lainnya. Contohnya: `for i in range(3): for j in range(3):`.",
                "answer_code": "for i in range(3):\n    for j in range(3):\n        print(i, j)"
            },
            {
                "question": "Bagaimana cara mengakses indeks dalam loop `for`?",
                "question_code": "for index, item in enumerate(iterable):\n    print(index, item)",
                "answer": "Anda bisa mengakses indeks dalam loop `for` dengan menggunakan fungsi `enumerate()`. Contohnya: `for index, item in enumerate(iterable):`.",
                "answer_code": "for index, item in enumerate(iterable):\n    print(index, item)"
            },
            {
                "question": "Bagaimana cara menggunakan loop `while` dengan pernyataan `else`?",
                "question_code": "while condition:\n    # blok kode\nelse:\n    # blok kode lain",
                "answer": "Anda bisa menggunakan pernyataan `else` dengan loop `while` untuk menjalankan blok kode lain ketika kondisi loop tidak lagi terpenuhi.",
                "answer_code": "while condition:\n    # blok kode\nelse:\n    # blok kode lain"
            }
        ]
    }
]
