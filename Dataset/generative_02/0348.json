[
    {
        "sumber": "Python Data Structures Handbook",
        "penulis": "Alice Walker",
        "tanggal": "2024-10-01",
        "judul": "Memanfaatkan List dengan Tipe Data Beragam di Python",
        "tingkat_kesulitan": "Intermediate",
        "tag": ["Python", "Lists", "Data Types"],
        "konten": "Artikel ini memberikan panduan tentang cara memanfaatkan list yang berisi tipe data beragam di Python, termasuk integer, string, list lain, tuple, set, dan dictionary.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan list yang berisi tipe data beragam di Python?",
                "answer": "Anda dapat mendeklarasikan list dengan tipe data beragam menggunakan tanda kurung siku dan memisahkan setiap elemen dengan koma. Contoh: my_list = [10, 'data', [4, 5], (6, 7), {8, 9}, {'key': 'value'}]"
            },
            {
                "question": "Mengapa penting untuk mengetahui bahwa list di Python dapat berisi tipe data beragam?",
                "answer": "Mengetahui bahwa list di Python dapat berisi tipe data beragam penting karena memberikan fleksibilitas dalam menyimpan dan memanipulasi data yang kompleks dalam satu struktur data tunggal."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam list yang berisi tipe data beragam?",
                "answer": "Anda dapat mengakses elemen dalam list menggunakan indeks. Contoh: my_list[3] akan mengakses elemen keempat dari my_list, yaitu (6, 7)."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: unhashable type: 'list'', saya tidak paham?",
                "question_code": "my_list = [2, 'hello', [3, 4]]\nmy_set = {my_list}",
                "answer": "Error ini terjadi karena list tidak dapat menjadi elemen dari set karena tidak hashable. Gunakan tipe data yang hashable seperti tuple.",
                "answer_code": "my_list = [2, 'hello', (3, 4)]\nmy_set = {2, 'hello', (3, 4)}"
            },
            {
                "question": "Kenapa terjadi error 'ValueError: dictionary update sequence element #0 has length 1; 2 is required', saya tidak paham?",
                "question_code": "my_dict = dict([5, 'five'])",
                "answer": "Error ini terjadi karena setiap elemen yang digunakan untuk menginisialisasi dictionary harus berupa pasangan kunci-nilai. Gunakan tuple untuk setiap pasangan.",
                "answer_code": "my_dict = dict([(5, 'five')])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'set' object does not support item assignment', saya tidak paham?",
                "question_code": "my_set = {40, 50, 60}\nmy_set[1] = 70",
                "answer": "Error ini terjadi karena set tidak mendukung penugasan item. Gunakan list jika elemen perlu diubah.",
                "answer_code": "my_list = [40, 50, 60]\nmy_list[1] = 70"
            },
            {
                "question": "Kenapa terjadi error 'KeyError: 'key'', saya tidak paham?",
                "question_code": "my_dict = {'key1': 'value1'}\nprint(my_dict['key3'])",
                "answer": "Error ini terjadi karena kunci yang diakses tidak ada dalam dictionary. Gunakan metode get() untuk menghindari error jika kunci tidak ada.",
                "answer_code": "my_dict = {'key1': 'value1'}\nprint(my_dict.get('key3', 'default_value'))"
            },
            {
                "question": "Kenapa terjadi error 'IndexError: list index out of range', saya tidak paham?",
                "question_code": "my_list = [10, 'data', (2, 3)]\nprint(my_list[4])",
                "answer": "Error ini terjadi karena indeks yang diakses berada di luar rentang list. Indeks dimulai dari 0, jadi indeks maksimum untuk list ini adalah 2.",
                "answer_code": "my_list = [10, 'data', (2, 3)]\nprint(my_list[2])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'dict' object is not iterable', saya tidak paham?",
                "question_code": "my_list = [1, 'world', {'a': 1}]\nfor i in {'a': 1}:\n    print(i)",
                "answer": "Error ini terjadi karena dictionary tidak dapat diiterasi seperti list. Pastikan Anda mengiterasi objek yang benar seperti list atau gunakan metode yang sesuai.",
                "answer_code": "my_list = [1, 'world', {'a': 1}]\nfor i in my_list:\n    print(i)"
            }
        ]
    },
    {
        "sumber": "Python Data Handling Mastery",
        "penulis": "Mark Wilson",
        "tanggal": "2024-10-05",
        "judul": "Manipulasi List dengan Beragam Tipe Data di Python",
        "tingkat_kesulitan": "Advanced",
        "tag": ["Python", "Lists", "Data Types"],
        "konten": "Panduan ini memberikan penjelasan mendalam tentang cara memanipulasi list yang berisi tipe data beragam di Python, termasuk integer, string, list lain, tuple, set, dan dictionary.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat list dengan tipe data beragam di Python?",
                "answer": "Anda dapat membuat list dengan tipe data beragam menggunakan tanda kurung siku dan memisahkan setiap elemen dengan koma. Contoh: my_list = [88, 'world', [9, 10], (11, 12), {13, 14}, {'key': 'value'}]"
            },
            {
                "question": "Apa keuntungan menggunakan list yang berisi tipe data beragam di Python?",
                "answer": "Menggunakan list yang berisi tipe data beragam memberikan fleksibilitas dalam menyimpan dan memanipulasi data yang kompleks dan heterogen dalam satu struktur data tunggal."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam list yang berisi tipe data beragam?",
                "answer": "Anda dapat mengakses elemen dalam list menggunakan indeks. Contoh: my_list[5] akan mengakses elemen keenam dari my_list, yaitu {'key': 'value'}."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: unhashable type: 'set'', saya tidak paham?",
                "question_code": "mixed_list = [3, 'example', {4, 5}]\nmy_set = {mixed_list}",
                "answer": "Error ini terjadi karena set tidak dapat menjadi elemen dari set lain karena tidak hashable. Gunakan tipe data yang hashable seperti tuple.",
                "answer_code": "mixed_list = [3, 'example', (4, 5)]\nmy_set = {3, 'example', (4, 5)}"
            },
            {
                "question": "Kenapa terjadi error 'ValueError: dictionary update sequence element #0 has length 1; 2 is required', saya tidak paham?",
                "question_code": "my_dict = dict(['x', 'y'])",
                "answer": "Error ini terjadi karena setiap elemen yang digunakan untuk menginisialisasi dictionary harus berupa pasangan kunci-nilai. Gunakan tuple untuk setiap pasangan.",
                "answer_code": "my_dict = dict([('x', 'y')])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'tuple' object does not support item assignment', saya tidak paham?",
                "question_code": "my_tuple = (50, 60, 70)\nmy_tuple[1] = 80",
                "answer": "Error ini terjadi karena tuple bersifat immutable dan tidak dapat diubah setelah didefinisikan. Gunakan list jika elemen perlu diubah.",
                "answer_code": "my_list = [50, 60, 70]\nmy_list[1] = 80"
            },
            {
                "question": "Kenapa terjadi error 'KeyError: 'name'', saya tidak paham?",
                "question_code": "my_dict = {'age': 30}\nprint(my_dict['name'])",
                "answer": "Error ini terjadi karena kunci yang diakses tidak ada dalam dictionary. Gunakan metode get() untuk menghindari error jika kunci tidak ada.",
                "answer_code": "my_dict = {'age': 30}\nprint(my_dict.get('name', 'unknown'))"
            },
            {
                "question": "Kenapa terjadi error 'IndexError: list index out of range', saya tidak paham?",
                "question_code": "data_list = [7, 'sample', (8, 9)]\nprint(data_list[4])",
                "answer": "Error ini terjadi karena indeks yang diakses berada di luar rentang list. Indeks dimulai dari 0, jadi indeks maksimum untuk list ini adalah 2.",
                "answer_code": "data_list = [7, 'sample', (8, 9)]\nprint(data_list[2])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'str' object is not iterable', saya tidak paham?",
                "question_code": "elements = [20, 'test', {'z': 1}]\nfor i in 'test':\n    print(i)",
                "answer": "Error ini terjadi karena string tidak dapat diiterasi seperti list. Pastikan Anda mengiterasi objek yang benar seperti list atau gunakan metode yang sesuai.",
                "answer_code": "elements = [20, 'test', {'z': 1}]\nfor i in elements:\n    print(i)"
            }
        ]
    }
]
