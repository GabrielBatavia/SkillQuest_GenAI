[
    {
        "sumber": "Python Techniques",
        "penulis": "Emily Davis",
        "tanggal": "2024-12-30",
        "judul": "Menerapkan List Comprehension untuk Pemula: Contoh Praktis",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Pemula"],
        "konten": "Artikel ini mengeksplorasi bagaimana list comprehension dapat digunakan dalam berbagai situasi praktis, membantu pemula memahami cara menyederhanakan kode mereka.",
        "pertanyaan": [
            {
                "question": "Anda sedang bekerja dengan dua list berbeda yang masing-masing berisi angka dari 1 hingga 5 dan 10 hingga 14. Anda perlu membuat list baru yang berisi selisih antara setiap elemen dari list pertama dengan setiap elemen dari list kedua. Bagaimana Anda melakukannya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[b - a for a in range(1, 6) for b in range(10, 15)]`. Ini akan menghasilkan list `[-9, -8, -7, -6, -5, -8, -7, -6, -5, -4, -7, -6, -5, -4, -3, -6, -5, -4, -3, -2, -5, -4, -3, -2, -1]`."
            },
            {
                "question": "Anda diberikan string `'exploration'` dan diminta untuk membuat list dari semua substring dengan panjang lebih dari 3 karakter yang terdiri dari huruf konsonan saja. Bagaimana Anda dapat mencapainya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[s for s in (word[i:j] for i in range(len(word)) for j in range(i + 4, len(word) + 1)) if all(c not in 'aeiou' for c in s)]`. Ini akan menghasilkan list `['xplr', 'xplor', 'plr', 'plor', 'lor', 'r']`."
            },
            {
                "question": "Misalkan Anda memiliki list yang berisi tuple-tuple `(angka, string)` seperti `[(1, 'a'), (2, 'bb'), (3, 'ccc')]`. Anda ingin membuat list baru yang berisi panjang string di setiap tuple yang panjangnya lebih dari 1 karakter. Bagaimana Anda akan melakukannya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[len(t[1]) for t in [(1, 'a'), (2, 'bb'), (3, 'ccc')] if len(t[1]) > 1]`. Ini akan menghasilkan list `[2, 3]`."
            },
            {
                "question": "Anda memiliki list yang berisi beberapa string yang mungkin mengandung karakter non-alfabet seperti `['hello!', 'world$', 'python123']`. Bagaimana Anda dapat membuat list baru yang hanya berisi string yang mengandung huruf dan memiliki panjang lebih dari 5 karakter setelah menghapus karakter non-alfabet?",
                "answer": "Gunakan kode berikut: `[''.join(filter(str.isalpha, s)) for s in ['hello!', 'world$', 'python123'] if len(''.join(filter(str.isalpha, s))) > 5]`. Ini akan menghasilkan list `['hello', 'python']`."
            },
            {
                "question": "Diberikan sebuah list angka `[-1, 0, 2, -3, 5]`, Anda ingin membuat list baru yang berisi nilai absolut dari angka-angka tersebut jika angka tersebut adalah bilangan genap. Bagaimana cara Anda mengimplementasikannya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[abs(x) for x in [-1, 0, 2, -3, 5] if x % 2 == 0]`. Ini akan menghasilkan list `[0, 2]`."
            },
            {
                "question": "Anda memiliki list dari string angka `['4', '12', '9', '7']` dan ingin membuat list dari angka yang merupakan angka ganjil setelah mengonversi string ke integer. Bagaimana Anda dapat melakukannya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[int(x) for x in ['4', '12', '9', '7'] if int(x) % 2 != 0]`. Ini akan menghasilkan list `[9, 7]`."
            }
        ]
    },
    {
        "sumber": "Advanced Python",
        "penulis": "James Lee",
        "tanggal": "2024-12-31",
        "judul": "List Comprehension dalam Python: Studi Kasus dan Penerapan",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Pemula"],
        "konten": "Panduan ini mencakup studi kasus nyata tentang penggunaan list comprehension, memberikan wawasan mendalam tentang bagaimana teknik ini dapat meningkatkan efisiensi pemrograman.",
        "pertanyaan": [
            {
                "question": "Anda diminta untuk menghasilkan list dari semua kombinasi pasangan huruf dari list `['a', 'b', 'c']` di mana huruf pertama harus lebih awal dalam alfabet daripada huruf kedua. Bagaimana Anda bisa melakukannya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[(a, b) for a in ['a', 'b', 'c'] for b in ['a', 'b', 'c'] if a < b]`. Ini akan menghasilkan list `[('a', 'b'), ('a', 'c'), ('b', 'c')]`."
            },
            {
                "question": "Bagaimana cara membuat list yang berisi semua bilangan bulat dalam rentang 1 hingga 50 yang merupakan kuadrat dari bilangan bulat lain, tetapi hanya jika kuadrat tersebut juga merupakan bilangan genap?",
                "answer": "Gunakan kode berikut: `[x**2 for x in range(1, 8) if (x**2) % 2 == 0]`. Ini akan menghasilkan list `[4, 16, 36, 64]`."
            },
            {
                "question": "Anda memiliki list dari string `['123', '456', '789']`. Bagaimana Anda dapat membuat list baru yang berisi hasil penjumlahan dari setiap digit di setiap string yang panjangnya lebih dari 2 karakter?",
                "answer": "Gunakan kode berikut: `[sum(int(digit) for digit in s) for s in ['123', '456', '789'] if len(s) > 2]`. Ini akan menghasilkan list `[6, 15, 24]`."
            },
            {
                "question": "Anda diberi sebuah list dari angka `[-5, 3, 0, 8, -2]`. Buatlah list baru yang berisi angka-angka tersebut setelah dikalikan dengan 2 jika angka tersebut lebih besar dari 0. Bagaimana Anda melakukannya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[x * 2 for x in [-5, 3, 0, 8, -2] if x > 0]`. Ini akan menghasilkan list `[6, 16]`."
            },
            {
                "question": "Bagaimana Anda bisa membuat list dari setiap elemen dalam list `['cat', 'dog', 'fish']` yang panjangnya lebih dari 2 karakter dan mengubah setiap huruf menjadi huruf kapital menggunakan list comprehension?",
                "answer": "Gunakan kode berikut: `[word.upper() for word in ['cat', 'dog', 'fish'] if len(word) > 2]`. Ini akan menghasilkan list `['CAT', 'DOG', 'FISH']`."
            }
        ]
    }
]
