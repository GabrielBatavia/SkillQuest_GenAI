[
    {
        "sumber": "Practical Python Insights",
        "penulis": "Sophia Martinez",
        "tanggal": "2024-12-15",
        "judul": "List Comprehension: Memahami dan Mengaplikasikannya dalam Kode Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Pemula"],
        "konten": "Artikel ini menjelaskan konsep dasar list comprehension di Python dengan pendekatan praktis. List comprehension adalah cara yang efisien untuk memproses data dalam list dengan sintaksis yang lebih ringkas dibandingkan loop tradisional.",
        "pertanyaan": [
            {
                "question": "Bayangkan Anda memiliki sebuah list berisi angka dari 10 hingga 20. Bagaimana cara membuat list baru yang berisi angka-angka tersebut jika angka-angka tersebut lebih besar dari 15?",
                "answer": "Gunakan kode berikut: `[x for x in range(10, 21) if x > 15]`. Ini akan menghasilkan list `[16, 17, 18, 19, 20]`."
            },
            {
                "question": "Jika Anda ingin mengubah semua elemen dalam list `[5, 10, 15]` menjadi string yang ditambah dengan huruf 'x', apa kode list comprehension yang bisa digunakan?",
                "answer": "Gunakan kode berikut: `[str(x) + 'x' for x in [5, 10, 15]]`. Ini akan menghasilkan list `['5x', '10x', '15x']`."
            },
            {
                "question": "Dalam konteks mengubah setiap string dalam list `['apple', 'banana', 'cherry']` menjadi huruf kapital, bagaimana Anda menggunakan list comprehension?",
                "answer": "Gunakan kode berikut: `[word.upper() for word in ['apple', 'banana', 'cherry']]`. Ini akan menghasilkan list `['APPLE', 'BANANA', 'CHERRY']`."
            },
            {
                "question": "Anda diberi tugas untuk membuat list yang berisi panjang setiap elemen dari list `['dog', 'elephant', 'rat']`. Bagaimana Anda menyelesaikan tugas ini dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[len(word) for word in ['dog', 'elephant', 'rat']]`. Ini akan menghasilkan list `[3, 8, 3]`."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'str' object is not iterable' pada kode berikut: `[x for x in 'hello']`?",
                "question_code": "[x for x in 'hello']",
                "answer": "Sebenarnya, kode ini valid dan akan menghasilkan list dari huruf-huruf dalam string. Pastikan bahwa Anda memang ingin melakukan iterasi pada string, dan periksa jika ada kesalahan lain di kode Anda.",
                "answer_code": "[x for x in 'hello']"
            },
            {
                "question": "Apakah Anda dapat menjelaskan mengapa kode `[a for a in range(5) if a > 2]` tidak menghasilkan hasil yang diharapkan, jika Anda hanya mendapatkan list kosong?",
                "question_code": "[a for a in range(5) if a > 2]",
                "answer": "Kode ini sebenarnya valid dan harus menghasilkan `[3, 4]`. Jika Anda mendapatkan list kosong, periksa kembali kondisi atau pastikan bahwa list yang digunakan memang sesuai dengan harapan Anda.",
                "answer_code": "[a for a in range(5) if a > 2]"
            },
            {
                "question": "Bagaimana Anda dapat menggunakan list comprehension untuk menghasilkan list dari string yang berisi huruf vokal dari string 'python'?",
                "answer": "Gunakan kode berikut: `[char for char in 'python' if char in 'aeiou']`. Ini akan menghasilkan list `['o']`, karena 'o' adalah satu-satunya huruf vokal dalam string tersebut."
            }
        ]
    },
    {
        "sumber": "Beginner's Python Guide",
        "penulis": "James Lee",
        "tanggal": "2024-12-16",
        "judul": "List Comprehension untuk Pemula: Contoh dan Penjelasan",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Pemula"],
        "konten": "Artikel ini membahas cara praktis menggunakan list comprehension untuk pemula dengan berbagai contoh yang mudah dipahami. List comprehension memberikan cara yang sederhana untuk menghasilkan dan memodifikasi list dengan cara yang efisien.",
        "pertanyaan": [
            {
                "question": "Anda memiliki sebuah list yang berisi angka dari 1 hingga 10. Bagaimana cara menghasilkan list baru yang berisi angka-angka genap dari list tersebut?",
                "answer": "Gunakan kode berikut: `[x for x in range(1, 11) if x % 2 == 0]`. Ini akan menghasilkan list `[2, 4, 6, 8, 10]`."
            },
            {
                "question": "Bagaimana Anda dapat mengubah setiap elemen dalam list `[2, 4, 6]` menjadi bilangan pangkat dua menggunakan list comprehension?",
                "answer": "Gunakan kode berikut: `[x**2 for x in [2, 4, 6]]`. Ini akan menghasilkan list `[4, 16, 36]`."
            },
            {
                "question": "Dapatkah Anda menggunakan list comprehension untuk membuat list dari hasil concatenation antara setiap elemen dalam list `['cat', 'dog']` dengan string 's'? Apa kodenya?",
                "answer": "Gunakan kode berikut: `[word + 's' for word in ['cat', 'dog']]`. Ini akan menghasilkan list `['cats', 'dogs']`."
            },
            {
                "question": "Jika Anda ingin memfilter elemen lebih kecil dari 5 dari list `[3, 6, 9]`, bagaimana caranya dengan list comprehension?",
                "answer": "Gunakan kode berikut: `[x for x in [3, 6, 9] if x < 5]`. Ini akan menghasilkan list `[3]`."
            },
            {
                "question": "Kenapa terjadi error 'AttributeError: 'list' object has no attribute 'lower'' pada kode berikut: `[x.lower() for x in [1, 2, 3]]`?",
                "question_code": "[x.lower() for x in [1, 2, 3]]",
                "answer": "Error ini terjadi karena metode `lower()` hanya berlaku untuk string, bukan angka. Pastikan semua elemen dalam list adalah string jika Anda ingin menggunakan metode ini.",
                "answer_code": "[x.lower() for x in ['A', 'B', 'C']]"
            },
            {
                "question": "Apakah Anda bisa menjelaskan mengapa list comprehension `[x for x in [1, 2, 3] if x % 2 == 0]` hanya menghasilkan satu elemen?",
                "question_code": "[x for x in [1, 2, 3] if x % 2 == 0]",
                "answer": "Kode ini valid dan akan menghasilkan `[2]`. Ini hanya menghasilkan satu elemen karena hanya `2` yang memenuhi kondisi `x % 2 == 0` dalam list tersebut.",
                "answer_code": "[x for x in [1, 2, 3] if x % 2 == 0]"
            },
            {
                "question": "Bagaimana Anda bisa menggunakan list comprehension untuk menghasilkan list dari karakter unik dalam string 'programming'?",
                "answer": "Gunakan kode berikut: `[char for char in set('programming')]`. Ini akan menghasilkan list karakter unik seperti `['r', 'g', 'a', 'p', 'o', 'm', 'i', 'n']`."
            }
        ]
    }
]
