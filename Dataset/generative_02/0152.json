[
    {
        "sumber": "w3schools.com",
        "penulis": "Alice Johnson",
        "tanggal": "2024-07-22",
        "judul": "Memahami Variabel dan Tipe Data di Python",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "variabel", "tipe data"],
        "konten": "Artikel ini menjelaskan bagaimana cara mendeklarasikan variabel dan memahami berbagai tipe data dalam Python.",
        "pertanyaan": [
            {
                "question": "Apa yang dimaksud dengan tipe data integer di Python dan bagaimana contohnya?",
                "answer": "Tipe data integer (int) adalah tipe data untuk bilangan bulat tanpa desimal. Contoh: 42, -7, dan 0."
            },
            {
                "question": "Bagaimana cara Anda mendeklarasikan variabel dengan tipe float di Python?",
                "answer": "Anda dapat mendeklarasikan variabel bertipe float dengan memberikan nilai desimal. Contohnya: `pi = 3.14`."
            },
            {
                "question": "Apa perbedaan antara tipe data string dan integer di Python?",
                "answer": "Tipe data string (str) digunakan untuk menyimpan teks, sedangkan tipe data integer (int) digunakan untuk bilangan bulat. Contoh string: 'Hello', contoh integer: 100."
            },
            {
                "question": "Bagaimana cara Anda memeriksa tipe data suatu variabel dengan `type()`?",
                "question_code": "variable = 42\nprint(type(variable))",
                "answer": "Gunakan fungsi `type()` untuk mengetahui tipe data dari variabel. Contoh penggunaan: `print(type(variable))`.",
                "answer_code": "<class 'int'>"
            },
            {
                "question": "Jika Anda memiliki string '456', bagaimana cara mengubahnya menjadi integer?",
                "question_code": "string_number = '456'\nnumber = int(string_number)",
                "answer": "Anda bisa mengubah string menjadi integer menggunakan fungsi `int()`, seperti `number = int(string_number)`.",
                "answer_code": "456"
            },
            {
                "question": "Apa itu list di Python dan berikan contoh penggunaannya?",
                "question_code": "numbers = [1, 2, 3, 4]",
                "answer": "List adalah tipe data yang menyimpan beberapa item dalam satu variabel. Contoh list: `[1, 2, 3, 4]`.",
                "answer_code": "[1, 2, 3, 4]"
            },
            {
                "question": "Bagaimana Anda menambahkan elemen baru ke list yang sudah ada?",
                "question_code": "numbers = [1, 2]\nnumbers.append(3)",
                "answer": "Elemen baru dapat ditambahkan dengan metode `append()`, contohnya: `numbers.append(3)`.",
                "answer_code": "[1, 2, 3]"
            },
            {
                "question": "Jika Anda memiliki list `[10, 20, 30, 40]`, bagaimana cara Anda mendapatkan sublist dari indeks 1 hingga 3?",
                "question_code": "numbers = [10, 20, 30, 40]\nsub_list = numbers[1:4]",
                "answer": "Anda dapat menggunakan slicing untuk mendapatkan sublist. Contoh: `sub_list = numbers[1:4]`.",
                "answer_code": "[20, 30, 40]"
            },
            {
                "question": "Bagaimana Anda dapat menghitung jumlah elemen dalam list?",
                "question_code": "numbers = [10, 20, 30]\nlength = len(numbers)",
                "answer": "Gunakan fungsi `len()` untuk menghitung jumlah elemen dalam list. Contoh: `length = len(numbers)`.",
                "answer_code": "3"
            }
        ]
    },
    {
        "sumber": "geeksforgeeks.org",
        "penulis": "Robert Brown",
        "tanggal": "2024-07-21",
        "judul": "Dasar-Dasar Sintaks Python untuk Pemula",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "syntax", "pemula"],
        "konten": "Panduan ini memberikan penjelasan dasar mengenai sintaks Python dan cara penggunaannya untuk pemula.",
        "pertanyaan": [
            {
                "question": "Apa fungsi dari `print()` dalam Python?",
                "answer": "Fungsi `print()` digunakan untuk menampilkan hasil ke layar, contohnya: `print('Hello, Python!')`."
            },
            {
                "question": "Bagaimana Anda bisa mendefinisikan fungsi yang hanya mencetak pesan?",
                "answer": "Anda dapat mendefinisikan fungsi dengan `def`, misalnya: `def greet(): print('Hello!')`."
            },
            {
                "question": "Apa itu loop dan bagaimana Anda menggunakannya di Python?",
                "answer": "Loop adalah struktur kontrol yang digunakan untuk menjalankan blok kode beberapa kali, seperti menggunakan `for` dan `while`."
            },
            {
                "question": "Jika Anda ingin mencetak setiap item dalam list `[5, 6, 7]`, bagaimana caranya?",
                "question_code": "items = [5, 6, 7]\nfor item in items:\n    print(item)",
                "answer": "Gunakan loop `for` untuk iterasi melalui setiap item dalam list, seperti `for item in items: print(item)`.",
                "answer_code": "5\n6\n7"
            },
            {
                "question": "Bagaimana cara membuat loop yang berhenti ketika kondisi tidak lagi terpenuhi?",
                "question_code": "i = 0\nwhile i < 3:\n    print(i)\n    i += 1",
                "answer": "Gunakan loop `while` untuk menjalankan kode selama kondisi bernilai True, contohnya: `while i < 3: print(i); i += 1`.",
                "answer_code": "0\n1\n2"
            },
            {
                "question": "Apa peran dari operator aritmatika seperti `+` dan `-` di Python?",
                "question_code": "a = 8\nb = 3\nresult = a - b",
                "answer": "Operator aritmatika seperti `+` dan `-` digunakan untuk operasi matematika, misalnya: `result = a - b`.",
                "answer_code": "5"
            },
            {
                "question": "Bagaimana Anda memeriksa jika sebuah karakter ada di dalam string?",
                "question_code": "text = 'Python'\nif 'P' in text:\n    print('Ditemukan')",
                "answer": "Anda bisa memeriksa keberadaan karakter dalam string dengan `in`, seperti `if 'P' in text: print('Ditemukan')`.",
                "answer_code": "Ditemukan"
            },
            {
                "question": "Jika Anda memiliki string 'WORLD', bagaimana cara mengubahnya menjadi huruf kecil?",
                "question_code": "text = 'WORLD'\nlower_text = text.lower()",
                "answer": "Gunakan metode `lower()` untuk mengubah string menjadi huruf kecil, misalnya: `lower_text = text.lower()`.",
                "answer_code": "world"
            },
            {
                "question": "Bagaimana Anda dapat menghapus item terakhir dari sebuah list?",
                "question_code": "numbers = [1, 2, 3]\nnumbers.pop()",
                "answer": "Gunakan metode `pop()` untuk menghapus item terakhir dari list, contohnya: `numbers.pop()`.",
                "answer_code": "[1, 2]"
            }
        ]
    },
    {
        "sumber": "tutorialspoint.com",
        "penulis": "Emily White",
        "tanggal": "2024-07-19",
        "judul": "Memulai dengan Sintaks Python: Panduan untuk Pemula",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "syntax", "tutorial"],
        "konten": "Panduan ini dirancang untuk membantu pemula memahami sintaks dasar Python dan bagaimana menerapkannya.",
        "pertanyaan": [
            {
                "question": "Bagaimana Anda dapat menggunakan `input()` untuk mendapatkan input dari pengguna?",
                "answer": "Fungsi `input()` digunakan untuk meminta input dari pengguna, contohnya: `name = input('Masukkan nama Anda: ')`."
            },
            {
                "question": "Apa perbedaan antara operator perbandingan `==` dan `!=`?",
                "answer": "Operator `==` memeriksa apakah dua nilai sama, sedangkan `!=` memeriksa apakah dua nilai tidak sama. Contoh: `5 == 5` adalah True, `5 != 3` adalah True."
            },
            {
                "question": "Apa itu tuple dan bagaimana penggunaannya berbeda dengan list?",
                "answer": "Tuple adalah struktur data yang mirip dengan list tetapi tidak dapat diubah setelah dibuat (immutable). Contohnya: `(1, 2, 3)`."
            },
            {
                "question": "Bagaimana cara mendeklarasikan dan menggunakan tuple di Python?",
                "question_code": "t = (1, 2, 3)\nprint(t[0])",
                "answer": "Tuple dideklarasikan dengan tanda kurung, misalnya: `t = (1, 2, 3)`. Akses item dengan indeks, seperti `print(t[0])`.",
                "answer_code": "1"
            },
            {
                "question": "Jika Anda memiliki tuple `(10, 20, 30)`, bagaimana cara mengubah nilai pada indeks 1?",
                "answer": "Tuple tidak bisa diubah setelah dibuat. Jika Anda perlu mengubah nilai, buat tuple baru dengan nilai yang diinginkan.",
                "answer_code": "Tuple tidak dapat diubah setelah dibuat."
            },
            {
                "question": "Apa itu set dan bagaimana cara mendeklarasikannya?",
                "question_code": "s = {1, 2, 3}",
                "answer": "Set adalah koleksi data yang tidak memiliki duplikat dan tidak terurut. Deklarasikan set dengan kurung kurawal, misalnya: `s = {1, 2, 3}`.",
                "answer_code": "{1, 2, 3}"
            },
            {
                "question": "Bagaimana cara menambahkan item baru ke dalam set?",
                "question_code": "s = {1, 2}\ns.add(3)",
                "answer": "Gunakan metode `add()` untuk menambahkan item baru ke set, misalnya: `s.add(3)`.",
                "answer_code": "{1, 2, 3}"
            },
            {
                "question": "Apa itu dictionary dan bagaimana cara mendeklarasikannya?",
                "question_code": "d = {'key': 'value'}\nprint(d['key'])",
                "answer": "Dictionary adalah struktur data yang menyimpan pasangan key-value. Deklarasikan dengan kurung kurawal, misalnya: `d = {'key': 'value'}`.",
                "answer_code": "'value'"
            },
            {
                "question": "Bagaimana cara menambahkan pasangan key-value baru ke dictionary?",
                "question_code": "d = {'key': 'value'}\nd['new_key'] = 'new_value'",
                "answer": "Gunakan sintaks `dictionary[key] = value` untuk menambahkan pasangan key-value baru. Contoh: `d['new_key'] = 'new_value'`.",
                "answer_code": "{'key': 'value', 'new_key': 'new_value'}"
            }
        ]
    }
]
