[
    {
        "sumber": "Python Data Handling",
        "penulis": "David Brown",
        "tanggal": "2024-09-20",
        "judul": "Penggunaan Beragam Tipe Data dalam List Python",
        "tingkat_kesulitan": "Intermediate",
        "tag": ["Python", "Lists", "Data Types"],
        "konten": "Artikel ini menjelaskan bagaimana cara menggunakan beragam tipe data sebagai elemen dalam list di Python, termasuk integer, string, list lain, tuple, set, dan dictionary.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan list dengan beragam tipe data di Python?",
                "answer": "Anda dapat mendeklarasikan list dengan beragam tipe data menggunakan tanda kurung siku dan memisahkan setiap elemen dengan koma. Contoh: my_list = [25, 'hello', [7, 8], (9, 10), {11, 12}, {'key': 'value'}]"
            },
            {
                "question": "Mengapa penting untuk mengetahui bahwa list di Python dapat berisi beragam tipe data?",
                "answer": "Mengetahui bahwa list di Python dapat berisi beragam tipe data penting karena memberikan fleksibilitas dalam menyimpan dan memanipulasi data yang kompleks dalam satu struktur data tunggal."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam list yang berisi beragam tipe data?",
                "answer": "Anda dapat mengakses elemen dalam list menggunakan indeks. Contoh: my_list[3] akan mengakses elemen keempat dari my_list, yaitu (9, 10)."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: unhashable type: 'list'', saya tidak paham?",
                "question_code": "my_list = [1, 'text', [2, 3]]\nmy_set = {my_list}",
                "answer": "Error ini terjadi karena list tidak dapat menjadi elemen dari set karena tidak hashable. Gunakan tipe data yang hashable.",
                "answer_code": "my_list = [1, 'text', (2, 3)]\nmy_set = {1, 'text', (2, 3)}"
            },
            {
                "question": "Kenapa terjadi error 'ValueError: dictionary update sequence element #0 has length 1; 2 is required', saya tidak paham?",
                "question_code": "my_dict = dict([3, 'three'])",
                "answer": "Error ini terjadi karena setiap elemen yang digunakan untuk menginisialisasi dictionary harus berupa pasangan kunci-nilai. Gunakan tuple untuk setiap pasangan.",
                "answer_code": "my_dict = dict([(3, 'three')])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'set' object does not support item assignment', saya tidak paham?",
                "question_code": "my_set = {20, 30, 40}\nmy_set[0] = 50",
                "answer": "Error ini terjadi karena set tidak mendukung penugasan item. Gunakan list jika elemen perlu diubah.",
                "answer_code": "my_list = [20, 30, 40]\nmy_list[0] = 50"
            },
            {
                "question": "Kenapa terjadi error 'KeyError: 'missing_key'', saya tidak paham?",
                "question_code": "my_dict = {'key1': 'value1'}\nprint(my_dict['missing_key'])",
                "answer": "Error ini terjadi karena kunci yang diakses tidak ada dalam dictionary. Gunakan metode get() untuk menghindari error jika kunci tidak ada.",
                "answer_code": "my_dict = {'key1': 'value1'}\nprint(my_dict.get('missing_key', 'default_value'))"
            },
            {
                "question": "Kenapa terjadi error 'IndexError: list index out of range', saya tidak paham?",
                "question_code": "my_list = [5, 'hello', (6, 7)]\nprint(my_list[4])",
                "answer": "Error ini terjadi karena indeks yang diakses berada di luar rentang list. Indeks dimulai dari 0, jadi indeks maksimum untuk list ini adalah 2.",
                "answer_code": "my_list = [5, 'hello', (6, 7)]\nprint(my_list[2])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'str' object is not iterable', saya tidak paham?",
                "question_code": "my_list = [5, 'hello', (6, 7)]\nfor i in 'string':\n    print(i)",
                "answer": "Error ini terjadi karena string tidak dapat diiterasi seperti list. Pastikan Anda mengiterasi objek yang benar seperti list atau gunakan metode yang sesuai.",
                "answer_code": "my_list = [5, 'hello', (6, 7)]\nfor i in my_list:\n    print(i)"
            }
        ]
    },
    {
        "sumber": "Advanced Python Data Handling",
        "penulis": "Lisa Martin",
        "tanggal": "2024-09-25",
        "judul": "Manipulasi List dengan Beragam Tipe Data di Python",
        "tingkat_kesulitan": "Advanced",
        "tag": ["Python", "Lists", "Data Types"],
        "konten": "Panduan ini memberikan penjelasan mendalam tentang cara memanipulasi list yang berisi beragam tipe data di Python, termasuk integer, string, list lain, tuple, set, dan dictionary.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat list dengan beragam tipe data di Python?",
                "answer": "Anda dapat membuat list dengan beragam tipe data menggunakan tanda kurung siku dan memisahkan setiap elemen dengan koma. Contoh: my_list = [33, 'world', [11, 12], (13, 14), {15, 16}, {'key': 'value'}]"
            },
            {
                "question": "Apa keuntungan menggunakan list yang berisi beragam tipe data di Python?",
                "answer": "Menggunakan list yang berisi beragam tipe data memberikan fleksibilitas dalam menyimpan dan memanipulasi data yang kompleks dan heterogen dalam satu struktur data tunggal."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam list yang berisi beragam tipe data?",
                "answer": "Anda dapat mengakses elemen dalam list menggunakan indeks. Contoh: my_list[5] akan mengakses elemen keenam dari my_list, yaitu {'key': 'value'}."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: unhashable type: 'list'', saya tidak paham?",
                "question_code": "mixed_list = [2, 'sample', [4, 5]]\nmy_set = {mixed_list}",
                "answer": "Error ini terjadi karena list tidak dapat menjadi elemen dari set karena tidak hashable. Gunakan tipe data yang hashable seperti tuple.",
                "answer_code": "mixed_list = [2, 'sample', (4, 5)]\nmy_set = {2, 'sample', (4, 5)}"
            },
            {
                "question": "Kenapa terjadi error 'ValueError: dictionary update sequence element #0 has length 1; 2 is required', saya tidak paham?",
                "question_code": "my_dict = dict(['a', 'b'])",
                "answer": "Error ini terjadi karena setiap elemen yang digunakan untuk menginisialisasi dictionary harus berupa pasangan kunci-nilai. Gunakan tuple untuk setiap pasangan.",
                "answer_code": "my_dict = dict([('a', 'b')])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'tuple' object does not support item assignment', saya tidak paham?",
                "question_code": "my_tuple = (20, 30, 40)\nmy_tuple[1] = 50",
                "answer": "Error ini terjadi karena tuple bersifat immutable dan tidak dapat diubah setelah didefinisikan. Gunakan list jika elemen perlu diubah.",
                "answer_code": "my_list = [20, 30, 40]\nmy_list[1] = 50"
            },
            {
                "question": "Kenapa terjadi error 'KeyError: 'name'', saya tidak paham?",
                "question_code": "my_dict = {'age': 25}\nprint(my_dict['name'])",
                "answer": "Error ini terjadi karena kunci yang diakses tidak ada dalam dictionary. Gunakan metode get() untuk menghindari error jika kunci tidak ada.",
                "answer_code": "my_dict = {'age': 25}\nprint(my_dict.get('name', 'unknown'))"
            },
            {
                "question": "Kenapa terjadi error 'IndexError: list index out of range', saya tidak paham?",
                "question_code": "data_list = [3, 'example', (5, 6)]\nprint(data_list[4])",
                "answer": "Error ini terjadi karena indeks yang diakses berada di luar rentang list. Indeks dimulai dari 0, jadi indeks maksimum untuk list ini adalah 2.",
                "answer_code": "data_list = [3, 'example', (5, 6)]\nprint(data_list[2])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'set' object is not iterable', saya tidak paham?",
                "question_code": "elements = [10, 'test', {'x': 1}]\nfor i in {4, 5}:\n    print(i)",
                "answer": "Error ini terjadi karena set tidak dapat diiterasi seperti list. Pastikan Anda mengiterasi objek yang benar seperti list atau gunakan metode yang sesuai.",
                "answer_code": "elements = [10, 'test', {'x': 1}]\nfor i in elements:\n    print(i)"
            }
        ]
    }
]
