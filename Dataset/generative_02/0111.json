[
    {
        "sumber": "pythonuntukpemula.com",
        "penulis": "Teguh Pramono",
        "tanggal": "2023-02-14",
        "judul": "Penggunaan Operasi String di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "string", "operasi dasar"],
        "konten": "Artikel ini menjelaskan berbagai operasi dasar pada string di Python, seperti penggabungan, pengulangan, dan pemeriksaan substring.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggabungkan dua string di Python?",
                "answer": "Anda bisa menggabungkan dua string dengan menggunakan operator `+`. Contohnya: `str1 + str2`."
            },
            {
                "question": "Bagaimana cara mengulang string beberapa kali di Python?",
                "question_code": "str1 * 3",
                "answer": "Anda bisa mengulang string beberapa kali dengan menggunakan operator `*`. Contohnya: `str1 * 3`.",
                "answer_code": "str1 * 3"
            },
            {
                "question": "Bagaimana cara memeriksa apakah substring ada dalam string di Python?",
                "question_code": "'Hello' in str1",
                "answer": "Anda bisa memeriksa apakah substring ada dalam string dengan menggunakan operator `in`. Contohnya: `'Hello' in str1`.",
                "answer_code": "'Hello' in str1"
            },
            {
                "question": "Bagaimana cara menemukan posisi substring dalam string di Python?",
                "question_code": "str1.find('world')",
                "answer": "Anda bisa menemukan posisi substring dalam string dengan menggunakan metode `find()`. Contohnya: `str1.find('world')`.",
                "answer_code": "str1.find('world')"
            },
            {
                "question": "Bagaimana cara mengganti substring dalam string di Python?",
                "question_code": "str1.replace('Hello', 'Hi')",
                "answer": "Anda bisa mengganti substring dalam string dengan menggunakan metode `replace()`. Contohnya: `str1.replace('Hello', 'Hi')`.",
                "answer_code": "str1.replace('Hello', 'Hi')"
            },
            {
                "question": "Bagaimana cara membagi string menjadi list di Python?",
                "question_code": "str1.split()",
                "answer": "Anda bisa membagi string menjadi list dengan menggunakan metode `split()`. Contohnya: `str1.split()`.",
                "answer_code": "str1.split()"
            },
            {
                "question": "Bagaimana cara menggabungkan list menjadi string di Python?",
                "question_code": "' '.join(['Hello', 'world'])",
                "answer": "Anda bisa menggabungkan list menjadi string dengan menggunakan metode `join()`. Contohnya: `' '.join(['Hello', 'world'])`.",
                "answer_code": "' '.join(['Hello', 'world'])"
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf besar di Python?",
                "question_code": "str1.upper()",
                "answer": "Anda bisa mengubah string menjadi huruf besar dengan menggunakan metode `upper()`. Contohnya: `str1.upper()`.",
                "answer_code": "str1.upper()"
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf kecil di Python?",
                "question_code": "str1.lower()",
                "answer": "Anda bisa mengubah string menjadi huruf kecil dengan menggunakan metode `lower()`. Contohnya: `str1.lower()`.",
                "answer_code": "str1.lower()"
            }
        ]
    },
    {
        "sumber": "belajarpemrograman.net",
        "penulis": "Dedi Setiawan",
        "tanggal": "2024-05-18",
        "judul": "Penggunaan Fungsi dan Return di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "fungsi", "return"],
        "konten": "Artikel ini menjelaskan cara mendefinisikan fungsi di Python, cara memanggil fungsi, serta cara menggunakan pernyataan return untuk mengembalikan nilai dari fungsi.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendefinisikan fungsi di Python?",
                "answer": "Anda bisa mendefinisikan fungsi dengan menggunakan kata kunci `def` diikuti dengan nama fungsi dan tanda kurung. Contohnya: `def my_function():`."
            },
            {
                "question": "Bagaimana cara memanggil fungsi di Python?",
                "answer": "Anda bisa memanggil fungsi dengan menulis nama fungsi diikuti dengan tanda kurung. Contohnya: `my_function()`."
            },
            {
                "question": "Bagaimana cara mendefinisikan fungsi dengan parameter di Python?",
                "answer": "Anda bisa mendefinisikan fungsi dengan parameter dengan menambahkan parameter di dalam tanda kurung setelah nama fungsi. Contohnya: `def my_function(param1, param2):`."
            },
            {
                "question": "Bagaimana cara mengembalikan nilai dari fungsi di Python?",
                "question_code": "def my_function():\n    return 42",
                "answer": "Anda bisa mengembalikan nilai dari fungsi dengan menggunakan kata kunci `return`. Contohnya: `return 42`.",
                "answer_code": "def my_function():\n    return 42"
            },
            {
                "question": "Bagaimana cara mendefinisikan fungsi dengan parameter default di Python?",
                "question_code": "def my_function(x, y=10):\n    return x + y",
                "answer": "Anda bisa mendefinisikan fungsi dengan parameter default dengan memberikan nilai default pada parameter. Contohnya: `def my_function(x, y=10):`.",
                "answer_code": "def my_function(x, y=10):\n    return x + y"
            },
            {
                "question": "Bagaimana cara mendefinisikan fungsi dengan jumlah argumen tak terbatas di Python?",
                "question_code": "def my_function(*args):\n    for arg in args:\n        print(arg)",
                "answer": "Anda bisa mendefinisikan fungsi dengan jumlah argumen tak terbatas dengan menggunakan tanda bintang `*` sebelum nama parameter. Contohnya: `def my_function(*args):`.",
                "answer_code": "def my_function(*args):\n    for arg in args:\n        print(arg)"
            },
            {
                "question": "Bagaimana cara mendefinisikan fungsi dengan jumlah pasangan kunci-nilai tak terbatas di Python?",
                "question_code": "def my_function(**kwargs):\n    for key, value in kwargs.items():\n        print(key, value)",
                "answer": "Anda bisa mendefinisikan fungsi dengan jumlah pasangan kunci-nilai tak terbatas dengan menggunakan dua tanda bintang `**` sebelum nama parameter. Contohnya: `def my_function(**kwargs):`.",
                "answer_code": "def my_function(**kwargs):\n    for key, value in kwargs.items():\n        print(key, value)"
            },
            {
                "question": "Bagaimana cara mendefinisikan fungsi dalam fungsi lain di Python?",
                "question_code": "def outer_function():\n    def inner_function():\n        print('Hello from inner function')\n    inner_function()",
                "answer": "Anda bisa mendefinisikan fungsi dalam fungsi lain dengan menuliskan definisi fungsi di dalam fungsi lain. Contohnya: `def outer_function(): def inner_function():`.",
                "answer_code": "def outer_function():\n    def inner_function():\n        print('Hello from inner function')\n    inner_function()"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda sebagai argumen fungsi lain di Python?",
                "question_code": "def apply_function(x, func):\n    return func(x)\nresult = apply_function(5, lambda x: x * 2)",
                "answer": "Anda bisa menggunakan fungsi lambda sebagai argumen fungsi lain dengan mendefinisikan lambda di dalam panggilan fungsi. Contohnya: `apply_function(5, lambda x: x * 2)`.",
                "answer_code": "def apply_function(x, func):\n    return func(x)\nresult = apply_function(5, lambda x: x * 2)"
            }
        ]
    }
]
