[
    {
        "sumber": "codingpythonmudah.com",
        "penulis": "Lina Susanti",
        "tanggal": "2023-01-15",
        "judul": "Penggunaan Loop While di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "while loop", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan loop while di Python, termasuk cara menulis, menjalankan, dan menghentikan loop while.",
        "pertanyaan": [
            {
                "question": "Apa itu loop while di Python?",
                "answer": "Loop while digunakan untuk mengulang blok kode selama kondisi tertentu terpenuhi."
            },
            {
                "question": "Bagaimana cara menulis loop while di Python?",
                "answer": "Anda bisa menulis loop while dengan menggunakan sintaks `while condition:` diikuti dengan blok kode yang akan diulang. Contohnya: `while x < 5: print(x)`."
            },
            {
                "question": "Bagaimana cara menghentikan loop while di Python?",
                "question_code": "while x < 5:\n    if x == 3:\n        break\n    x += 1",
                "answer": "Anda bisa menghentikan loop while dengan menggunakan pernyataan `break`. Contohnya: `if x == 3: break`.",
                "answer_code": "while x < 5:\n    if x == 3:\n        break\n    x += 1"
            },
            {
                "question": "Bagaimana cara melewati iterasi saat ini dalam loop while?",
                "question_code": "while x < 5:\n    x += 1\n    if x == 3:\n        continue\n    print(x)",
                "answer": "Anda bisa melewati iterasi saat ini dalam loop while dengan menggunakan pernyataan `continue`. Contohnya: `if x == 3: continue`.",
                "answer_code": "while x < 5:\n    x += 1\n    if x == 3:\n        continue\n    print(x)"
            },
            {
                "question": "Bagaimana cara menggunakan loop while dengan kondisi yang selalu benar?",
                "question_code": "while True:\n    print('Ini loop while tak terbatas')",
                "answer": "Anda bisa menggunakan loop while dengan kondisi yang selalu benar dengan menuliskan `while True:`. Pastikan untuk memiliki cara untuk menghentikan loop tersebut.",
                "answer_code": "while True:\n    print('Ini loop while tak terbatas')"
            },
            {
                "question": "Bagaimana cara menggunakan else dalam loop while?",
                "question_code": "x = 0\nwhile x < 5:\n    print(x)\n    x += 1\nelse:\n    print('Loop selesai')",
                "answer": "Anda bisa menggunakan else dalam loop while untuk mengeksekusi blok kode jika loop berakhir tanpa intervensi `break`. Contohnya: `else: print('Loop selesai')`.",
                "answer_code": "x = 0\nwhile x < 5:\n    print(x)\n    x += 1\nelse:\n    print('Loop selesai')"
            },
            {
                "question": "Bagaimana cara menulis loop while dengan lebih dari satu kondisi?",
                "question_code": "while x < 5 and y > 0:\n    print(x, y)\n    x += 1\n    y -= 1",
                "answer": "Anda bisa menulis loop while dengan lebih dari satu kondisi dengan menggunakan operator logika seperti `and` atau `or`. Contohnya: `while x < 5 and y > 0:`.",
                "answer_code": "while x < 5 and y > 0:\n    print(x, y)\n    x += 1\n    y -= 1"
            },
            {
                "question": "Bagaimana cara menggunakan loop while untuk iterasi list?",
                "question_code": "my_list = [1, 2, 3, 4, 5]\nindex = 0\nwhile index < len(my_list):\n    print(my_list[index])\n    index += 1",
                "answer": "Anda bisa menggunakan loop while untuk iterasi list dengan menggunakan indeks. Contohnya: `while index < len(my_list):`.",
                "answer_code": "my_list = [1, 2, 3, 4, 5]\nindex = 0\nwhile index < len(my_list):\n    print(my_list[index])\n    index += 1"
            },
            {
                "question": "Bagaimana cara menulis loop while dengan kondisi yang diinput dari pengguna?",
                "question_code": "user_input = ''\nwhile user_input != 'exit':\n    user_input = input('Ketik sesuatu (ketik "exit" untuk keluar): ')\n    print('Anda mengetik:', user_input)",
                "answer": "Anda bisa menulis loop while dengan kondisi yang diinput dari pengguna dengan menggunakan fungsi `input()`. Contohnya: `while user_input != 'exit':`.",
                "answer_code": "user_input = ''\nwhile user_input != 'exit':\n    user_input = input('Ketik sesuatu (ketik \"exit\" untuk keluar): ')\n    print('Anda mengetik:', user_input)"
            }
        ]
    },
    {
        "sumber": "pythonpemula.com",
        "penulis": "Faisal Hidayat",
        "tanggal": "2024-06-10",
        "judul": "Penggunaan Dictionary di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "dictionary", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan dictionary di Python, termasuk cara membuat, mengakses, menambah, dan menghapus pasangan kunci-nilai dalam dictionary.",
        "pertanyaan": [
            {
                "question": "Apa itu dictionary di Python?",
                "answer": "Dictionary adalah struktur data yang menyimpan data dalam bentuk pasangan kunci-nilai."
            },
            {
                "question": "Bagaimana cara membuat dictionary di Python?",
                "answer": "Anda bisa membuat dictionary dengan menggunakan tanda kurung kurawal `{}` dan memisahkan pasangan kunci-nilai dengan koma. Contohnya: `my_dict = {'key': 'value'}`."
            },
            {
                "question": "Bagaimana cara mengakses nilai dalam dictionary?",
                "answer": "Anda bisa mengakses nilai dalam dictionary dengan menggunakan kunci. Contohnya: `value = my_dict['key']`."
            },
            {
                "question": "Bagaimana cara menambah pasangan kunci-nilai ke dictionary?",
                "question_code": "my_dict['new_key'] = 'new_value'",
                "answer": "Anda bisa menambah pasangan kunci-nilai ke dictionary dengan menugaskan nilai baru ke kunci baru. Contohnya: `my_dict['new_key'] = 'new_value'`.",
                "answer_code": "my_dict['new_key'] = 'new_value'"
            },
            {
                "question": "Bagaimana cara menghapus pasangan kunci-nilai dari dictionary?",
                "question_code": "del my_dict['key']",
                "answer": "Anda bisa menghapus pasangan kunci-nilai dari dictionary dengan menggunakan kata kunci `del`. Contohnya: `del my_dict['key']`.",
                "answer_code": "del my_dict['key']"
            },
            {
                "question": "Bagaimana cara memeriksa apakah kunci ada dalam dictionary?",
                "question_code": "'key' in my_dict",
                "answer": "Anda bisa memeriksa apakah kunci ada dalam dictionary dengan menggunakan operator `in`. Contohnya: `'key' in my_dict`.",
                "answer_code": "'key' in my_dict"
            },
            {
                "question": "Bagaimana cara mendapatkan semua kunci dalam dictionary?",
                "question_code": "my_dict.keys()",
                "answer": "Anda bisa mendapatkan semua kunci dalam dictionary dengan menggunakan metode `keys()`. Contohnya: `my_dict.keys()`.",
                "answer_code": "my_dict.keys()"
            },
            {
                "question": "Bagaimana cara mendapatkan semua nilai dalam dictionary?",
                "question_code": "my_dict.values()",
                "answer": "Anda bisa mendapatkan semua nilai dalam dictionary dengan menggunakan metode `values()`. Contohnya: `my_dict.values()`.",
                "answer_code": "my_dict.values()"
            },
            {
                "question": "Bagaimana cara mengupdate nilai dalam dictionary?",
                "question_code": "my_dict['key'] = 'updated_value'",
                "answer": "Anda bisa mengupdate nilai dalam dictionary dengan menugaskan nilai baru ke kunci yang sudah ada. Contohnya: `my_dict['key'] = 'updated_value'`.",
                "answer_code": "my_dict['key'] = 'updated_value'"
            }
        ]
    }
]
