[
    {
        "sumber": "Python Collections Handbook",
        "penulis": "Amanda White",
        "tanggal": "2024-08-01",
        "judul": "Panduan Komprehensif Tipe Data Koleksi di Python",
        "tingkat_kesulitan": "Basic",
        "tag": ["Python", "List", "Tuple", "Dictionary", "Set"],
        "konten": "Panduan ini memberikan wawasan mendalam tentang penggunaan berbagai tipe data koleksi di Python, termasuk list, tuple, dictionary, dan set.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat list yang berisi nama-nama buah?",
                "answer": "Anda bisa membuat list dengan menuliskan nama-nama buah di dalam tanda kurung siku. Contoh: `buah_list = ['apel', 'pisang', 'jeruk']`."
            },
            {
                "question": "Apa yang dimaksud dengan tuple dan kapan harus menggunakannya?",
                "answer": "Tuple adalah koleksi yang tidak dapat diubah setelah dibuat (immutable). Gunakan tuple ketika Anda memerlukan sekumpulan data yang tetap. Contoh: `koordinat = (10, 20)`."
            },
            {
                "question": "Bagaimana cara menambahkan elemen baru ke dalam dictionary?",
                "answer": "Anda dapat menambahkan elemen baru ke dalam dictionary dengan sintaks `dictionary[kunci] = nilai`. Contoh: `kontak['telepon'] = '123456789'`."
            },
            {
                "question": "Bagaimana cara menghapus elemen dari set di Python?",
                "answer": "Gunakan metode `remove()` atau `discard()` untuk menghapus elemen dari set. Contoh: `my_set.remove('apel')`."
            },
            {
                "question": "Apa kesalahan dalam kode berikut?",
                "question_code": "angka_list = [1, 2, 3]\nangka_list.add(4)",
                "answer": "Kesalahan terjadi karena list tidak memiliki metode `add()`. Gunakan metode `append()` untuk menambahkan elemen: `angka_list.append(4)`.",
                "answer_code": "angka_list = [1, 2, 3]\nangka_list.append(4)"
            },
            {
                "question": "Mengapa kode berikut menghasilkan error?",
                "question_code": "hari_tuple = ('Senin', 'Selasa', 'Rabu')\nhari_tuple[1] = 'Kamis'",
                "answer": "Error terjadi karena tuple bersifat immutable dan tidak dapat diubah setelah dibuat. Gunakan list jika perlu mengubah elemen: `hari_list = ['Senin', 'Selasa', 'Rabu']`.",
                "answer_code": "hari_tuple = ('Senin', 'Selasa', 'Rabu') # Tuple tidak bisa diubah\nhari_list = ['Senin', 'Selasa', 'Rabu'] # Gunakan list jika perlu diubah"
            },
            {
                "question": "Bagaimana cara mengakses nilai dari dictionary dengan kunci 'alamat'?",
                "question_code": "kontak = {'nama': 'Alice', 'alamat': 'Jl. Merdeka'}\nalamat = kontak['alamat']",
                "answer": "Gunakan kunci untuk mengakses nilai dari dictionary. Contoh: `alamat = kontak['alamat']`.",
                "answer_code": "kontak = {'nama': 'Alice', 'alamat': 'Jl. Merdeka'}\nalamat = kontak['alamat']"
            },
            {
                "question": "Apa yang salah dengan kode berikut?",
                "question_code": "warna_set = {'merah', 'hijau', 'biru'}\nwarna = warna_set[0]",
                "answer": "Kesalahan terjadi karena set tidak mendukung pengindeksan. Gunakan list atau tuple jika perlu mengakses elemen berdasarkan indeks.",
                "answer_code": "warna_set = {'merah', 'hijau', 'biru'} # Set tidak mendukung pengindeksan\nwarna_list = ['merah', 'hijau', 'biru'] # Gunakan list jika perlu pengindeksan"
            },
            {
                "question": "Bagaimana cara menggabungkan dua list menjadi satu?",
                "question_code": "list1 = [1, 2, 3]\nlist2 = [4, 5, 6]\ncombined_list = list1 + list2",
                "answer": "Gunakan operator `+` untuk menggabungkan dua list. Contoh: `combined_list = list1 + list2`.",
                "answer_code": "list1 = [1, 2, 3]\nlist2 = [4, 5, 6]\ncombined_list = list1 + list2"
            }
        ]
    },
    {
        "sumber": "Python Collections Advanced",
        "penulis": "Robert King",
        "tanggal": "2024-08-01",
        "judul": "Menguasai Tipe Data Koleksi di Python",
        "tingkat_kesulitan": "Intermediate",
        "tag": ["Python", "List", "Tuple", "Dictionary", "Set"],
        "konten": "Buku ini memberikan panduan lanjutan tentang penggunaan berbagai tipe data koleksi di Python, termasuk teknik pemrograman dan contoh praktis.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat tuple yang berisi berbagai tipe data?",
                "answer": "Tuple dapat berisi elemen dengan berbagai tipe data. Contoh: `data_tuple = (1, 'hello', 3.14)`."
            },
            {
                "question": "Apa yang dimaksud dengan list comprehension dan bagaimana cara menggunakannya?",
                "answer": "List comprehension adalah cara singkat untuk membuat list baru berdasarkan kondisi tertentu. Contoh: `kuadrat = [x**2 for x in range(10)]`."
            },
            {
                "question": "Bagaimana cara mengupdate nilai dalam dictionary?",
                "answer": "Anda dapat mengupdate nilai dalam dictionary dengan menetapkan nilai baru untuk kunci yang ada. Contoh: `my_dict['umur'] = 31`."
            },
            {
                "question": "Bagaimana cara menghapus semua elemen dalam set?",
                "answer": "Gunakan metode `clear()` untuk menghapus semua elemen dalam set. Contoh: `my_set.clear()`.",
                "question_code": "my_set = {1, 2, 3}\nmy_set.clear()",
                "answer_code": "my_set = {1, 2, 3}\nmy_set.clear()"
            },
            {
                "question": "Apa kesalahan dalam kode berikut?",
                "question_code": "angka_list = [1, 2, 3]\nsub_list = angka_list[3:6]",
                "answer": "Tidak ada kesalahan dalam kode ini; slicing dapat digunakan untuk mengambil elemen dari list, tetapi hasilnya akan berupa list kosong jika indeks berada di luar jangkauan.",
                "answer_code": "angka_list = [1, 2, 3]\nsub_list = angka_list[3:6] # Hasilnya list kosong jika indeks berada di luar jangkauan"
            },
            {
                "question": "Apa yang salah dengan kode berikut?",
                "question_code": "my_dict = {'nama': 'Alice', 'umur': 30}\npekerjaan = my_dict['pekerjaan']",
                "answer": "Kesalahan terjadi karena kunci 'pekerjaan' tidak ada dalam dictionary. Gunakan metode `get()` untuk menghindari error: `pekerjaan = my_dict.get('pekerjaan', 'Tidak diketahui')`.",
                "answer_code": "my_dict = {'nama': 'Alice', 'umur': 30}\npekerjaan = my_dict.get('pekerjaan', 'Tidak diketahui')"
            },
            {
                "question": "Bagaimana cara menambahkan beberapa elemen sekaligus ke dalam set?",
                "question_code": "my_set = {1, 2}\nmy_set.update([3, 4, 5])",
                "answer": "Gunakan metode `update()` untuk menambahkan beberapa elemen ke dalam set. Contoh: `my_set.update([3, 4, 5])`.",
                "answer_code": "my_set = {1, 2}\nmy_set.update([3, 4, 5])"
            },
            {
                "question": "Bagaimana cara menghapus elemen pertama dari list?",
                "question_code": "angka_list = [10, 20, 30]\ndel angka_list[0]",
                "answer": "Gunakan statement `del` untuk menghapus elemen pertama dari list. Contoh: `del angka_list[0]`.",
                "answer_code": "angka_list = [10, 20, 30]\ndel angka_list[0]"
            },
            {
                "question": "Apa yang salah dengan kode berikut?",
                "question_code": "my_tuple = ([1, 2], [3, 4])\nmy_tuple[0][1] = 5",
                "answer": "Tidak ada kesalahan dalam kode ini; Anda dapat memodifikasi elemen mutable di dalam tuple, seperti list.",
                "answer_code": "my_tuple = ([1, 2], [3, 4])\nmy_tuple[0][1] = 5"
            }
        ]
    }
]
