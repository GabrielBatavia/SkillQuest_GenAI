[
    {
        "sumber": "PythonDasar.com",
        "penulis": "Rika Prasetya",
        "tanggal": "2024-07-25",
        "judul": "Pemrograman Python untuk Pemula",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "pemula", "tutorial"],
        "konten": "Panduan ini memberikan pengantar dasar-dasar Python termasuk variabel, tipe data, dan operasi dasar.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan variabel yang menyimpan teks?",
                "answer": "Anda bisa mendeklarasikan variabel yang menyimpan teks dengan cara seperti ini: `teks = 'Halo Dunia'`."
            },
            {
                "question": "Apa itu tipe data string dan bagaimana cara menggunakannya?",
                "answer": "Tipe data string adalah jenis data yang digunakan untuk menyimpan teks. Anda bisa menggunakannya dengan menempatkan teks di dalam tanda kutip, seperti `nama = 'John'`."
            },
            {
                "question": "Bagaimana cara menambahkan dua string di Python?",
                "question_code": "str1 = 'Hello'\nstr2 = 'World'\nprint(str1 - str2)",
                "answer": "Untuk menambahkan dua string, gunakan operator `+`. Contoh yang benar adalah: `print(str1 + ' ' + str2)`.",
                "answer_code": "str1 = 'Hello'\nstr2 = 'World'\nprint(str1 + ' ' + str2)"
            },
            {
                "question": "Apa yang menyebabkan error saat menggunakan `print()` dengan variabel yang tidak ada?",
                "question_code": "print(variabel)",
                "answer": "Error tersebut disebabkan karena variabel `variabel` belum dideklarasikan. Pastikan variabel tersebut telah didefinisikan sebelum dipanggil.",
                "answer_code": "variabel = 10\nprint(variabel)"
            },
            {
                "question": "Bagaimana cara melakukan operasi matematika dasar seperti penjumlahan dan pengurangan?",
                "question_code": "a = 5\nb = 3\nprint(a * b)",
                "answer": "Gunakan operator `+` untuk penjumlahan dan `-` untuk pengurangan. Contoh yang benar: `print(a + b)`.",
                "answer_code": "a = 5\nb = 3\nprint(a + b)"
            },
            {
                "question": "Bagaimana cara memeriksa apakah suatu angka lebih kecil dari angka lainnya?",
                "question_code": "x = 5\ny = 10\nif x > y:\n    print('x lebih kecil dari y')",
                "answer": "Gunakan operator `<` untuk memeriksa apakah suatu angka lebih kecil dari angka lainnya. Contoh yang benar adalah: `if x < y: print('x lebih kecil dari y')`.",
                "answer_code": "x = 5\ny = 10\nif x < y:\n    print('x lebih kecil dari y')"
            },
            {
                "question": "Bagaimana cara menggunakan loop untuk mencetak angka dari 1 hingga 5?",
                "question_code": "for i in range(1, 6):\n    print(i - 1)",
                "answer": "Untuk mencetak angka dari 1 hingga 5, Anda harus menggunakan `print(i)` tanpa pengurangan. Contoh yang benar adalah: `for i in range(1, 6): print(i)`.",
                "answer_code": "for i in range(1, 6):\n    print(i)"
            },
            {
                "question": "Bagaimana cara menghentikan loop ketika mencapai angka tertentu?",
                "question_code": "for i in range(5):\n    if i == 3:\n        continue\n    print(i)",
                "answer": "Gunakan perintah `break` untuk menghentikan loop. Contoh yang benar adalah: `for i in range(5): if i == 3: break; print(i)`.",
                "answer_code": "for i in range(5):\n    if i == 3:\n        break\n    print(i)"
            },
            {
                "question": "Bagaimana cara membuat fungsi sederhana untuk menjumlahkan dua angka?",
                "question_code": "def tambah(a, b):\n    return a * b",
                "answer": "Untuk menjumlahkan dua angka, gunakan operator `+` di dalam fungsi. Contoh yang benar adalah: `return a + b`.",
                "answer_code": "def tambah(a, b):\n    return a + b"
            }
        ]
    },
    {
        "sumber": "CodePython.org",
        "penulis": "Joko Susilo",
        "tanggal": "2024-07-26",
        "judul": "Kontrol Alur Program Python",
        "tingkat_kesulitan": "menengah",
        "tag": ["kontrol alur", "if", "loop"],
        "konten": "Artikel ini membahas bagaimana menggunakan kontrol alur seperti pernyataan if-else dan loop dalam Python.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan pernyataan `if` untuk memeriksa kondisi?",
                "answer": "Pernyataan `if` digunakan untuk mengeksekusi kode jika kondisi tertentu benar. Contoh: `if x == 5: print('x adalah 5')`."
            },
            {
                "question": "Apa yang dilakukan pernyataan `else` jika kondisi pada `if` tidak benar?",
                "answer": "Pernyataan `else` akan mengeksekusi kode jika kondisi pada `if` tidak terpenuhi. Contoh: `else: print('Kondisi tidak terpenuhi')`."
            },
            {
                "question": "Bagaimana cara menambahkan kondisi tambahan menggunakan `elif`?",
                "answer": "Pernyataan `elif` memungkinkan Anda untuk memeriksa kondisi lain jika kondisi `if` awal tidak benar. Contoh: `elif x < 5: print('x kurang dari 5')`."
            },
            {
                "question": "Bagaimana cara menggunakan loop while untuk mencetak angka dari 3 hingga 0?",
                "question_code": "i = 3\nwhile i > 0:\n    print(i + 1)\n    i -= 1",
                "answer": "Untuk mencetak angka dari 3 hingga 0, pastikan Anda tidak menambah angka dalam `print()`. Contoh yang benar adalah: `print(i)`.",
                "answer_code": "i = 3\nwhile i >= 0:\n    print(i)\n    i -= 1"
            },
            {
                "question": "Apa penyebab error saat menggunakan `continue` dalam loop?",
                "question_code": "for i in range(3):\n    if i == 2:\n        break\n    print(i)",
                "answer": "Error tersebut tidak ada jika `break` digunakan. Namun, `continue` digunakan untuk melanjutkan ke iterasi berikutnya tanpa menjalankan sisa kode dalam loop. Contoh yang benar: `if i == 2: continue`.",
                "answer_code": "for i in range(3):\n    if i == 2:\n        continue\n    print(i)"
            },
            {
                "question": "Bagaimana cara membuat fungsi yang memeriksa apakah sebuah angka genap?",
                "question_code": "def cek_genap(x):\n    if x % 2 == 1:\n        return True\n    else:\n        return False",
                "answer": "Fungsi harus mengembalikan `True` jika angka genap, dan `False` jika tidak. Contoh yang benar: `if x % 2 == 0: return True`.",
                "answer_code": "def cek_genap(x):\n    if x % 2 == 0:\n        return True\n    else:\n        return False"
            },
            {
                "question": "Bagaimana cara menggunakan nested loop untuk membuat pola segitiga?",
                "question_code": "for i in range(5):\n    for j in range(i):\n        print('*', end='')\n    print()",
                "answer": "Contoh yang benar akan menghasilkan pola segitiga dengan karakter `*`. Kode ini sudah benar dan mencetak pola segitiga.",
                "answer_code": "for i in range(5):\n    for j in range(i + 1):\n        print('*', end='')\n    print()"
            }
        ]
    }
]
