[
    {
        "sumber": "pythontips.com",
        "penulis": "Ari Wijaya",
        "tanggal": "2024-12-20",
        "judul": "Penggunaan Fungsi Sorted dan Lambda di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "sorted", "lambda", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi `sorted` bersama dengan fungsi lambda di Python untuk mengurutkan list dan iterable lainnya.",
        "pertanyaan": [
            {
                "question": "Apa itu fungsi `sorted` di Python?",
                "answer": "Fungsi `sorted` digunakan untuk mengembalikan list baru yang berisi elemen-elemen dari iterable yang diurutkan."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sorted` untuk mengurutkan list di Python?",
                "question_code": "numbers = [3, 1, 4, 1, 5, 9]\nsorted_numbers = sorted(numbers)",
                "answer": "Anda bisa menggunakan fungsi `sorted` dengan memberikan list sebagai argumen. Contohnya: `sorted(numbers)`.",
                "answer_code": "numbers = [3, 1, 4, 1, 5, 9]\nsorted_numbers = sorted(numbers)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sorted` dengan parameter `reverse=True` di Python?",
                "question_code": "numbers = [3, 1, 4, 1, 5, 9]\nsorted_numbers = sorted(numbers, reverse=True)",
                "answer": "Anda bisa menggunakan fungsi `sorted` dengan parameter `reverse=True` untuk mengurutkan elemen-elemen dalam urutan menurun. Contohnya: `sorted(numbers, reverse=True)`.",
                "answer_code": "numbers = [3, 1, 4, 1, 5, 9]\nsorted_numbers = sorted(numbers, reverse=True)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sorted` dengan kunci pengurutan menggunakan lambda di Python?",
                "question_code": "words = ['banana', 'pie', 'Washington', 'book']\nsorted_words = sorted(words, key=lambda x: len(x))",
                "answer": "Anda bisa menggunakan fungsi `sorted` dengan parameter `key` yang diisi dengan fungsi lambda untuk menentukan kunci pengurutan. Contohnya: `sorted(words, key=lambda x: len(x))`.",
                "answer_code": "words = ['banana', 'pie', 'Washington', 'book']\nsorted_words = sorted(words, key=lambda x: len(x))"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sorted` untuk mengurutkan dictionary berdasarkan nilai di Python?",
                "question_code": "grades = {'Alice': 88, 'Bob': 95, 'Charlie': 70}\nsorted_grades = sorted(grades.items(), key=lambda x: x[1])",
                "answer": "Anda bisa menggunakan fungsi `sorted` dengan `items()` dan lambda untuk mengurutkan dictionary berdasarkan nilai. Contohnya: `sorted(grades.items(), key=lambda x: x[1])`.",
                "answer_code": "grades = {'Alice': 88, 'Bob': 95, 'Charlie': 70}\nsorted_grades = sorted(grades.items(), key=lambda x: x[1])"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sorted` untuk mengurutkan list of dictionaries di Python?",
                "question_code": "students = [{'name': 'John', 'grade': 90}, {'name': 'Jane', 'grade': 85}, {'name': 'Dave', 'grade': 92}]\nsorted_students = sorted(students, key=lambda x: x['grade'])",
                "answer": "Anda bisa menggunakan fungsi `sorted` dengan lambda untuk mengurutkan list of dictionaries berdasarkan nilai tertentu. Contohnya: `sorted(students, key=lambda x: x['grade'])`.",
                "answer_code": "students = [{'name': 'John', 'grade': 90}, {'name': 'Jane', 'grade': 85}, {'name': 'Dave', 'grade': 92}]\nsorted_students = sorted(students, key=lambda x: x['grade'])"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sorted` dengan multiple keys di Python?",
                "question_code": "students = [{'name': 'John', 'grade': 90}, {'name': 'Jane', 'grade': 85}, {'name': 'Dave', 'grade': 92}]\nsorted_students = sorted(students, key=lambda x: (x['grade'], x['name']))",
                "answer": "Anda bisa menggunakan fungsi `sorted` dengan multiple keys dengan menggunakan tuple di dalam lambda. Contohnya: `sorted(students, key=lambda x: (x['grade'], x['name']))`.",
                "answer_code": "students = [{'name': 'John', 'grade': 90}, {'name': 'Jane', 'grade': 85}, {'name': 'Dave', 'grade': 92}]\nsorted_students = sorted(students, key=lambda x: (x['grade'], x['name']))"
            }
        ]
    },
    {
        "sumber": "pythonadvancedguide.com",
        "penulis": "Sari Indah",
        "tanggal": "2024-12-22",
        "judul": "Penggunaan Fungsi Enumerate di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "enumerate", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi `enumerate` di Python untuk iterasi yang lebih efisien dan efektif dengan menambahkan penghitung ke dalam iterable.",
        "pertanyaan": [
            {
                "question": "Apa itu fungsi `enumerate` di Python?",
                "answer": "Fungsi `enumerate` digunakan untuk menambahkan penghitung ke iterable dan mengembalikan objek enumerate."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `enumerate` di Python?",
                "question_code": "numbers = [10, 20, 30]\nfor index, value in enumerate(numbers):\n    print(index, value)",
                "answer": "Anda bisa menggunakan fungsi `enumerate` dengan memanggilnya pada iterable dan menggunakannya dalam loop. Contohnya: `enumerate(numbers)`.",
                "answer_code": "numbers = [10, 20, 30]\nfor index, value in enumerate(numbers):\n    print(index, value)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `enumerate` dengan parameter start di Python?",
                "question_code": "numbers = [10, 20, 30]\nfor index, value in enumerate(numbers, start=1):\n    print(index, value)",
                "answer": "Anda bisa menggunakan fungsi `enumerate` dengan parameter `start` untuk menentukan nilai awal penghitung. Contohnya: `enumerate(numbers, start=1)`.",
                "answer_code": "numbers = [10, 20, 30]\nfor index, value in enumerate(numbers, start=1):\n    print(index, value)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `enumerate` dengan list comprehension di Python?",
                "question_code": "numbers = [10, 20, 30]\nenum_list = [(index, value) for index, value in enumerate(numbers)]",
                "answer": "Anda bisa menggunakan fungsi `enumerate` dengan list comprehension untuk membuat list of tuples yang berisi indeks dan nilai. Contohnya: `[(index, value) for index, value in enumerate(numbers)]`.",
                "answer_code": "numbers = [10, 20, 30]\nenum_list = [(index, value) for index, value in enumerate(numbers)]"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `enumerate` dengan dictionary di Python?",
                "question_code": "items = {'apple': 3, 'banana': 2, 'cherry': 5}\nenum_dict = {index: key for index, key in enumerate(items.keys())}",
                "answer": "Anda bisa menggunakan fungsi `enumerate` dengan dictionary untuk membuat dictionary baru yang berisi indeks sebagai key dan nilai dictionary asli sebagai value. Contohnya: `{index: key for index, key in enumerate(items.keys())}`.",
                "answer_code": "items = {'apple': 3, 'banana': 2, 'cherry': 5}\nenum_dict = {index: key for index, key in enumerate(items.keys())}"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `enumerate` dengan string di Python?",
                "question_code": "text = 'hello'\nenum_text = [(index, char) for index, char in enumerate(text)]",
                "answer": "Anda bisa menggunakan fungsi `enumerate` dengan string untuk membuat list of tuples yang berisi indeks dan karakter. Contohnya: `[(index, char) for index, char in enumerate(text)]`.",
                "answer_code": "text = 'hello'\nenum_text = [(index, char) for index, char in enumerate(text)]"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `enumerate` untuk mengakses indeks dan nilai secara bersamaan di Python?",
                "question_code": "fruits = ['apple', 'banana', 'cherry']\nfor index, fruit in enumerate(fruits):\n    print(f'{index}: {fruit}')",
                "answer": "Anda bisa menggunakan fungsi `enumerate` untuk mengakses indeks dan nilai secara bersamaan dalam loop. Contohnya: `for index, fruit in enumerate(fruits): print(f'{index}: {fruit}')`.",
                "answer_code": "fruits = ['apple', 'banana', 'cherry']\nfor index, fruit in enumerate(fruits):\n    print(f'{index}: {fruit}')"
            }
        ]
    }
]
