[
    {
        "sumber": "LearnPythonBasics.org",
        "penulis": "Rina Widyaningrum",
        "tanggal": "2024-08-30",
        "judul": "Pengantar Pemrograman Python",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "pemula", "pengantar"],
        "konten": "Artikel ini memberikan pengantar tentang Python, termasuk cara mendeklarasikan variabel, tipe data dasar, dan operasi dasar.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat variabel baru di Python?",
                "answer": "Untuk membuat variabel baru, cukup tulis nama variabel diikuti dengan tanda sama dengan (=) dan nilai yang ingin diberikan. Misalnya: a = 10."
            },
            {
                "question": "Apa cara untuk menampilkan isi variabel di layar?",
                "answer": "Anda dapat menampilkan nilai variabel dengan menggunakan fungsi print(). Contohnya: print(a) akan menampilkan nilai dari variabel a."
            },
            {
                "question": "Apa yang dimaksud dengan tipe data dalam Python?",
                "answer": "Tipe data adalah kategori dari nilai yang bisa disimpan dalam variabel. Contoh tipe data adalah integer, float, dan string."
            },
            {
                "question": "Kenapa kode berikut tidak bekerja?",
                "question_code": "text = 'Hello World'\nprint(Text)",
                "answer": "Kesalahan terjadi karena perbedaan huruf kapital. Variabel yang benar adalah text, bukan Text.",
                "answer_code": "text = 'Hello World'\nprint(text)"
            },
            {
                "question": "Apa penyebab error NameError pada kode ini?",
                "question_code": "print(a)",
                "answer": "NameError muncul karena variabel a belum dideklarasikan. Pastikan variabel a sudah diinisialisasi sebelum digunakan.",
                "answer_code": "a = 10\nprint(a)"
            },
            {
                "question": "Bagaimana cara menggabungkan dua kalimat menjadi satu?",
                "question_code": "sentence1 = 'Welcome'\nsentence2 = 'Home'\nprint(sentence1 + sentence2)",
                "answer": "Untuk menggabungkan dua string, gunakan operator +. Misalnya: sentence1 + ' ' + sentence2 akan memberikan 'Welcome Home'.",
                "answer_code": "sentence1 = 'Welcome'\nsentence2 = 'Home'\nprint(sentence1 + ' ' + sentence2)"
            },
            {
                "question": "Bagaimana cara mengubah semua huruf dalam string menjadi kapital?",
                "question_code": "message = 'goodbye'\nprint(message.capitalize())",
                "answer": "Gunakan metode upper() untuk mengubah semua huruf menjadi kapital. Contohnya: message.upper() akan menghasilkan 'GOODBYE'.",
                "answer_code": "message = 'goodbye'\nprint(message.upper())"
            },
            {
                "question": "Bagaimana cara menghapus spasi di awal dan akhir string?",
                "question_code": "text = '  example  '\nprint(text.rstrip())",
                "answer": "Untuk menghapus spasi di awal dan akhir string, gunakan metode strip(). Contohnya: text.strip() akan menghapus spasi tersebut.",
                "answer_code": "text = '  example  '\nprint(text.strip())"
            },
            {
                "question": "Bagaimana cara mengecek apakah sebuah kata ada dalam kalimat?",
                "question_code": "line = 'Python is fun'\nprint(line.has('fun'))",
                "answer": "Gunakan operator in untuk memeriksa apakah sebuah substring ada dalam string. Contoh: 'fun' in line akan menghasilkan True.",
                "answer_code": "line = 'Python is fun'\nprint('fun' in line)"
            }
        ]
    },
    {
        "sumber": "AdvancedPythonGuide.com",
        "penulis": "Hadi Prasetyo",
        "tanggal": "2024-09-05",
        "judul": "Kontrol Alur Program dengan Python",
        "tingkat_kesulitan": "menengah",
        "tag": ["python", "kontrol alur", "if-else", "loop"],
        "konten": "Artikel ini membahas tentang kontrol alur program di Python, termasuk penggunaan if-else, loop for, dan while untuk kontrol alur yang lebih kompleks.",
        "pertanyaan": [
            {
                "question": "Bagaimana menggunakan pernyataan if untuk keputusan di Python?",
                "answer": "Pernyataan if digunakan untuk menjalankan kode tertentu jika kondisi yang ditentukan benar. Contoh: if x < 10: print('x kurang dari 10')."
            },
            {
                "question": "Apa fungsi dari pernyataan else dalam kontrol alur?",
                "answer": "Pernyataan else menjalankan kode ketika kondisi if sebelumnya tidak terpenuhi. Contoh: else: print('x tidak kurang dari 10')."
            },
            {
                "question": "Bagaimana cara menambahkan kondisi tambahan dengan elif?",
                "answer": "Pernyataan elif digunakan untuk memeriksa kondisi tambahan jika kondisi if sebelumnya tidak benar. Contoh: elif x == 10: print('x sama dengan 10')."
            },
            {
                "question": "Kenapa kode ini tidak menghasilkan output yang diharapkan?",
                "question_code": "num = 7\nif num >= 5\nprint('Num is five or more')",
                "answer": "IndentationError muncul karena print() tidak diindentasikan dengan benar. Pastikan ada indentasi yang tepat setelah if.",
                "answer_code": "num = 7\nif num >= 5:\n    print('Num is five or more')"
            },
            {
                "question": "Apa kesalahan dalam loop for berikut?",
                "question_code": "for i in range(4)\n    print(i)",
                "answer": "SyntaxError terjadi karena tanda titik dua (:) setelah range(4) hilang. Tambahkan titik dua setelah range(4).",
                "answer_code": "for i in range(4):\n    print(i)"
            },
            {
                "question": "Bagaimana cara menggunakan loop while untuk menghitung mundur?",
                "question_code": "count = 3\nwhile count > 0:\nprint(count)\ncount -= 1",
                "answer": "Loop while digunakan untuk mengulang kode selama kondisi tertentu benar. Misalnya: while count > 0: print(count); count -= 1.",
                "answer_code": "count = 3\nwhile count > 0:\n    print(count)\n    count -= 1"
            },
            {
                "question": "Bagaimana cara menghentikan loop menggunakan pernyataan break?",
                "question_code": "for i in range(4):\n    if i == 2:\n        stop\n    print(i)",
                "answer": "Untuk menghentikan loop lebih awal, gunakan break. Ganti stop dengan break.",
                "answer_code": "for i in range(4):\n    if i == 2:\n        break\n    print(i)"
            },
            {
                "question": "Bagaimana cara melanjutkan ke iterasi berikutnya dalam loop?",
                "question_code": "for i in range(4):\n    if i == 1:\n        pass\n    print(i)",
                "answer": "Gunakan continue untuk melompati iterasi saat ini dan melanjutkan ke iterasi berikutnya. Ganti pass dengan continue.",
                "answer_code": "for i in range(4):\n    if i == 1:\n        continue\n    print(i)"
            },
            {
                "question": "Bagaimana cara menulis loop bersarang (nested loop) di Python?",
                "question_code": "for i in range(2):\nfor j in range(2):\nprint(i, j)",
                "answer": "Loop bersarang adalah loop di dalam loop. Pastikan setiap loop terindetasi dengan benar. Contoh: for i in range(2): for j in range(2): print(i, j).",
                "answer_code": "for i in range(2):\n    for j in range(2):\n        print(i, j)"
            }
        ]
    }
]
