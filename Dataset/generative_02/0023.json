[
    {
        "sumber": "pythonid.com",
        "penulis": "Budi Santoso",
        "tanggal": "2023-02-25",
        "judul": "Menggunakan Modul `datetime` di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "datetime", "modul"],
        "konten": "Artikel ini mengulas cara memakai modul `datetime` di Python untuk menangani tanggal dan waktu, termasuk cara membuat, memformat, dan memodifikasi objek datetime.",
        "pertanyaan": [
            {
                "question": "Apa yang dimaksud dengan modul `datetime` di Python?",
                "answer": "Modul `datetime` adalah modul bawaan Python yang menyediakan kelas-kelas untuk mengelola tanggal dan waktu."
            },
            {
                "question": "Bagaimana cara mengimpor modul `datetime`?",
                "answer": "Anda bisa mengimpor modul `datetime` dengan menggunakan sintaks `import datetime`."
            },
            {
                "question": "Bagaimana cara membuat objek datetime di Python?",
                "answer": "Anda dapat membuat objek datetime menggunakan konstruktor `datetime.datetime()`. Contoh: `datetime.datetime(2023, 2, 25, 10, 30, 0)`."
            },
            {
                "question": "Bagaimana cara mendapatkan waktu dan tanggal saat ini?",
                "question_code": "import datetime\nsekarang = datetime.datetime.now()",
                "answer": "Anda dapat mendapatkan waktu dan tanggal saat ini dengan metode `datetime.datetime.now()`. Contoh: `datetime.datetime.now()`.",
                "answer_code": "sekarang = datetime.datetime.now()"
            },
            {
                "question": "Bagaimana cara memformat objek datetime menjadi string?",
                "question_code": "import datetime\nsekarang = datetime.datetime.now()\nformat_tanggal = sekarang.strftime('%d-%m-%Y %H:%M:%S')",
                "answer": "Anda dapat memformat objek datetime menjadi string dengan menggunakan metode `strftime()`. Contoh: `sekarang.strftime('%d-%m-%Y %H:%M:%S')`.",
                "answer_code": "format_tanggal = sekarang.strftime('%d-%m-%Y %H:%M:%S')"
            },
            {
                "question": "Bagaimana cara mengonversi string menjadi objek datetime?",
                "question_code": "import datetime\ntanggal_str = '25-02-2023 10:30:00'\nobjek_tanggal = datetime.datetime.strptime(tanggal_str, '%d-%m-%Y %H:%M:%S')",
                "answer": "Anda dapat mengonversi string menjadi objek datetime dengan metode `strptime()`. Contoh: `datetime.datetime.strptime(tanggal_str, '%d-%m-%Y %H:%M:%S')`.",
                "answer_code": "objek_tanggal = datetime.datetime.strptime(tanggal_str, '%d-%m-%Y %H:%M:%S')"
            },
            {
                "question": "Bagaimana cara menambah atau mengurangi waktu dari objek datetime?",
                "question_code": "import datetime\nsekarang = datetime.datetime.now()\nlusa = sekarang + datetime.timedelta(days=2)",
                "answer": "Anda dapat menambah atau mengurangi waktu dari objek datetime dengan kelas `timedelta`. Contoh: `sekarang + datetime.timedelta(days=2)`.",
                "answer_code": "lusa = sekarang + datetime.timedelta(days=2)"
            },
            {
                "question": "Bagaimana cara menghitung selisih antara dua objek datetime?",
                "question_code": "import datetime\nawal = datetime.datetime(2023, 2, 25, 8, 0, 0)\nakhir = datetime.datetime(2023, 2, 25, 18, 0, 0)\nselisih = akhir - awal",
                "answer": "Anda dapat menghitung selisih antara dua objek datetime dengan mengurangkan satu objek datetime dari yang lain. Contoh: `akhir - awal`.",
                "answer_code": "selisih = akhir - awal"
            },
            {
                "question": "Bagaimana cara membuat objek date dan time secara terpisah?",
                "question_code": "import datetime\ntanggal = datetime.date(2023, 2, 25)\nwaktu = datetime.time(10, 30, 0)",
                "answer": "Anda dapat membuat objek date dan time secara terpisah dengan menggunakan kelas `date` dan `time`. Contoh: `datetime.date(2023, 2, 25)` dan `datetime.time(10, 30, 0)`.",
                "answer_code": "tanggal = datetime.date(2023, 2, 25)\nwaktu = datetime.time(10, 30, 0)"
            }
        ]
    },
    {
        "sumber": "pythonku.com",
        "penulis": "Dewi Lestari",
        "tanggal": "2024-04-07",
        "judul": "Pemrograman Jaringan dengan Socket di Python",
        "tingkat_kesulitan": "Lanjutan",
        "tag": ["python", "socket", "jaringan"],
        "konten": "Artikel ini mengulas dasar-dasar pemrograman jaringan menggunakan modul `socket` di Python, termasuk cara membuat server dan klien sederhana.",
        "pertanyaan": [
            {
                "question": "Apa itu modul `socket` di Python?",
                "answer": "Modul `socket` adalah modul bawaan di Python yang menyediakan antarmuka untuk komunikasi jaringan menggunakan soket."
            },
            {
                "question": "Bagaimana cara mengimpor modul `socket`?",
                "answer": "Anda dapat mengimpor modul `socket` menggunakan sintaks `import socket`."
            },
            {
                "question": "Bagaimana cara membuat objek socket?",
                "answer": "Anda dapat membuat objek socket dengan menggunakan konstruktor `socket.socket()`. Contoh: `sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)`."
            },
            {
                "question": "Bagaimana cara menghubungkan socket ke server?",
                "question_code": "import socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.connect(('localhost', 12345))",
                "answer": "Anda dapat menghubungkan socket ke server dengan metode `connect()`. Contoh: `sock.connect(('localhost', 12345))`.",
                "answer_code": "sock.connect(('localhost', 12345))"
            },
            {
                "question": "Bagaimana cara membuat server socket?",
                "question_code": "import socket\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_socket.bind(('localhost', 12345))\nserver_socket.listen(5)",
                "answer": "Anda dapat membuat server socket dengan mengikat socket ke alamat dan port, lalu mendengarkan koneksi. Contoh: `server_socket.bind(('localhost', 12345))` dan `server_socket.listen(5)`.",
                "answer_code": "server_socket.bind(('localhost', 12345))\nserver_socket.listen(5)"
            },
            {
                "question": "Bagaimana cara menerima koneksi di server socket?",
                "question_code": "conn, addr = server_socket.accept()\nprint('Terhubung oleh', addr)",
                "answer": "Anda dapat menerima koneksi di server socket dengan metode `accept()`. Contoh: `conn, addr = server_socket.accept()`.",
                "answer_code": "conn, addr = server_socket.accept()"
            },
            {
                "question": "Bagaimana cara mengirim data melalui socket?",
                "question_code": "conn.sendall(b'Hello, World!')",
                "answer": "Anda dapat mengirim data melalui socket dengan metode `sendall()`. Contoh: `conn.sendall(b'Hello, World!')`."
            },
            {
                "question": "Bagaimana cara menerima data dari socket?",
                "question_code": "data = conn.recv(1024)\nprint('Data diterima:', data)",
                "answer": "Anda dapat menerima data dari socket dengan metode `recv()`. Contoh: `data = conn.recv(1024)`.",
                "answer_code": "data = conn.recv(1024)"
            },
            {
                "question": "Bagaimana cara menutup koneksi socket?",
                "question_code": "conn.close()",
                "answer": "Anda dapat menutup koneksi socket dengan metode `close()`. Contoh: `conn.close()`.",
                "answer_code": "conn.close()"
            }
        ]
    }
]
