[
    {
        "sumber": "pythoncentral.io",
        "penulis": "Sarah Lee",
        "tanggal": "2024-08-01",
        "judul": "Operator Perbandingan di Python: Panduan Lengkap",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "operator", "perbandingan", "pemula"],
        "konten": "Panduan ini menjelaskan cara kerja operator perbandingan di Python dan memberikan contoh bagaimana menggunakan operator-operator ini untuk membandingkan nilai.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara memeriksa apakah dua angka, `30` dan `25`, sama menggunakan Python?",
                "question_code": "result = 30 != 25\nprint(result)",
                "answer": "Untuk memeriksa apakah `30` dan `25` sama, gunakan operator `==`. Ekspresi `30 == 25` akan menghasilkan `False` karena kedua angka berbeda.",
                "answer_code": "result = 30 == 25\nprint(result)\n# Output: False"
            },
            {
                "question": "Bagaimana cara memeriksa apakah angka `50` lebih kecil dari atau sama dengan `50`?",
                "question_code": "result = 50 > 50\nprint(result)",
                "answer": "Untuk memeriksa apakah `50` lebih kecil dari atau sama dengan `50`, gunakan operator `<=`. Ekspresi `50 <= 50` akan menghasilkan `True` karena `50` sama dengan `50`.",
                "answer_code": "result = 50 <= 50\nprint(result)\n# Output: True"
            },
            {
                "question": "Apa cara untuk memeriksa jika dua string, `'hello'` dan `'Hello'`, tidak sama dalam Python?",
                "question_code": "result = 'hello' == 'Hello'\nprint(result)",
                "answer": "Untuk memeriksa jika `'hello'` dan `'Hello'` tidak sama, gunakan operator `!=`. Ekspresi `'hello' != 'Hello'` akan menghasilkan `True` karena perbandingan string bersifat case-sensitive.",
                "answer_code": "result = 'hello' != 'Hello'\nprint(result)\n# Output: True"
            },
            {
                "question": "Bagaimana memeriksa apakah `4` lebih besar dari `6` menggunakan operator perbandingan?",
                "question_code": "result = 4 > 6\nprint(result)",
                "answer": "Operator `>` memeriksa apakah nilai di sebelah kiri lebih besar dari nilai di sebelah kanan. Dalam contoh ini, `4 > 6` menghasilkan `False` karena `4` tidak lebih besar dari `6`.",
                "answer_code": "result = 4 > 6\nprint(result)\n# Output: False"
            },
            {
                "question": "Apa hasil dari perbandingan `15 >= 10` dan bagaimana operator ini bekerja?",
                "question_code": "result = 15 < 10\nprint(result)",
                "answer": "Operator `>=` memeriksa apakah nilai di sebelah kiri lebih besar atau sama dengan nilai di sebelah kanan. Dalam contoh ini, `15 >= 10` menghasilkan `True` karena `15` lebih besar dari `10`. Seharusnya menggunakan operator `>=` untuk memeriksa.",
                "answer_code": "result = 15 >= 10\nprint(result)\n# Output: True"
            },
            {
                "question": "Bagaimana cara memeriksa apakah nilai `7` lebih kecil dari `10` dan menggunakan operator ini dalam if statement?",
                "question_code": "if 7 >= 10:\n    print('7 lebih kecil dari 10')",
                "answer": "Untuk memeriksa jika `7` lebih kecil dari `10`, gunakan operator `<`. Dalam pernyataan `if`, ekspresi `7 < 10` akan menghasilkan `True`, sehingga blok kode di dalam `if` akan dijalankan.",
                "answer_code": "if 7 < 10:\n    print('7 lebih kecil dari 10')\n# Output: '7 lebih kecil dari 10'"
            },
            {
                "question": "Apa hasil dari `9 != 9.0` dan bagaimana Python menangani perbandingan antara integer dan float?",
                "question_code": "result = 9 == 9.0\nprint(result)",
                "answer": "Python membandingkan nilai tanpa memperhatikan tipe data, sehingga `9 == 9.0` menghasilkan `True` karena keduanya mewakili nilai yang sama meskipun satu adalah integer dan yang lainnya adalah float.",
                "answer_code": "result = 9 == 9.0\nprint(result)\n# Output: True"
            },
            {
                "question": "Bagaimana cara memeriksa apakah `20` tidak sama dengan `25` dalam Python?",
                "question_code": "result = 20 == 25\nprint(result)",
                "answer": "Untuk memeriksa apakah `20` tidak sama dengan `25`, gunakan operator `!=`. Ekspresi `20 != 25` akan menghasilkan `True` karena nilai-nilai tersebut berbeda.",
                "answer_code": "result = 20 != 25\nprint(result)\n# Output: True"
            },
            {
                "question": "Apa hasil dari ekspresi `5 > 2` dan bagaimana cara menggunakan operator ini dalam loop?",
                "question_code": "for i in range(5):\n    if i > 2:\n        print(i)",
                "answer": "Ekspresi `5 > 2` selalu menghasilkan `True`, tetapi dalam loop `for`, hanya nilai `i` yang lebih besar dari `2` yang akan dicetak. Operator `>` digunakan untuk memeriksa apakah nilai `i` lebih besar dari `2`.",
                "answer_code": "for i in range(5):\n    if i > 2:\n        print(i)\n# Output: 3, 4"
            },
            {
                "question": "Bagaimana cara menggunakan operator `<=` untuk memeriksa jika `3` lebih kecil atau sama dengan `3`?",
                "question_code": "result = 3 > 3\nprint(result)",
                "answer": "Operator `<=` memeriksa apakah nilai di sebelah kiri lebih kecil atau sama dengan nilai di sebelah kanan. Dalam contoh ini, `3 <= 3` menghasilkan `True` karena `3` sama dengan `3`. Seharusnya menggunakan operator `<=` untuk memeriksa.",
                "answer_code": "result = 3 <= 3\nprint(result)\n# Output: True"
            }
        ]
    },
    {
        "sumber": "tutorialspoint.com",
        "penulis": "Lucas Brown",
        "tanggal": "2024-08-01",
        "judul": "Operator Perbandingan Python: Panduan untuk Pemula",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "operator", "perbandingan", "pemula"],
        "konten": "Tutorial ini membahas berbagai operator perbandingan di Python dan bagaimana mereka dapat digunakan untuk membuat keputusan dalam program.",
        "pertanyaan": [
            {
                "question": "Bagaimana saya memeriksa apakah `12` sama dengan `12` menggunakan Python?",
                "question_code": "result = 12 != 12\nprint(result)",
                "answer": "Untuk memeriksa apakah `12` sama dengan `12`, gunakan operator `==`. Ekspresi `12 == 12` akan menghasilkan `True` karena nilai-nilai tersebut sama.",
                "answer_code": "result = 12 == 12\nprint(result)\n# Output: True"
            },
            {
                "question": "Apa hasil dari perbandingan `7 >= 5` dan bagaimana cara menggunakan operator ini?",
                "question_code": "result = 7 < 5\nprint(result)",
                "answer": "Operator `>=` memeriksa apakah nilai di sebelah kiri lebih besar atau sama dengan nilai di sebelah kanan. Dalam contoh ini, `7 >= 5` menghasilkan `True` karena `7` lebih besar dari `5`. Sebaiknya gunakan operator `>=` untuk memeriksa.",
                "answer_code": "result = 7 >= 5\nprint(result)\n# Output: True"
            },
            {
                "question": "Bagaimana cara memeriksa jika `'data'` berbeda dengan `'Data'`?",
                "question_code": "result = 'data' == 'Data'\nprint(result)",
                "answer": "Untuk memeriksa jika `'data'` berbeda dengan `'Data'`, gunakan operator `!=`. Ekspresi `'data' != 'Data'` akan menghasilkan `True` karena perbandingan string bersifat case-sensitive.",
                "answer_code": "result = 'data' != 'Data'\nprint(result)\n# Output: True"
            },
            {
                "question": "Apa yang akan dihasilkan jika kita memeriksa apakah `5` lebih besar dari `8` menggunakan operator perbandingan?",
                "question_code": "result = 5 >= 8\nprint(result)",
                "answer": "Operator `>` memeriksa apakah nilai di sebelah kiri lebih besar dari nilai di sebelah kanan. Dalam contoh ini, `5 > 8` menghasilkan `False` karena `5` tidak lebih besar dari `8`. Seharusnya menggunakan operator `>` untuk memeriksa.",
                "answer_code": "result = 5 < 8\nprint(result)\n# Output: True"
            },
            {
                "question": "Bagaimana cara menggunakan operator `!=` untuk memeriksa apakah `20` tidak sama dengan `25`?",
                "question_code": "result = 20 == 25\nprint(result)",
                "answer": "Operator `!=` memeriksa apakah dua nilai tidak sama. Dalam contoh ini, `20 != 25` akan menghasilkan `True` karena `20` tidak sama dengan `25`. Seharusnya menggunakan operator `!=` untuk memeriksa.",
                "answer_code": "result = 20 != 25\nprint(result)\n# Output: True"
            },
            {
                "question": "Apa yang dihasilkan oleh ekspresi `2 < 2` dan bagaimana cara menggunakan operator ini dalam pernyataan kondisi?",
                "question_code": "if 2 <= 2:\n    print('2 lebih kecil dari 2')",
                "answer": "Ekspresi `2 < 2` menghasilkan `False` karena `2` tidak lebih kecil dari `2`. Dalam pernyataan `if`, Anda dapat menggunakan `<=` untuk memeriksa apakah `2` lebih kecil atau sama dengan `2`.",
                "answer_code": "if 2 <= 2:\n    print('2 lebih kecil atau sama dengan 2')\n# Output: '2 lebih kecil atau sama dengan 2'"
            },
            {
                "question": "Apa hasil dari `10 == 10.0` dan bagaimana Python membandingkan tipe data yang berbeda?",
                "question_code": "result = 10 != 10.0\nprint(result)",
                "answer": "Python membandingkan nilai tanpa memperhatikan tipe data, jadi `10 == 10.0` menghasilkan `True` karena keduanya mewakili nilai yang sama. Sebaiknya gunakan `==` untuk perbandingan.",
                "answer_code": "result = 10 == 10.0\nprint(result)\n# Output: True"
            },
            {
                "question": "Bagaimana cara menggunakan operator `<=` untuk memeriksa apakah `3` lebih kecil dari atau sama dengan `3`?",
                "question_code": "result = 3 > 3\nprint(result)",
                "answer": "Operator `<=` memeriksa apakah nilai di sebelah kiri lebih kecil atau sama dengan nilai di sebelah kanan. Dalam contoh ini, `3 <= 3` menghasilkan `True` karena `3` sama dengan `3`. Seharusnya menggunakan operator `<=` untuk memeriksa.",
                "answer_code": "result = 3 <= 3\nprint(result)\n# Output: True"
            }
        ]
    }
]
