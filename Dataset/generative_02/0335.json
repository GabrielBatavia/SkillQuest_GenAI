[
    {
        "sumber": "Python Essentials",
        "penulis": "John Smith",
        "tanggal": "2024-08-10",
        "judul": "Teknik Manipulasi List Kosong di Python",
        "tingkat_kesulitan": "Beginner",
        "tag": ["Python", "Lists", "Basics"],
        "konten": "Panduan ini membahas teknik dasar dalam manipulasi list kosong di Python, termasuk cara menambahkan elemen dan menghindari kesalahan umum.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan list kosong dan menambahkan elemen menggunakan operator +=",
                "answer": "Anda bisa mendeklarasikan list kosong dengan sintaks: empty_list = []. Anda bisa menambahkan elemen menggunakan operator +=. Contoh: empty_list += [4, 5, 6]",
                "question_code": "empty_list = []\nempty_list += [4, 5, 6]",
                "answer_code": "empty_list = []\nempty_list += [4, 5, 6] # empty_list menjadi [4, 5, 6]"
            },
            {
                "question": "Apa yang terjadi jika Anda mencoba mengakses elemen dari list kosong menggunakan metode get()?",
                "answer": "List di Python tidak memiliki metode get(). Menggunakan get() pada list kosong akan menyebabkan error 'AttributeError: 'list' object has no attribute 'get'. Gunakan indeks untuk mengakses elemen dalam list.",
                "question_code": "empty_list = []\nelement = empty_list.get(0)",
                "answer_code": "empty_list = []\n# Gunakan indeks untuk mengakses elemen\nif len(empty_list) > 0:\n    element = empty_list[0]"
            },
            {
                "question": "Bagaimana cara menggunakan metode sort() pada list kosong?",
                "answer": "Metode sort() digunakan untuk mengurutkan elemen dalam list. Pada list kosong, metode ini tidak akan mengubah apapun. Contoh: empty_list.sort()",
                "question_code": "empty_list = []\nempty_list.sort()",
                "answer_code": "empty_list = []\nempty_list.sort() # empty_list tetap []"
            },
            {
                "question": "Apa penyebab error 'TypeError: 'NoneType' object is not iterable' ketika menggunakan metode append()?",
                "question_code": "empty_list = []\nnone_value = None\nempty_list.append(*none_value)",
                "answer": "Error ini terjadi karena Anda mencoba mengiterasi None. Pastikan argumen untuk append() adalah iterable yang valid.",
                "answer_code": "empty_list = []\nvalid_iterable = [1, 2, 3]\nempty_list.append(valid_iterable)"
            },
            {
                "question": "Bagaimana cara menambahkan elemen pada list kosong di indeks tertentu menggunakan metode insert()?",
                "answer": "Metode insert() memungkinkan Anda menambahkan elemen pada indeks tertentu dalam list. Contoh: empty_list.insert(0, 'item') akan menambahkan 'item' di awal list.",
                "question_code": "empty_list = []\nempty_list.insert(0, 'item')",
                "answer_code": "empty_list = []\nempty_list.insert(0, 'item') # empty_list menjadi ['item']"
            },
            {
                "question": "Apa yang menyebabkan error 'ValueError: list.remove(x): x not in list' ketika menggunakan metode remove() pada list kosong?",
                "question_code": "empty_list = []\nempty_list.remove('item')",
                "answer": "Error ini terjadi karena elemen yang akan dihapus tidak ada dalam list. Pastikan elemen ada dalam list sebelum menggunakan metode remove().",
                "answer_code": "empty_list = []\n# Pastikan elemen ada dalam list sebelum menggunakan remove()\nif 'item' in empty_list:\n    empty_list.remove('item')"
            },
            {
                "question": "Bagaimana cara menggunakan list comprehension untuk mengisi list kosong dengan nilai kuadrat dari 0 hingga 4?",
                "answer": "Anda bisa menggunakan list comprehension untuk menghasilkan list baru dari list kosong dengan menambahkan nilai kuadrat dari 0 hingga 4. Contoh: empty_list = [x**2 for x in range(5)]",
                "question_code": "empty_list = []\nempty_list = [x**2 for x in range(5)]",
                "answer_code": "empty_list = []\nempty_list = [x**2 for x in range(5)] # empty_list menjadi [0, 1, 4, 9, 16]"
            },
            {
                "question": "Mengapa error 'TypeError: 'list' object is not callable' terjadi saat mencoba mengakses elemen list?",
                "question_code": "empty_list = []\nelement = empty_list(0)",
                "answer": "Error ini terjadi karena Anda mencoba menggunakan list seperti fungsi. Gunakan tanda kurung siku untuk mengakses elemen list.",
                "answer_code": "empty_list = []\nelement = empty_list[0] # akan menyebabkan IndexError jika list kosong"
            },
            {
                "question": "Bagaimana cara menghindari error 'IndexError: list assignment index out of range' ketika mencoba menetapkan nilai ke indeks tertentu?",
                "answer": "Error ini terjadi karena Anda mencoba menetapkan nilai ke indeks yang tidak ada dalam list. Gunakan metode append() atau insert() untuk menambahkan elemen.",
                "question_code": "empty_list = []\nempty_list[0] = 'item'",
                "answer_code": "empty_list = []\nempty_list.append('item')"
            }
        ]
    },
    {
        "sumber": "Advanced Python Lists",
        "penulis": "Sarah Lee",
        "tanggal": "2024-08-11",
        "judul": "Teknik Lanjutan dalam Memanipulasi List Kosong di Python",
        "tingkat_kesulitan": "Advanced",
        "tag": ["Python", "Lists", "Advanced Techniques"],
        "konten": "Panduan ini mencakup teknik lanjutan untuk memanipulasi list kosong di Python, termasuk cara menambahkan elemen dengan berbagai metode dan penanganan kesalahan.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menambahkan elemen ke list kosong menggunakan fungsi itertools.chain()?",
                "answer": "Anda dapat menggunakan itertools.chain() untuk menggabungkan list kosong dengan iterable lain. Contoh: from itertools import chain\nempty_list = list(chain(empty_list, [7, 8, 9]))",
                "question_code": "from itertools import chain\nempty_list = []\nempty_list = list(chain(empty_list, [7, 8, 9]))",
                "answer_code": "from itertools import chain\nempty_list = []\nempty_list = list(chain(empty_list, [7, 8, 9])) # empty_list menjadi [7, 8, 9]"
            },
            {
                "question": "Apa penyebab error 'TypeError: 'int' object is not iterable' ketika menggunakan fungsi chain()?",
                "question_code": "from itertools import chain\nempty_list = []\nempty_list = list(chain(empty_list, 10))",
                "answer": "Error ini terjadi karena Anda mencoba menggunakan integer sebagai iterable. Pastikan untuk menggunakan iterable yang valid seperti list atau tuple.",
                "answer_code": "from itertools import chain\nempty_list = []\nempty_list = list(chain(empty_list, [10]))"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi filter() untuk menambahkan elemen yang memenuhi kondisi ke list kosong?",
                "answer": "Anda bisa menggunakan fungsi filter() untuk memilih elemen yang memenuhi kondisi dan menambahkannya ke list kosong. Contoh: empty_list = list(filter(lambda x: x % 2 == 0, [0, 1, 2, 3, 4]))",
                "question_code": "empty_list = list(filter(lambda x: x % 2 == 0, [0, 1, 2, 3, 4]))",
                "answer_code": "empty_list = list(filter(lambda x: x % 2 == 0, [0, 1, 2, 3, 4])) # empty_list menjadi [0, 2, 4]"
            },
            {
                "question": "Apa yang menyebabkan error 'ValueError: min() arg is an empty sequence' ketika menggunakan fungsi min() pada list kosong?",
                "question_code": "empty_list = []\nmin_value = min(empty_list)",
                "answer": "Error ini terjadi karena Anda mencoba mencari nilai minimum dari list kosong. Pastikan list tidak kosong sebelum menggunakan fungsi min().",
                "answer_code": "empty_list = []\nif empty_list:\n    min_value = min(empty_list)"
            },
            {
                "question": "Bagaimana cara menggabungkan list kosong dengan list lain menggunakan operator * untuk duplikasi elemen?",
                "answer": "Operator * dapat digunakan untuk mengulang elemen dalam list. Contoh: empty_list = []\nduplicated_list = empty_list * 4",
                "question_code": "empty_list = []\nduplicated_list = empty_list * 4",
                "answer_code": "empty_list = []\nduplicated_list = empty_list * 4 # duplicated_list tetap []"
            },
            {
                "question": "Apa yang menyebabkan error 'TypeError: unhashable type: 'list'' ketika mencoba menambahkan list ke dalam set?",
                "question_code": "empty_set = set()\nempty_set.add([1, 2, 3])",
                "answer": "Error ini terjadi karena list tidak dapat digunakan sebagai elemen dalam set. Gunakan tipe data yang dapat di-hash seperti tuple.",
                "answer_code": "empty_set = set()\nempty_set.add((1, 2, 3))"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi map() untuk mengubah elemen dan menambahkannya ke list kosong?",
                "answer": "Anda bisa menggunakan fungsi map() untuk menerapkan fungsi ke setiap elemen iterable dan menambahkannya ke list kosong. Contoh: empty_list = list(map(lambda x: x*3, [1, 2, 3]))",
                "question_code": "empty_list = list(map(lambda x: x*3, [1, 2, 3]))",
                "answer_code": "empty_list = list(map(lambda x: x*3, [1, 2, 3])) # empty_list menjadi [3, 6, 9]"
            },
            {
                "question": "Bagaimana cara menambahkan elemen ke list kosong menggunakan fungsi itertools.cycle()?",
                "answer": "Anda dapat menggunakan itertools.cycle() untuk mengulang elemen dalam iterable secara siklik dan menambahkannya ke list kosong. Contoh: from itertools import cycle\nempty_list = [next(cycle([1, 2, 3])) for _ in range(4)]",
                "question_code": "from itertools import cycle\nempty_list = [next(cycle([1, 2, 3])) for _ in range(4)]",
                "answer_code": "from itertools import cycle\nempty_list = [next(cycle([1, 2, 3])) for _ in range(4)] # empty_list menjadi [1, 2, 3, 1]"
            }
        ]
    }
]
