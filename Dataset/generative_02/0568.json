[
    {
        "sumber": "Python Basics for Beginners",
        "penulis": "Emily Johnson",
        "tanggal": "2024-07-26",
        "judul": "Kesalahan Umum dalam Penyalinan List di Python dan Cara Memperbaikinya",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "Copy Method"],
        "konten": "Artikel ini membahas berbagai kesalahan yang sering dilakukan saat menyalin list di Python dan memberikan solusi yang tepat untuk setiap masalah.",
        "pertanyaan": [
            {
                "question": "Apa yang salah dengan kode ini saat mencoba membuat salinan list dan menambahkan elemen baru?",
                "answer": "Kode ini tidak membuat salinan list yang benar-benar independen. Perubahan pada salinan juga mempengaruhi list asli. Gunakan metode `copy()` untuk membuat salinan yang terpisah.",
                "question_code": "fruits = ['apple', 'banana', 'orange']\nfruits_copy = fruits\nfruits_copy.append('kiwi')\nprint('Fruits:', fruits)\nprint('Fruits Copy:', fruits_copy)",
                "answer_code": "fruits = ['apple', 'banana', 'orange']\nfruits_copy = fruits.copy()\nfruits_copy.append('kiwi')\nprint('Fruits:', fruits)\nprint('Fruits Copy:', fruits_copy)"
            },
            {
                "question": "Bagaimana kode berikut dapat diperbaiki untuk menyalin list dan memastikan bahwa perubahan pada salinan tidak mempengaruhi list asli?",
                "answer": "Kode ini hanya membuat salinan dangkal. Gunakan metode `copy()` untuk menyalin list dengan benar sehingga perubahan tidak mempengaruhi list asli.",
                "question_code": "numbers = [1, 2, 3, 4]\nnumbers_copy = list(numbers)\nnumbers_copy[2] = 99\nprint('Numbers:', numbers)\nprint('Numbers Copy:', numbers_copy)",
                "answer_code": "numbers = [1, 2, 3, 4]\nnumbers_copy = numbers.copy()\nnumbers_copy[2] = 99\nprint('Numbers:', numbers)\nprint('Numbers Copy:', numbers_copy)"
            },
            {
                "question": "Apa kesalahan dalam kode ini ketika menyalin list yang berisi tuple?",
                "answer": "Kode ini hanya menyalin list secara dangkal. Untuk memastikan bahwa perubahan pada salinan tidak mempengaruhi list asli, gunakan `copy()`.",
                "question_code": "data = [(1, 2), (3, 4)]\ndata_copy = data\nprint('Data:', data)\nprint('Data Copy:', data_copy)",
                "answer_code": "data = [(1, 2), (3, 4)]\ndata_copy = data.copy()\nprint('Data:', data)\nprint('Data Copy:', data_copy)"
            },
            {
                "question": "Bagaimana kode berikut dapat diperbaiki untuk menyalin list berisi list di dalamnya tanpa mempengaruhi list asli?",
                "answer": "Kode ini membuat salinan dangkal dari list yang berisi list lain. Gunakan `deepcopy()` untuk membuat salinan mendalam.",
                "question_code": "import copy\nlist_of_lists = [[5, 10], [15, 20]]\nlist_copy = copy.copy(list_of_lists)\nlist_copy[0][0] = 100\nprint('List of Lists:', list_of_lists)\nprint('List Copy:', list_copy)",
                "answer_code": "import copy\nlist_of_lists = [[5, 10], [15, 20]]\nlist_copy = copy.deepcopy(list_of_lists)\nlist_copy[0][0] = 100\nprint('List of Lists:', list_of_lists)\nprint('List Copy:', list_copy)"
            }
        ]
    },
    {
        "sumber": "Python Coding 101",
        "penulis": "Michael Brown",
        "tanggal": "2024-07-26",
        "judul": "Memahami Kesalahan dalam Penyalinan List dan Cara Memperbaikinya",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "Lists", "Copy Method"],
        "konten": "Panduan ini menjelaskan berbagai kesalahan umum saat menyalin list di Python dan memberikan panduan untuk memperbaikinya.",
        "pertanyaan": [
            {
                "question": "Apa yang salah dengan kode berikut ketika menyalin list dan mengubah elemen dalam salinan?",
                "answer": "Kode ini tidak membuat salinan yang benar-benar terpisah dari list asli. Gunakan `copy()` untuk memastikan salinan independen.",
                "question_code": "animals = ['lion', 'tiger', 'bear']\nanimals_copy = animals\nanimals_copy[1] = 'wolf'\nprint('Animals:', animals)\nprint('Animals Copy:', animals_copy)",
                "answer_code": "animals = ['lion', 'tiger', 'bear']\nanimals_copy = animals.copy()\nanimals_copy[1] = 'wolf'\nprint('Animals:', animals)\nprint('Animals Copy:', animals_copy)"
            },
            {
                "question": "Bagaimana kode berikut bisa diperbaiki agar menyalin list yang berisi angka dan menghindari efek samping pada list asli?",
                "answer": "Kode ini membuat salinan dangkal dari list. Gunakan `copy()` untuk membuat salinan yang benar-benar terpisah.",
                "question_code": "values = [10, 20, 30]\nvalues_copy = list(values)\nvalues_copy.append(40)\nprint('Values:', values)\nprint('Values Copy:', values_copy)",
                "answer_code": "values = [10, 20, 30]\nvalues_copy = values.copy()\nvalues_copy.append(40)\nprint('Values:', values)\nprint('Values Copy:', values_copy)"
            },
            {
                "question": "Apa kesalahan pada kode ini dalam menyalin list berisi string dan mengubah salah satu elemen?",
                "answer": "Kode ini membuat salinan yang tidak terpisah dari list asli. Gunakan `copy()` untuk menyalin list secara independen.",
                "question_code": "names = ['Alice', 'Bob', 'Charlie']\nnames_copy = names.copy()\nnames_copy[2] = 'David'\nprint('Names:', names)\nprint('Names Copy:', names_copy)",
                "answer_code": "names = ['Alice', 'Bob', 'Charlie']\nnames_copy = names.copy()\nnames_copy[2] = 'David'\nprint('Names:', names)\nprint('Names Copy:', names_copy)"
            },
            {
                "question": "Bagaimana kode berikut dapat diperbaiki untuk menyalin list yang berisi list lain dan mencegah perubahan pada list asli?",
                "answer": "Kode ini hanya membuat salinan dangkal. Gunakan `deepcopy()` untuk menyalin list beserta semua elemen di dalamnya.",
                "question_code": "import copy\nnested_list = [[1, 2], [3, 4]]\nshallow_copy = copy.copy(nested_list)\nshallow_copy[1][0] = 99\nprint('Nested List:', nested_list)\nprint('Shallow Copy:', shallow_copy)",
                "answer_code": "import copy\nnested_list = [[1, 2], [3, 4]]\ndeep_copy = copy.deepcopy(nested_list)\ndeep_copy[1][0] = 99\nprint('Nested List:', nested_list)\nprint('Deep Copy:', deep_copy)"
            }
        ]
    }
]
