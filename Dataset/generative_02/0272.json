[
    {
        "sumber": "pythonforintermediate.com",
        "penulis": "Rama Widodo",
        "tanggal": "2024-12-15",
        "judul": "Penggunaan Metode Collections di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "collections", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan beberapa metode dari modul collections di Python seperti `Counter`, `defaultdict`, `namedtuple`, dan `deque`.",
        "pertanyaan": [
            {
                "question": "Apa itu modul collections di Python?",
                "answer": "Modul collections adalah modul standar Python yang menyediakan struktur data alternatif untuk meningkatkan fleksibilitas dan performa."
            },
            {
                "question": "Bagaimana cara menggunakan `Counter` dari modul collections di Python?",
                "question_code": "from collections import Counter\nitem_list = ['apple', 'banana', 'apple', 'orange', 'banana', 'apple']\ncount = Counter(item_list)\napple_count = count['apple']",
                "answer": "Anda bisa menggunakan `Counter` untuk menghitung kemunculan elemen dalam iterable. Misalnya, `Counter(['apple', 'banana', 'apple', 'orange', 'banana', 'apple'])`.",
                "answer_code": "from collections import Counter\nitem_list = ['apple', 'banana', 'apple', 'orange', 'banana', 'apple']\ncount = Counter(item_list)\napple_count = count['apple']"
            },
            {
                "question": "Apa itu `defaultdict` di Python?",
                "answer": "`defaultdict` adalah subclass dari dictionary yang memberikan nilai default untuk key yang tidak ada."
            },
            {
                "question": "Bagaimana cara menggunakan `defaultdict` dari modul collections di Python?",
                "question_code": "from collections import defaultdict\ndefault_dict = defaultdict(list)\ndefault_dict['fruits'].append('apple')\ndefault_dict['fruits'].append('banana')",
                "answer": "Anda bisa menggunakan `defaultdict` dengan memberikan tipe data atau fungsi sebagai argumen untuk nilai default. Misalnya, `defaultdict(list)`.",
                "answer_code": "from collections import defaultdict\ndefault_dict = defaultdict(list)\ndefault_dict['fruits'].append('apple')\ndefault_dict['fruits'].append('banana')"
            },
            {
                "question": "Apa itu `namedtuple` di Python?",
                "answer": "`namedtuple` adalah subclass dari tuple yang memungkinkan akses elemen dengan nama atribut."
            },
            {
                "question": "Bagaimana cara menggunakan `namedtuple` dari modul collections di Python?",
                "question_code": "from collections import namedtuple\nCar = namedtuple('Car', ['make', 'model', 'year'])\nmy_car = Car(make='Toyota', model='Corolla', year=2020)\ncar_make = my_car.make",
                "answer": "Anda bisa menggunakan `namedtuple` dengan mendefinisikan nama tuple dan field names. Misalnya, `namedtuple('Car', ['make', 'model', 'year'])`.",
                "answer_code": "from collections import namedtuple\nCar = namedtuple('Car', ['make', 'model', 'year'])\nmy_car = Car(make='Toyota', model='Corolla', year=2020)\ncar_make = my_car.make"
            },
            {
                "question": "Apa itu `deque` di Python?",
                "answer": "`deque` adalah double-ended queue yang memungkinkan penambahan dan penghapusan elemen dari kedua ujung dengan performa yang baik."
            },
            {
                "question": "Bagaimana cara menggunakan `deque` dari modul collections di Python?",
                "question_code": "from collections import deque\nqueue = deque(['first', 'second', 'third'])\nqueue.append('fourth')\nqueue.appendleft('zeroth')",
                "answer": "Anda bisa menggunakan `deque` untuk operasi penambahan dan penghapusan elemen dari kedua ujung dengan performa yang baik. Misalnya, `deque(['first', 'second', 'third'])`.",
                "answer_code": "from collections import deque\nqueue = deque(['first', 'second', 'third'])\nqueue.append('fourth')\nqueue.appendleft('zeroth')"
            }
        ]
    },
    {
        "sumber": "advancedpythonsyntax.com",
        "penulis": "Dewi Putri",
        "tanggal": "2024-12-20",
        "judul": "Penggunaan Fungsi Any dan All di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "any", "all", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi built-in `any` dan `all` di Python untuk evaluasi kondisi dalam iterable.",
        "pertanyaan": [
            {
                "question": "Apa itu fungsi `any` di Python?",
                "answer": "Fungsi `any` digunakan untuk memeriksa apakah setidaknya satu elemen dalam iterable bernilai True."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `any` di Python?",
                "question_code": "numbers = [0, 1, 2, 3]\nhas_positive = any(num > 0 for num in numbers)",
                "answer": "Anda bisa menggunakan fungsi `any` dengan memberikan iterable sebagai argumen. Misalnya, `any(num > 0 for num in numbers)`.",
                "answer_code": "numbers = [0, 1, 2, 3]\nhas_positive = any(num > 0 for num in numbers)"
            },
            {
                "question": "Apa itu fungsi `all` di Python?",
                "answer": "Fungsi `all` digunakan untuk memeriksa apakah semua elemen dalam iterable bernilai True."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `all` di Python?",
                "question_code": "values = [True, True, False]\nall_true = all(values)",
                "answer": "Anda bisa menggunakan fungsi `all` dengan memberikan iterable sebagai argumen. Misalnya, `all(values)`.",
                "answer_code": "values = [True, True, False]\nall_true = all(values)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `any` dengan list comprehension di Python?",
                "question_code": "words = ['apple', 'banana', 'cherry']\ncontains_apple = any('apple' in word for word in words)",
                "answer": "Anda bisa menggunakan fungsi `any` dengan list comprehension untuk evaluasi kondisi dalam list. Misalnya, `any('apple' in word for word in words)`.",
                "answer_code": "words = ['apple', 'banana', 'cherry']\ncontains_apple = any('apple' in word for word in words)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `all` dengan list comprehension di Python?",
                "question_code": "numbers = [1, 2, 3, 4]\nall_positive = all(num > 0 for num in numbers)",
                "answer": "Anda bisa menggunakan fungsi `all` dengan list comprehension untuk evaluasi kondisi dalam list. Misalnya, `all(num > 0 for num in numbers)`.",
                "answer_code": "numbers = [1, 2, 3, 4]\nall_positive = all(num > 0 for num in numbers)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `any` untuk memeriksa apakah ada elemen yang kosong dalam list di Python?",
                "question_code": "strings = ['hello', '', 'world']\nhas_empty = any(not string for string in strings)",
                "answer": "Anda bisa menggunakan fungsi `any` untuk memeriksa apakah ada elemen yang kosong dalam list dengan list comprehension. Misalnya, `any(not string for string in strings)`.",
                "answer_code": "strings = ['hello', '', 'world']\nhas_empty = any(not string for string in strings)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `all` untuk memeriksa apakah semua elemen adalah bilangan positif di Python?",
                "question_code": "numbers = [1, 2, 3, 4]\nall_positive = all(num > 0 for num in numbers)",
                "answer": "Anda bisa menggunakan fungsi `all` untuk memeriksa apakah semua elemen adalah bilangan positif dengan list comprehension. Misalnya, `all(num > 0 for num in numbers)`.",
                "answer_code": "numbers = [1, 2, 3, 4]\nall_positive = all(num > 0 for num in numbers)"
            }
        ]
    }
]
