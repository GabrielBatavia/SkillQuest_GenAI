[
    {
        "sumber": "pythonmastery.com",
        "penulis": "Lina Kusuma",
        "tanggal": "2024-12-01",
        "judul": "Penggunaan Metode String di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "string methods", "menengah"],
        "konten": "Artikel ini menjelaskan berbagai metode string di Python seperti `startswith()`, `endswith()`, `strip()`, `split()`, dan `join()`.",
        "pertanyaan": [
            {
                "question": "Saya dengar ada metode `startswith()` di Python. Itu apa ya?",
                "answer": "Metode `startswith()` digunakan untuk memeriksa apakah suatu string dimulai dengan substring tertentu."
            },
            {
                "question": "Gimana caranya pakai metode `startswith()` di Python?",
                "question_code": "text = 'Halo, dunia!'\nresult = text.startswith('Halo')",
                "answer": "Anda bisa menggunakan metode `startswith()` dengan memanggilnya pada string dan memberikan substring sebagai argumen. Contohnya: `text.startswith('Halo')`.",
                "answer_code": "text = 'Halo, dunia!'\nresult = text.startswith('Halo')"
            },
            {
                "question": "Kalau metode `endswith()` di Python itu buat apa?",
                "answer": "Metode `endswith()` digunakan untuk memeriksa apakah suatu string diakhiri dengan substring tertentu."
            },
            {
                "question": "Bagaimana cara menggunakan metode `endswith()` di Python?",
                "question_code": "text = 'Halo, dunia!'\nresult = text.endswith('dunia!')",
                "answer": "Anda bisa menggunakan metode `endswith()` dengan memanggilnya pada string dan memberikan substring sebagai argumen. Contohnya: `text.endswith('dunia!')`.",
                "answer_code": "text = 'Halo, dunia!'\nresult = text.endswith('dunia!')"
            },
            {
                "question": "Apa itu metode `strip()` di Python?",
                "answer": "Metode `strip()` digunakan untuk menghapus karakter awal dan akhir dari string. Secara default, metode ini menghapus spasi."
            },
            {
                "question": "Gimana cara pakai metode `strip()` di Python?",
                "question_code": "text = '  Halo, dunia!  '\nresult = text.strip()",
                "answer": "Anda bisa menggunakan metode `strip()` dengan memanggilnya pada string untuk menghapus spasi di awal dan akhir string. Contohnya: `text.strip()`.",
                "answer_code": "text = '  Halo, dunia!  '\nresult = text.strip()"
            },
            {
                "question": "Metode `split()` di Python itu untuk apa?",
                "answer": "Metode `split()` digunakan untuk memisahkan string menjadi list berdasarkan delimiter yang ditentukan."
            },
            {
                "question": "Bagaimana cara pakai metode `split()` di Python?",
                "question_code": "text = 'Halo, dunia!'\nresult = text.split(', ')",
                "answer": "Anda bisa menggunakan metode `split()` dengan memanggilnya pada string dan memberikan delimiter sebagai argumen. Contohnya: `text.split(', ')`.",
                "answer_code": "text = 'Halo, dunia!'\nresult = text.split(', ')"
            },
            {
                "question": "Apa itu metode `join()` di Python?",
                "answer": "Metode `join()` digunakan untuk menggabungkan elemen-elemen dalam iterable menjadi satu string dengan pemisah yang ditentukan."
            },
            {
                "question": "Gimana caranya pakai metode `join()` di Python?",
                "question_code": "words = ['Halo', 'dunia']\nresult = ' '.join(words)",
                "answer": "Anda bisa menggunakan metode `join()` dengan memanggilnya pada string yang akan digunakan sebagai pemisah dan menerapkan iterable sebagai argumen. Contohnya: `' '.join(words)`.",
                "answer_code": "words = ['Halo', 'dunia']\nresult = ' '.join(words)"
            }
        ]
    },
    {
        "sumber": "pythonsyntaxadvanced.com",
        "penulis": "Arif Rahman",
        "tanggal": "2024-11-20",
        "judul": "Penggunaan Enumerate dan Zip di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "enumerate", "zip", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi enumerate dan zip di Python untuk iterasi yang lebih efisien dan efektif.",
        "pertanyaan": [
            {
                "question": "Fungsi enumerate di Python itu buat apa ya?",
                "answer": "Fungsi enumerate digunakan untuk menambahkan penghitung ke iterable dan mengembalikan objek enumerate."
            },
            {
                "question": "Bagaimana cara pakai fungsi enumerate di Python?",
                "question_code": "fruits = ['apel', 'pisang', 'ceri']\nfor index, value in enumerate(fruits):\n    print(index, value)",
                "answer": "Anda bisa menggunakan fungsi enumerate dengan memanggilnya pada iterable dan menggunakannya dalam loop. Contohnya: `enumerate(fruits)`.",
                "answer_code": "fruits = ['apel', 'pisang', 'ceri']\nfor index, value in enumerate(fruits):\n    print(index, value)"
            },
            {
                "question": "Kalau fungsi zip di Python itu apa?",
                "answer": "Fungsi zip digunakan untuk menggabungkan beberapa iterable menjadi iterator yang menghasilkan tuple berisi elemen-elemen dari masing-masing iterable."
            },
            {
                "question": "Bagaimana cara pakai fungsi zip di Python?",
                "question_code": "list1 = [1, 2, 3]\nlist2 = ['a', 'b', 'c']\nzipped = list(zip(list1, list2))",
                "answer": "Anda bisa menggunakan fungsi zip dengan memberikan beberapa iterable sebagai argumen. Contohnya: `zip(list1, list2)`.",
                "answer_code": "list1 = [1, 2, 3]\nlist2 = ['a', 'b', 'c']\nzipped = list(zip(list1, list2))"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi zip untuk mengiterasi dua list secara bersamaan di Python?",
                "question_code": "numbers = [1, 2, 3]\nletters = ['a', 'b', 'c']\nfor num, char in zip(numbers, letters):\n    print(num, char)",
                "answer": "Anda bisa menggunakan fungsi zip untuk mengiterasi dua list secara bersamaan dengan menggabungkannya dan mengiterasi hasilnya. Contohnya: `for num, char in zip(numbers, letters):`.",
                "answer_code": "numbers = [1, 2, 3]\nletters = ['a', 'b', 'c']\nfor num, char in zip(numbers, letters):\n    print(num, char)"
            },
            {
                "question": "Bagaimana cara pakai fungsi zip untuk bikin dictionary di Python?",
                "question_code": "fields = ['nama', 'umur']\nvalues = ['Budi', 25]\nmy_dict = dict(zip(fields, values))",
                "answer": "Anda bisa menggunakan fungsi zip untuk membuat dictionary dengan menggabungkan dua iterable (satu untuk keys dan satu untuk values). Contohnya: `dict(zip(fields, values))`.",
                "answer_code": "fields = ['nama', 'umur']\nvalues = ['Budi', 25]\nmy_dict = dict(zip(fields, values))"
            },
            {
                "question": "Gimana caranya unzip hasil dari fungsi zip di Python?",
                "question_code": "zipped = [(1, 'a'), (2, 'b'), (3, 'c')]\nlist1, list2 = zip(*zipped)",
                "answer": "Anda bisa meng-unzip hasil dari fungsi zip dengan menggunakan operator `*` untuk membongkar tuple menjadi beberapa iterable. Contohnya: `zip(*zipped)`.",
                "answer_code": "zipped = [(1, 'a'), (2, 'b'), (3, 'c')]\nlist1, list2 = zip(*zipped)"
            }
        ]
    }
]
