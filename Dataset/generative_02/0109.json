[
    {
        "sumber": "pythonpemula.com",
        "penulis": "Rudi Hartono",
        "tanggal": "2023-09-25",
        "judul": "Penggunaan List di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "list", "dasar"],
        "konten": "Artikel ini menjelaskan cara membuat, mengakses, menambah, menghapus, dan memanipulasi elemen dalam list di Python.",
        "pertanyaan": [
            {
                "question": "List itu apa sih? Kayaknya banyak banget yang pakai.",
                "answer": "List adalah struktur data yang dapat menyimpan beberapa item dalam satu variabel dan diakses menggunakan indeks."
            },
            {
                "question": "Gimana caranya bikin list di Python? Aku nggak ngerti bedanya sama array.",
                "answer": "Anda bisa membuat list dengan menggunakan tanda kurung siku `[]` dan memisahkan item dengan koma. Contohnya: `my_list = [1, 2, 3]`."
            },
            {
                "question": "Kalau sudah bikin list, gimana cara ngambil elemen tertentu di dalamnya?",
                "answer": "Anda bisa mengakses elemen dalam list dengan menggunakan indeks. Contohnya: `my_list[0]`."
            },
            {
                "question": "Aku pengen nambahin elemen ke list, tapi kok pakai add() nggak bisa ya?",
                "question_code": "my_list.add(4)",
                "answer": "Untuk menambahkan elemen ke dalam list, gunakan metode `append()`. Contohnya: `my_list.append(4)`. Metode `add()` tidak ada dalam list Python.",
                "answer_code": "my_list = [1, 2, 3]\nmy_list.append(4)"
            },
            {
                "question": "Bagaimana cara menghapus elemen dari list? Aku coba pakai delete my_list[2] tapi salah.",
                "question_code": "delete my_list[2]",
                "answer": "Anda bisa menghapus elemen dari list dengan menggunakan metode `remove()`. Contohnya: `my_list.remove(2)`. Untuk menghapus berdasarkan indeks, gunakan `del my_list[2]`.",
                "answer_code": "my_list = [1, 2, 3]\nmy_list.remove(2)"
            },
            {
                "question": "Gimana cara ngurutkan elemen dalam list? Aku coba pakai my_list.sorted() tapi nggak jalan.",
                "question_code": "my_list.sorted()",
                "answer": "Anda bisa mengurutkan elemen dalam list dengan menggunakan metode `sort()`. Contohnya: `my_list.sort()`. Metode `sorted()` adalah fungsi built-in yang mengembalikan list baru.",
                "answer_code": "my_list = [3, 1, 2]\nmy_list.sort()"
            },
            {
                "question": "Aku mau balikin urutan elemen dalam list, tapi pakai my_list.flip() kok error.",
                "question_code": "my_list.flip()",
                "answer": "Untuk membalik urutan elemen dalam list, gunakan metode `reverse()`. Contohnya: `my_list.reverse()`. Metode `flip()` tidak ada dalam list Python.",
                "answer_code": "my_list = [1, 2, 3]\nmy_list.reverse()"
            },
            {
                "question": "Gimana caranya cari tahu posisi elemen dalam list? Pakai my_list.find(3) kok nggak bisa?",
                "question_code": "position = my_list.find(3)",
                "answer": "Anda bisa menemukan indeks elemen dalam list dengan menggunakan metode `index()`. Contohnya: `my_list.index(3)`. Metode `find()` tidak ada dalam list Python.",
                "answer_code": "my_list = [1, 2, 3]\nposition = my_list.index(3)"
            },
            {
                "question": "Gimana cara ngitung berapa kali elemen muncul dalam list? Pakai my_list.count(2) kok nggak bisa?",
                "question_code": "count = my_list.frequency(2)",
                "answer": "Untuk menghitung jumlah kemunculan elemen dalam list, gunakan metode `count()`. Contohnya: `my_list.count(2)`. Metode `frequency()` tidak ada dalam list Python.",
                "answer_code": "my_list = [1, 2, 2, 3]\ncount = my_list.count(2)"
            }
        ]
    },
    {
        "sumber": "pythonmudah.net",
        "penulis": "Lia Pratiwi",
        "tanggal": "2023-11-12",
        "judul": "Penggunaan Tuple di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "tuple", "dasar"],
        "konten": "Artikel ini menjelaskan cara membuat, mengakses, dan memanipulasi elemen dalam tuple di Python.",
        "pertanyaan": [
            {
                "question": "Apa sih tuple itu? Bedanya sama list apa ya?",
                "answer": "Tuple adalah struktur data yang mirip dengan list tetapi bersifat immutable (tidak dapat diubah setelah dibuat)."
            },
            {
                "question": "Gimana cara bikin tuple di Python? Aku bingung bedanya sama list.",
                "answer": "Anda bisa membuat tuple dengan menggunakan tanda kurung `()` dan memisahkan item dengan koma. Contohnya: `my_tuple = (1, 2, 3)`."
            },
            {
                "question": "Kalau sudah punya tuple, gimana caranya ngambil elemen di dalamnya?",
                "answer": "Anda bisa mengakses elemen dalam tuple dengan menggunakan indeks. Contohnya: `my_tuple[0]`."
            },
            {
                "question": "Aku coba bikin tuple satu elemen pakai my_tuple = (1) tapi kok hasilnya bukan tuple?",
                "question_code": "my_tuple = (1)",
                "answer": "Untuk membuat tuple dengan satu elemen, tambahkan koma setelah elemen. Contohnya: `my_tuple = (1,)`. Kode `my_tuple = (1)` hanya akan membuat integer, bukan tuple.",
                "answer_code": "my_tuple = (1,)"
            },
            {
                "question": "Gimana caranya gabungin dua tuple? Pakai tuple1.extend(tuple2) kok nggak bisa?",
                "question_code": "tuple1.extend(tuple2)",
                "answer": "Untuk menggabungkan dua tuple, gunakan operator `+`. Contohnya: `combined_tuple = tuple1 + tuple2`. Metode `extend()` tidak ada dalam tuple Python.",
                "answer_code": "tuple1 = (1, 2)\ntuple2 = (3, 4)\ncombined_tuple = tuple1 + tuple2"
            },
            {
                "question": "Aku mau tahu panjang tuple, pakai tuple1.length() kok error?",
                "question_code": "size = tuple1.length()",
                "answer": "Untuk mengetahui panjang tuple, gunakan fungsi `len()`. Contohnya: `len(my_tuple)`. Metode `length()` tidak ada dalam tuple Python.",
                "answer_code": "my_tuple = (1, 2, 3)\nsize = len(my_tuple)"
            },
            {
                "question": "Bagaimana cara cek elemen ada di tuple? Aku coba pakai found = my_tuple.contains(2) tapi salah.",
                "question_code": "found = my_tuple.contains(2)",
                "answer": "Anda bisa memeriksa apakah elemen ada dalam tuple dengan menggunakan operator `in`. Contohnya: `2 in my_tuple`. Metode `contains()` tidak ada dalam tuple Python.",
                "answer_code": "my_tuple = (1, 2, 3)\nfound = 2 in my_tuple"
            },
            {
                "question": "Gimana caranya akses elemen tuple dengan slicing? Aku coba pakai my_tuple.slice(1, 3) tapi error.",
                "question_code": "slice = my_tuple.slice(1, 3)",
                "answer": "Anda bisa mengakses elemen tuple dengan slicing menggunakan notasi `start:stop`. Contohnya: `my_tuple[1:3]`. Metode `slice()` tidak ada dalam tuple Python.",
                "answer_code": "my_tuple = (1, 2, 3, 4)\nslice = my_tuple[1:3]"
            },
            {
                "question": "Aku mau ubah tuple jadi list, pakai converted_list = my_tuple.to_list() tapi nggak bisa.",
                "question_code": "converted_list = my_tuple.to_list()",
                "answer": "Untuk mengubah tuple menjadi list, gunakan fungsi `list()`. Contohnya: `list(my_tuple)`. Metode `to_list()` tidak ada dalam tuple Python.",
                "answer_code": "my_tuple = (1, 2, 3)\nconverted_list = list(my_tuple)"
            }
        ]
    }
]
