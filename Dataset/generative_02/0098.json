[
    {
        "sumber": "pythonforbeginners.com",
        "penulis": "Doni Wahyudi",
        "tanggal": "2023-06-20",
        "judul": "Penggunaan Tipe Data Boolean di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "boolean", "dasar"],
        "konten": "Artikel ini menjelaskan penggunaan tipe data boolean di Python, termasuk cara mendeklarasikan, menggunakan, dan mengoperasikan nilai boolean.",
        "pertanyaan": [
            {
                "question": "Apa itu tipe data boolean di Python?",
                "answer": "Tipe data boolean adalah tipe data yang hanya memiliki dua nilai: `True` atau `False`."
            },
            {
                "question": "Bagaimana cara mendeklarasikan variabel boolean di Python?",
                "answer": "Anda bisa mendeklarasikan variabel boolean dengan menugaskan nilai `True` atau `False` ke variabel. Contohnya: `is_active = True`."
            },
            {
                "question": "Bagaimana cara menggunakan operator logika `and` dengan nilai boolean di Python?",
                "question_code": "is_active = True\nis_admin = 'True'\nresult = is_active and is_admin",
                "answer": "Operator logika `and` membutuhkan operand boolean. Di sini, `is_admin` seharusnya berupa boolean (`True` atau `False`), bukan string.",
                "answer_code": "is_active = True\nis_admin = False\nresult = is_active and is_admin"
            },
            {
                "question": "Bagaimana cara menggunakan operator logika `or` dengan nilai boolean di Python?",
                "question_code": "is_active = 1\nis_admin = 0\nresult = is_active or is_admin",
                "answer": "Operator logika `or` memerlukan operand boolean. `1` dan `0` dianggap `True` dan `False` dalam konteks boolean, tapi sebaiknya gunakan `True` dan `False` untuk kejelasan.",
                "answer_code": "is_active = True\nis_admin = False\nresult = is_active or is_admin"
            },
            {
                "question": "Bagaimana cara menggunakan operator logika `not` dengan nilai boolean di Python?",
                "question_code": "is_active = 1\nresult = not is_active",
                "answer": "Operator `not` memerlukan operand boolean. Jika menggunakan angka seperti `1`, itu akan dianggap sebagai `True`, sehingga hasilnya akan berbeda. Gunakan `True` atau `False` untuk hasil yang tepat.",
                "answer_code": "is_active = True\nresult = not is_active"
            },
            {
                "question": "Bagaimana cara memeriksa kesamaan dua nilai di Python?",
                "question_code": "a = '5'\nb = 5\nresult = a == b",
                "answer": "Untuk memeriksa kesamaan, pastikan kedua nilai memiliki tipe data yang sama. Di sini, `a` adalah string dan `b` adalah integer, sehingga hasilnya adalah `False`. Gunakan `a = 5` dan `b = 5` agar keduanya bertipe integer.",
                "answer_code": "a = 5\nb = 5\nresult = a == b"
            },
            {
                "question": "Bagaimana cara memeriksa ketidaksamaan dua nilai di Python?",
                "question_code": "a = 5\nb = 5.0\nresult = a !== b",
                "answer": "Operator ketidaksamaan yang benar adalah `!=`. Di sini, `!==` adalah sintaks yang salah. Selain itu, `a` dan `b` adalah tipe data yang berbeda, tapi `5` dan `5.0` dianggap sama dalam konteks ketidaksamaan.",
                "answer_code": "a = 5\nb = 5\nresult = a != b"
            },
            {
                "question": "Bagaimana cara memeriksa apakah satu nilai lebih besar dari nilai lainnya di Python?",
                "question_code": "a = 5\nb = '3'\nresult = a > b",
                "answer": "Operator `>` memerlukan operand yang dapat dibandingkan, yaitu angka. Di sini, `b` adalah string, yang menyebabkan kesalahan. Pastikan kedua nilai bertipe integer atau float.",
                "answer_code": "a = 5\nb = 3\nresult = a > b"
            },
            {
                "question": "Bagaimana cara memeriksa apakah satu nilai lebih kecil atau sama dengan nilai lainnya di Python?",
                "question_code": "a = 5\nb = [5]\nresult = a <= b",
                "answer": "Operator `<=` memerlukan operand yang bisa dibandingkan, seperti angka. Di sini, `b` adalah list, yang tidak dapat dibandingkan langsung dengan angka. Gunakan `b = 5` agar keduanya angka.",
                "answer_code": "a = 5\nb = 5\nresult = a <= b"
            }
        ]
    },
    {
        "sumber": "pythonindonesia.com",
        "penulis": "Budi Santoso",
        "tanggal": "2023-10-12",
        "judul": "Penggunaan Fungsi Built-in di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "built-in functions", "dasar"],
        "konten": "Artikel ini menjelaskan berbagai fungsi built-in di Python seperti `len()`, `type()`, `input()`, `print()`, dan `range()`.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan fungsi `len()` di Python?",
                "answer": "Fungsi `len()` digunakan untuk mendapatkan panjang (jumlah elemen) dari suatu objek seperti list atau string. Contohnya: `len(my_list)`."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `type()` di Python?",
                "answer": "Fungsi `type()` digunakan untuk mengetahui tipe data dari suatu objek. Contohnya: `type(10)`."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `input()` di Python?",
                "question_code": "name = input('Enter your name')\nprint('Hello, ' + name",
                "answer": "Fungsi `input()` digunakan untuk mengambil input dari pengguna. Pastikan untuk menutup tanda kurung pada `print()` agar tidak terjadi kesalahan. Contohnya: `print('Hello, ' + name)`.",
                "answer_code": "name = input('Enter your name: ')\nprint('Hello, ' + name)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `print()` di Python?",
                "question_code": "print('Hello World)",
                "answer": "Fungsi `print()` digunakan untuk mencetak teks atau nilai ke layar. Pastikan tanda kutip diakhiri dengan benar. Contohnya: `print('Hello, World!')`.",
                "answer_code": "print('Hello, World!')"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `range()` di Python?",
                "question_code": "for i in range(0, 5, 1):\n    print(i)\nrange(5)",
                "answer": "Fungsi `range()` menghasilkan urutan angka. Dalam loop, `range()` digunakan dengan parameter `start`, `stop`, dan `step`. Pastikan untuk menggunakan `range()` di dalam loop untuk hasil yang benar. Contohnya: `for i in range(5)`.",
                "answer_code": "for i in range(5):\n    print(i)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `abs()` di Python?",
                "question_code": "abs(-5.5)\nabs(5)",
                "answer": "Fungsi `abs()` digunakan untuk mendapatkan nilai absolut. Anda dapat menggunakannya untuk angka positif dan negatif. Hanya satu argumen yang diperlukan. Contohnya: `abs(-5)`.",
                "answer_code": "abs(-5)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `max()` di Python?",
                "question_code": "max([1, 2, 3, 4], 5)",
                "answer": "Fungsi `max()` dapat digunakan untuk menemukan nilai terbesar dari iterable atau dari argumen individual. Pastikan argumen yang diberikan sesuai dengan penggunaan yang diinginkan.",
                "answer_code": "max([1, 2, 3, 4])"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `min()` di Python?",
                "question_code": "min([1, 2, 3, 4], 0)",
                "answer": "Fungsi `min()` digunakan untuk mendapatkan nilai terkecil dari iterable atau argumen individual. Pastikan argumen yang diberikan sesuai dengan konteks penggunaan.",
                "answer_code": "min([1, 2, 3, 4])"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi `sum()` di Python?",
                "question_code": "sum(1, 2, 3, 4)",
                "answer": "Fungsi `sum()` digunakan untuk menjumlahkan elemen-elemen dalam iterable seperti list. Pastikan untuk memasukkan iterable sebagai argumen. Contohnya: `sum([1, 2, 3, 4])`.",
                "answer_code": "sum([1, 2, 3, 4])"
            }
        ]
    }
]
