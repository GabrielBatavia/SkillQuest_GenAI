[
    {
        "sumber": "Python Collections Guide",
        "penulis": "Emily Clark",
        "tanggal": "2024-08-01",
        "judul": "Memahami Tipe Data Koleksi di Python",
        "tingkat_kesulitan": "Basic",
        "tag": ["Python", "Data Collections", "List", "Tuple", "Dictionary", "Set"],
        "konten": "Panduan ini menjelaskan tipe data koleksi di Python, termasuk list, tuple, dictionary, dan set, serta cara penggunaannya dalam program.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat list yang berisi angka dari 1 hingga 5?",
                "answer": "Anda bisa membuat list dengan menuliskan angka-angka di dalam tanda kurung siku. Contoh: `angka_list = [1, 2, 3, 4, 5]`."
            },
            {
                "question": "Apa perbedaan utama antara tuple dan list?",
                "answer": "Perbedaan utama adalah bahwa tuple bersifat immutable (tidak bisa diubah setelah dibuat), sedangkan list bersifat mutable (bisa diubah). Contoh tuple: `angka_tuple = (1, 2, 3)`. Contoh list: `angka_list = [1, 2, 3]`."
            },
            {
                "question": "Bagaimana cara mendeklarasikan dictionary dengan nama 'kontak' yang memiliki kunci 'nama' dan 'nomor'?",
                "answer": "Deklarasikan dictionary dengan format kunci dan nilai di dalam tanda kurung kurawal. Contoh: `kontak = {'nama': 'Alice', 'nomor': '1234567890'}`."
            },
            {
                "question": "Apa yang dimaksud dengan set dalam Python dan bagaimana cara mendeklarasikannya?",
                "answer": "Set adalah koleksi tidak terurut yang tidak mengizinkan duplikat. Anda dapat mendeklarasikan set dengan menuliskan elemen-elemen di dalam tanda kurung kurawal. Contoh: `unik_set = {1, 2, 3, 4}`."
            },
            {
                "question": "Apa kesalahan dalam kode berikut?",
                "question_code": "fruits = (apple, banana, cherry)",
                "answer": "Kesalahan ini karena nilai-nilai dalam tuple harus berada dalam tanda kutip. Perbaiki dengan: `fruits = ('apple', 'banana', 'cherry')`.",
                "answer_code": "fruits = ('apple', 'banana', 'cherry')"
            },
            {
                "question": "Mengapa kode berikut menghasilkan error?",
                "question_code": "my_set = {1, 2, 2, 3}",
                "answer": "Error terjadi karena set tidak mengizinkan duplikat. Elemen yang sama hanya akan muncul sekali. Kode ini valid sebagai `my_set = {1, 2, 3}`.",
                "answer_code": "my_set = {1, 2, 3}"
            },
            {
                "question": "Bagaimana cara mengakses elemen pertama dari sebuah list?",
                "question_code": "my_list = [10, 20, 30]\nelement_pertama = my_list[0]",
                "answer": "Anda dapat mengakses elemen pertama dari list menggunakan indeks 0. Contoh: `element_pertama = my_list[0]`.",
                "answer_code": "my_list = [10, 20, 30]\nelement_pertama = my_list[0]"
            },
            {
                "question": "Apa yang salah dengan kode ini?",
                "question_code": "contact = {'name': 'John', age: 30}",
                "answer": "Kesalahan ini karena kunci dalam dictionary harus berupa string dan diapit oleh tanda kutip. Perbaiki dengan: `contact = {'name': 'John', 'age': 30}`.",
                "answer_code": "contact = {'name': 'John', 'age': 30}"
            },
            {
                "question": "Bagaimana cara menambahkan elemen baru ke dalam sebuah set?",
                "question_code": "my_set = {1, 2}\nmy_set.add(3)",
                "answer": "Gunakan metode `add()` untuk menambahkan elemen ke dalam set. Contoh: `my_set.add(3)`.",
                "answer_code": "my_set = {1, 2}\nmy_set.add(3)"
            }
        ]
    },
    {
        "sumber": "Advanced Python Collections",
        "penulis": "Michael Brown",
        "tanggal": "2024-08-01",
        "judul": "Penggunaan Lanjutan Tipe Data Koleksi di Python",
        "tingkat_kesulitan": "Intermediate",
        "tag": ["Python", "Data Collections", "List", "Tuple", "Dictionary", "Set"],
        "konten": "Panduan ini membahas penggunaan lanjutan tipe data koleksi di Python, termasuk operasi dan metode yang dapat diterapkan pada list, tuple, dictionary, dan set.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat tuple dengan elemen yang berbeda tipe data?",
                "answer": "Tuple dapat berisi elemen dengan berbagai tipe data. Contoh: `data_tuple = (1, 'hello', 3.14)`."
            },
            {
                "question": "Apa yang dimaksud dengan operasi slicing pada list dan bagaimana cara menggunakannya?",
                "answer": "Operasi slicing digunakan untuk mengambil subset dari list. Contoh: `sub_list = my_list[1:4]` akan mengambil elemen dari indeks 1 sampai 3 dari `my_list`."
            },
            {
                "question": "Bagaimana cara mengupdate nilai dalam sebuah dictionary?",
                "answer": "Anda bisa mengupdate nilai dalam dictionary dengan menetapkan nilai baru untuk kunci tertentu. Contoh: `kontak['nomor'] = '0987654321'`."
            },
            {
                "question": "Bagaimana cara menghapus elemen dari sebuah set?",
                "answer": "Gunakan metode `remove()` atau `discard()` untuk menghapus elemen dari set. Contoh: `my_set.remove(2)` atau `my_set.discard(2)`.",
                "question_code": "my_set = {1, 2, 3}\nmy_set.remove(2)",
                "answer_code": "my_set = {1, 2, 3}\nmy_set.remove(2)"
            },
            {
                "question": "Apa kesalahan dalam kode berikut?",
                "question_code": "my_tuple = (1, 2, 3, [4, 5])",
                "answer": "Kesalahan ini karena tuple tidak dapat berisi elemen yang bersifat mutable seperti list. Perbaiki dengan menggunakan elemen immutable di dalam tuple.",
                "answer_code": "my_tuple = (1, 2, 3, (4, 5))"
            },
            {
                "question": "Mengapa kode berikut tidak memberikan hasil yang diharapkan?",
                "question_code": "my_list = [10, 20, 30]\nmy_list[1] = 25\nprint(my_list)",
                "answer": "Kode ini valid dan akan mengubah elemen kedua menjadi 25. Pastikan kode dijalankan dalam lingkungan Python yang tepat untuk mendapatkan hasil yang diharapkan.",
                "answer_code": "my_list = [10, 20, 30]\nmy_list[1] = 25\nprint(my_list)"
            },
            {
                "question": "Bagaimana cara menghapus kunci tertentu dalam dictionary?",
                "question_code": "data = {'a': 1, 'b': 2}\ndel data['b']",
                "answer": "Gunakan statement `del` untuk menghapus kunci dari dictionary. Contoh: `del data['b']`.",
                "answer_code": "data = {'a': 1, 'b': 2}\ndel data['b']"
            },
            {
                "question": "Apa yang salah dengan kode berikut?",
                "question_code": "set_example = {1, 2, 2, 3, 4, 4}",
                "answer": "Tidak ada kesalahan dalam kode ini, tetapi set tidak akan menyimpan elemen duplikat. Hasilnya akan menjadi `set_example = {1, 2, 3, 4}`.",
                "answer_code": "set_example = {1, 2, 3, 4}"
            },
            {
                "question": "Bagaimana cara menggabungkan dua list dalam Python?",
                "answer": "Gunakan operator `+` untuk menggabungkan dua list. Contoh: `combined_list = list1 + list2`."
            }
        ]
    }
]
