[
    {
        "sumber": "Learn Python Basics",
        "penulis": "Samantha Johnson",
        "tanggal": "2024-11-05",
        "judul": "Menggabungkan List di Python: `extend()` vs Operator `+`",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "extend", "Operator", "Pemula"],
        "konten": "Panduan ini menjelaskan perbedaan antara metode `extend()` dan operator `+` untuk menggabungkan dua list di Python. Pelajari cara kerja kedua metode dan pilih yang terbaik sesuai kebutuhan Anda.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggabungkan list `[5, 10]` dan `[15, 20]` menggunakan `extend()`?",
                "answer": "Untuk menggabungkan list `[5, 10]` dan `[15, 20]` menggunakan `extend()`, Anda harus menambahkan elemen dari list kedua ke dalam list pertama dengan kode `list_one = [5, 10]; list_one.extend([15, 20])`. Setelah operasi ini, `list_one` akan menjadi `[5, 10, 15, 20]`."
            },
            {
                "question": "Apa yang terjadi jika Anda menggunakan operator `+` untuk menggabungkan list `[3, 6]` dan `[9, 12]`?",
                "answer": "Jika Anda menggunakan operator `+` untuk menggabungkan list `[3, 6]` dan `[9, 12]` dengan kode `combined_list = [3, 6] + [9, 12]`, hasilnya adalah list baru `[3, 6, 9, 12]`. Operator `+` tidak mengubah list yang ada tetapi menghasilkan list baru."
            },
            {
                "question": "Bagaimana Anda dapat menggabungkan list `[a, b]` dengan list `[c, d]` menggunakan `extend()` dan tetap menjaga `list_one` tidak berubah?",
                "answer": "Jika Anda ingin menjaga `list_one` tidak berubah tetapi ingin menggabungkan dengan `list_two` menggunakan `extend()`, Anda harus membuat salinan dari `list_one` sebelum melakukan `extend()`. Contoh: `list_one = [a, b]; list_two = [c, d]; list_copy = list_one.copy(); list_copy.extend(list_two)` menghasilkan `list_copy` menjadi `[a, b, c, d]`."
            },
            {
                "question": "Apa yang akan terjadi jika Anda mencoba menggabungkan list `[1, 2]` dengan tipe data non-iterable menggunakan `+`?",
                "question_code": "list_a = [1, 2]\nresult = list_a + 3",
                "answer": "Menggunakan operator `+` untuk menggabungkan list dengan tipe data non-iterable seperti integer akan menghasilkan error `TypeError: can only concatenate list (not 'int') to list`. Pastikan Anda hanya menggabungkan list dengan list.",
                "answer_code": "list_a = [1, 2]\nresult = list_a + [3]"
            },
            {
                "question": "Kenapa menggunakan `extend()` dengan tuple seperti `(7, 8)` pada list `[1, 2]` dapat menimbulkan error?",
                "question_code": "list_b = [1, 2]\nlist_b.extend((7, 8))",
                "answer": "Error terjadi karena `extend()` mengharapkan iterable yang berisi elemen individual, dan tuple harus dikonversi menjadi list sebelum digunakan dengan `extend()`. Gunakan `list()` untuk mengonversi tuple menjadi list.",
                "answer_code": "list_b = [1, 2]\nlist_b.extend(list((7, 8)))"
            },
            {
                "question": "Apa yang menyebabkan error 'TypeError: can only concatenate list (not 'set') to list' saat menggunakan operator `+`?",
                "question_code": "list_c = [4, 5]\ncombined = list_c + {6, 7}",
                "answer": "Error ini terjadi karena operator `+` tidak dapat menggabungkan list dengan set. Set harus dikonversi menjadi list untuk penggabungan. Gunakan `list()` untuk konversi.",
                "answer_code": "list_c = [4, 5]\ncombined = list_c + list({6, 7})"
            },
            {
                "question": "Kenapa Anda tidak dapat menggunakan `extend()` untuk menambahkan dictionary ke list?",
                "question_code": "list_d = [1, 2]\nlist_d.extend({'key': 'value'})",
                "answer": "Error terjadi karena `extend()` hanya dapat menerima iterable seperti list. Dictionary tidak dapat di-extend langsung ke dalam list tanpa dikonversi. Gunakan metode yang sesuai atau konversikan dictionary menjadi iterable seperti list dari nilai atau item.",
                "answer_code": "list_d = [1, 2]\nlist_d.extend([{'key': 'value'}])"
            },
            {
                "question": "Bagaimana menggabungkan list `[10, 20]` dengan list `[30, 40]` menggunakan `+`, jika Anda tidak ingin mengubah list asli?",
                "answer": "Gunakan operator `+` untuk menggabungkan list tanpa mengubah list yang asli dengan kode berikut: `combined_list = [10, 20] + [30, 40]`. Ini menghasilkan list baru `[10, 20, 30, 40]` tanpa mengubah list asli."
            }
        ]
    },
    {
        "sumber": "Python Basics Explained",
        "penulis": "Michael Turner",
        "tanggal": "2024-11-06",
        "judul": "Menggabungkan Dua List: `extend()` dan `+` Operator",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "extend", "Operator", "Pemula"],
        "konten": "Artikel ini menguraikan metode `extend()` dan operator `+` untuk menggabungkan dua list di Python. Pelajari cara masing-masing metode bekerja dan situasi terbaik untuk menggunakannya.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggabungkan list `[1, 2, 3]` dan `[4, 5, 6]` menggunakan `extend()`?",
                "answer": "Untuk menggabungkan list `[1, 2, 3]` dan `[4, 5, 6]` menggunakan `extend()`, lakukan `list_one = [1, 2, 3]; list_one.extend([4, 5, 6])`. List `list_one` akan menjadi `[1, 2, 3, 4, 5, 6]` setelah operasi ini."
            },
            {
                "question": "Apa hasil dari menggabungkan list `[10, 20]` dengan `[30, 40]` menggunakan operator `+`?",
                "answer": "Hasil penggabungan list `[10, 20]` dan `[30, 40]` menggunakan operator `+` dengan kode `result = [10, 20] + [30, 40]` adalah list baru `[10, 20, 30, 40]`. Operator `+` menghasilkan list baru yang menggabungkan kedua list."
            },
            {
                "question": "Kenapa Anda mendapatkan error 'TypeError: can only concatenate list (not 'float') to list' saat menggabungkan list `[1, 2]` dengan float `3.5` menggunakan operator `+`?",
                "question_code": "list_e = [1, 2]\nresult = list_e + 3.5",
                "answer": "Error ini terjadi karena operator `+` hanya bisa digunakan untuk menggabungkan list dengan list. Anda harus memastikan semua elemen yang akan digabungkan adalah list.",
                "answer_code": "list_e = [1, 2]\nresult = list_e + [3.5]"
            },
            {
                "question": "Kenapa `extend()` gagal saat digunakan dengan string seperti `'text'` pada list `[1, 2]`?",
                "question_code": "list_f = [1, 2]\nlist_f.extend('text')",
                "answer": "Error ini karena `extend()` mengharapkan iterable yang menghasilkan elemen individual. String `'text'` diperlakukan sebagai iterable karakter, jadi jika Anda ingin menambahkan string sebagai satu elemen, gunakan `append()`.",
                "answer_code": "list_f = [1, 2]\nlist_f.extend(['text'])"
            },
            {
                "question": "Apa yang menyebabkan error 'TypeError: can only concatenate list (not 'tuple') to list' ketika menggunakan operator `+` untuk menggabungkan list `[1, 2]` dan tuple `(3, 4)`?",
                "question_code": "list_g = [1, 2]\nresult = list_g + (3, 4)",
                "answer": "Error ini terjadi karena operator `+` hanya bisa digunakan untuk menggabungkan list dengan list. Untuk menggabungkan list dengan tuple, Anda harus mengonversi tuple menjadi list terlebih dahulu.",
                "answer_code": "list_g = [1, 2]\nresult = list_g + list((3, 4))"
            },
            {
                "question": "Bagaimana cara menggabungkan list `[8, 9]` dengan list `[10, 11]` menggunakan `extend()` tanpa mengubah list asli?",
                "answer": "Untuk menggabungkan list tanpa mengubah list asli, buat salinan dari list yang ingin Anda extend. Contoh: `list_x = [8, 9]; list_y = [10, 11]; list_copy = list_x.copy(); list_copy.extend(list_y)` menghasilkan `list_copy` menjadi `[8, 9, 10, 11]`."
            },
            {
                "question": "Apa yang harus dilakukan jika Anda ingin menggabungkan list `[1, 2]` dengan string `'hello'` menggunakan `+`?",
                "question_code": "list_h = [1, 2]\nresult = list_h + 'hello'",
                "answer": "Error terjadi karena operator `+` tidak dapat menggabungkan list dengan string. Anda harus mengonversi string menjadi list atau menggunakan metode lain untuk mencapai hasil yang diinginkan.",
                "answer_code": "list_h = [1, 2]\nresult = list_h + list('hello')"
            }
        ]
    }
]
