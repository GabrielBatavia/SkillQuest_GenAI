[
    {
        "sumber": "Python Basics Guide",
        "penulis": "Laura Thompson",
        "tanggal": "2024-12-15",
        "judul": "Mengurutkan Elemen dalam List dengan Metode sort()",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "Sorting", "List", "Pemula"],
        "konten": "Artikel ini menjelaskan cara menggunakan metode `sort()` untuk mengurutkan elemen dalam list di Python. Metode `sort()` mengurutkan list secara in-place dan tidak mengembalikan list baru.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mengurutkan list `[4, 2, 9, 1]` dalam urutan menaik menggunakan metode `sort()`?",
                "answer": "Gunakan kode berikut: `my_list = [4, 2, 9, 1]; my_list.sort()`. Setelah eksekusi, `my_list` akan menjadi `[1, 2, 4, 9]`."
            },
            {
                "question": "Apa yang dilakukan metode `sort()` jika Anda ingin mengurutkan list secara menurun?",
                "answer": "Gunakan parameter `reverse=True`. Contoh: `my_list = [4, 2, 9, 1]; my_list.sort(reverse=True)`. Ini akan menghasilkan `[9, 4, 2, 1]`."
            },
            {
                "question": "Apa output dari kode berikut: `numbers = [3, 1, 4, 1, 5]; numbers.sort(); print(numbers)`?",
                "answer": "Outputnya adalah `[1, 1, 3, 4, 5]`, karena list diurutkan dalam urutan menaik."
            },
            {
                "question": "Bagaimana jika Anda ingin mengurutkan list string `['banana', 'apple', 'cherry']` secara alfabetis?",
                "answer": "Gunakan kode berikut: `words = ['banana', 'apple', 'cherry']; words.sort()`. List akan menjadi `['apple', 'banana', 'cherry']`."
            },
            {
                "question": "Kenapa terjadi error 'AttributeError: 'tuple' object has no attribute 'sort''?",
                "question_code": "my_tuple = (3, 1, 4, 1, 5); my_tuple.sort()",
                "answer": "Error ini terjadi karena metode `sort()` tidak dapat digunakan pada tuple. Tuple adalah tipe data yang tidak dapat diubah. Gunakan list jika ingin mengurutkan elemen.",
                "answer_code": "my_list = [3, 1, 4, 1, 5]; my_list.sort()"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: '<' not supported between instances of 'str' and 'int'?', saya tidak paham?",
                "question_code": "mixed_list = [1, 'banana', 3]; mixed_list.sort()",
                "answer": "Error ini terjadi karena Python tidak dapat membandingkan tipe data yang berbeda, seperti integer dan string. Pastikan semua elemen dalam list memiliki tipe data yang sama.",
                "answer_code": "numeric_list = [1, 2, 3]; numeric_list.sort()"
            },
            {
                "question": "Bagaimana cara mengurutkan list objek berdasarkan atribut tertentu menggunakan metode `sort()`?",
                "answer": "Gunakan parameter `key` pada metode `sort()`. Contoh: `objects.sort(key=lambda x: x.attribute)`. Ini akan mengurutkan objek berdasarkan nilai dari atribut yang ditentukan."
            }
        ]
    },
    {
        "sumber": "Python Programming for Beginners",
        "penulis": "James Clark",
        "tanggal": "2024-12-16",
        "judul": "Cara Mengurutkan List dengan Metode sort() di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "Sorting", "List", "Pemula"],
        "konten": "Panduan ini membahas penggunaan metode `sort()` untuk mengurutkan list di Python. Metode ini sangat berguna untuk mengatur data dalam urutan tertentu dan sangat efisien.",
        "pertanyaan": [
            {
                "question": "Apa output dari kode berikut: `my_list = [7, 3, 5, 2]; my_list.sort(); print(my_list)`?",
                "answer": "Outputnya adalah `[2, 3, 5, 7]`, karena `sort()` mengurutkan list dalam urutan menaik."
            },
            {
                "question": "Bagaimana cara mengurutkan list secara alfabetis jika list tersebut berisi string seperti `['dog', 'cat', 'bird']`?",
                "answer": "Gunakan kode berikut: `animals = ['dog', 'cat', 'bird']; animals.sort()`. List akan menjadi `['bird', 'cat', 'dog']`."
            },
            {
                "question": "Bagaimana mengurutkan list angka dari yang terbesar ke yang terkecil?",
                "answer": "Gunakan kode berikut: `numbers = [10, 7, 3, 9]; numbers.sort(reverse=True)`. Ini akan menghasilkan `[10, 9, 7, 3]`."
            },
            {
                "question": "Dapatkah Anda menggunakan metode `sort()` pada list yang berisi objek kustom?",
                "answer": "Ya, Anda dapat menggunakan metode `sort()` pada list yang berisi objek kustom dengan menentukan fungsi `key` yang akan digunakan untuk menentukan urutan. Misalnya: `my_objects.sort(key=lambda x: x.attribute)`."
            },
            {
                "question": "Kenapa terjadi error 'ValueError: too many values to unpack', saya tidak paham?",
                "question_code": "my_list = [1, 2, 3]; my_list.sort(key=lambda x, y: x - y)",
                "answer": "Error ini terjadi karena lambda function untuk `key` harus menerima satu argumen, bukan dua. Pastikan `key` hanya menerima satu argumen yang mewakili elemen list.",
                "answer_code": "my_list = [1, 2, 3]; my_list.sort(key=lambda x: x)"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: sort() argument must be a function', saya tidak paham?",
                "question_code": "my_list = [5, 3, 8]; my_list.sort(key='len')",
                "answer": "Error ini terjadi karena parameter `key` harus berupa fungsi atau lambda yang menerima satu argumen. Pastikan `key` adalah fungsi yang valid, seperti `lambda x: x`.",
                "answer_code": "my_list = [5, 3, 8]; my_list.sort(key=lambda x: x)"
            },
            {
                "question": "Bagaimana cara mengurutkan list list yang berisi tuple berdasarkan elemen pertama dari setiap tuple?",
                "answer": "Gunakan parameter `key` untuk menentukan elemen tuple yang akan digunakan sebagai dasar pengurutan. Contoh: `list_of_tuples.sort(key=lambda x: x[0])`. Ini akan mengurutkan berdasarkan elemen pertama dari setiap tuple."
            }
        ]
    }
]
