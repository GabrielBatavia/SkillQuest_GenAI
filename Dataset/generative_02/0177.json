[
    {
        "sumber": "python-docs.org",
        "penulis": "Emily Carter",
        "tanggal": "2024-07-25",
        "judul": "Memahami Konsep Aritmatika Menengah di Python",
        "tingkat_kesulitan": "menengah",
        "tag": ["python", "aritmatika", "menengah", "konsep"],
        "konten": "Artikel ini menjelaskan konsep-konsep aritmatika tingkat menengah di Python, seperti operasi kombinasi, operator eksponensial, dan presisi floating-point dengan contoh dan penjelasan.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menghitung pangkat suatu angka di Python?",
                "question_code": "result = 3 ^ 4",
                "answer": "Di Python, untuk menghitung pangkat atau eksponen, gunakan operator `**`, bukan `^`. Jadi, `3 ** 4` menghasilkan `81`.",
                "answer_code": "result = 3 ** 4\n# Hasilnya adalah 81"
            },
            {
                "question": "Apa yang perlu diperhatikan ketika mengerjakan perhitungan dengan angka desimal di Python?",
                "question": "Python menggunakan floating-point untuk angka desimal yang mungkin menghasilkan ketidakakuratan kecil. Untuk presisi yang lebih baik, gunakan modul `decimal`.",
                "answer": "Modul `decimal` menawarkan presisi lebih tinggi dalam perhitungan angka desimal, mengurangi kesalahan representasi yang terjadi pada floating-point."
            },
            {
                "question": "Bagaimana cara menghitung akar kuadrat dari sebuah angka dan apa hasilnya dari `4 ** (1/2)`?",
                "question_code": "result = 4 ** (1/3)",
                "answer": "Hasil dari `4 ** (1/2)` adalah `2.0`, yang merupakan akar kuadrat dari `4`. `4 ** (1/3)` memberikan akar kubik dari `4`.",
                "answer_code": "result = 4 ** (1/2)\n# Hasilnya adalah 2.0"
            },
            {
                "question": "Bagaimana cara melakukan pembagian bulat dan pembagian biasa di Python?",
                "question_code": "result1 = 5 / 2\nresult2 = 5 % 2",
                "answer": "Untuk pembagian biasa gunakan `/`, yang menghasilkan float, sedangkan `%` digunakan untuk mendapatkan sisa dari pembagian. Pembagian bulat menggunakan `//`.",
                "answer_code": "result1 = 5 / 2\nresult2 = 5 // 2\n# Hasil dari result1 adalah 2.5\n# Hasil dari result2 adalah 2"
            },
            {
                "question": "Bagaimana cara mengetahui apakah suatu angka adalah genap atau ganjil di Python?",
                "question_code": "is_even = number % 2",
                "answer": "Gunakan operator `%` untuk menentukan apakah angka genap atau ganjil. Jika `number % 2 == 0`, maka angka tersebut genap. Untuk hasilnya, `is_even` harus dibandingkan dengan `0`.",
                "answer_code": "number = 9\nis_even = (number % 2 == 0)\n# Hasil dari is_even adalah False"
            },
            {
                "question": "Apa yang akan terjadi jika Anda menulis ekspresi `5 + 3 * 2` dan bagaimana urutan operasi berpengaruh?",
                "question_code": "result = 5 + 3 * 2",
                "answer": "Ekspresi ini mengikuti urutan operasi di mana perkalian dilakukan sebelum penjumlahan. Jadi, `5 + 6` menghasilkan `11`.",
                "answer_code": "result = 5 + 3 * 2\n# Hasilnya adalah 11"
            },
            {
                "question": "Bagaimana perbedaan antara `**` dan `pow()` dalam konteks eksponensial?",
                "question_code": "result1 = pow(3, 2)\nresult2 = 3 ** 2",
                "answer": "Keduanya menghitung eksponen, tetapi `pow()` juga bisa menerima parameter ketiga untuk modulus, sementara `**` hanya untuk eksponen.",
                "answer_code": "result1 = pow(3, 2)\nresult2 = 3 ** 2\n# Keduanya menghasilkan 9"
            },
            {
                "question": "Bagaimana cara menghindari kesalahan dalam perhitungan floating-point?",
                "answer": "Untuk menghindari kesalahan presisi dalam floating-point, gunakan modul `decimal` yang memberikan akurasi lebih tinggi dalam perhitungan angka desimal."
            }
        ]
    },
    {
        "sumber": "realpython.com",
        "penulis": "Sarah Johnson",
        "tanggal": "2024-07-25",
        "judul": "Eksplorasi Operator Aritmatika Menengah di Python",
        "tingkat_kesulitan": "menengah",
        "tag": ["python", "aritmatika", "menengah", "konsep"],
        "konten": "Artikel ini menguraikan penggunaan operator aritmatika tingkat menengah dalam Python dengan fokus pada teknik dan praktik yang lebih kompleks.",
        "pertanyaan": [
            {
                "question": "Apa hasil dari `(3 + 2) ** 2 / 5`?",
                "question_code": "result = (3 + 2) * 2 / 5",
                "answer": "Hasil dari `(3 + 2) ** 2 / 5` adalah `5.0`. Perhitungan dilakukan dengan urutan operasi yang benar.",
                "answer_code": "result = (3 + 2) ** 2 / 5\n# Hasilnya adalah 5.0"
            },
            {
                "question": "Bagaimana cara membagi bilangan bulat dan mendapatkan hasilnya tanpa desimal?",
                "question_code": "result = 9 / 2",
                "answer": "Gunakan operator `//` untuk pembagian bulat, yang memberikan hasil integer. Contoh: `9 // 2` menghasilkan `4`.",
                "answer_code": "result = 9 // 2\n# Hasilnya adalah 4"
            },
            {
                "question": "Mengapa operasi floating-point bisa mengalami ketidakakuratan dan bagaimana mengatasinya?",
                "answer": "Ketidakakuratan dalam floating-point disebabkan oleh representasi bilangan desimal yang terbatas. Gunakan modul `decimal` untuk hasil yang lebih akurat dalam perhitungan floating-point."
            },
            {
                "question": "Apa hasil dari `-3 ** 2` dan bagaimana cara kerja tanda negatif dalam ekspresi?",
                "question_code": "result = -3 ** 2",
                "answer": "Hasil dari `-3 ** 2` adalah `-9`. Operator eksponensial dieksekusi terlebih dahulu, kemudian tanda negatif diterapkan.",
                "answer_code": "result = -3 ** 2\n# Hasilnya adalah -9"
            },
            {
                "question": "Bagaimana cara menggunakan operator `%` untuk mendapatkan sisa dari pembagian dalam Python?",
                "question_code": "result = 17 / 4",
                "answer": "Untuk mendapatkan sisa dari pembagian, gunakan operator `%`. Misalnya, `17 % 4` menghasilkan `1`.",
                "answer_code": "result = 17 % 4\n# Hasilnya adalah 1"
            },
            {
                "question": "Apa hasil dari `3 * 2 ** 3 - 4` dan bagaimana urutan operasinya?",
                "question_code": "result = 3 * 2 ** 3 / 4",
                "answer": "Hasil dari `3 * 2 ** 3 - 4` adalah `20`. Urutan operasi: eksponensial terlebih dahulu, kemudian perkalian, dan terakhir pengurangan.",
                "answer_code": "result = 3 * 2 ** 3 - 4\n# Hasilnya adalah 20"
            },
            {
                "question": "Apa kegunaan fungsi `math.fsum()` dan bagaimana cara menggunakannya?",
                "answer": "Fungsi `math.fsum()` digunakan untuk penjumlahan floating-point dengan akurasi tinggi, mengurangi kesalahan presisi terutama saat menjumlahkan banyak angka floating-point."
            }
        ]
    }
]
