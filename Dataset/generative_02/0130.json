[
    {
        "sumber": "belajarpemrograman.com",
        "penulis": "Ahmad Fajar",
        "tanggal": "2023-01-18",
        "judul": "Penggunaan Kondisional di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "kondisional", "if else"],
        "konten": "Artikel ini menjelaskan cara menggunakan pernyataan kondisional di Python, termasuk if, elif, dan else untuk membuat keputusan dalam program.",
        "pertanyaan": [
            {
                "question": "Gimana cara pakai if di Python?",
                "answer": "Pernyataan if digunakan untuk menjalankan blok kode tertentu jika kondisi yang diberikan benar. Contohnya: if x > 0: print('x positif')."
            },
            {
                "question": "Gimana pakai else di Python?",
                "answer": "Pernyataan else digunakan untuk menjalankan blok kode jika kondisi dalam pernyataan if salah. Contohnya: else: print('x tidak positif')."
            },
            {
                "question": "Bisa jelasin cara pakai elif di Python?",
                "question_code": "nilai = -1\nif nilai >= 0:\nprint('Nilai positif atau nol')\nelif nilai < 0\nprint('Nilai negatif')",
                "answer": "Pernyataan elif digunakan untuk memeriksa kondisi lain jika kondisi dalam pernyataan if sebelumnya salah. Contohnya: elif nilai < 0: print('Nilai negatif').",
                "answer_code": "nilai = -1\nif nilai >= 0:\n    print('Nilai positif atau nol')\nelif nilai < 0:\n    print('Nilai negatif')"
            },
            {
                "question": "Bagaimana pakai operator logika dalam if?",
                "question_code": "umur = 20\nstatus = 'mahasiswa'\nif umur > 18 and status = 'mahasiswa'\nprint('Dewasa dan mahasiswa')",
                "answer": "Anda bisa menggunakan operator logika seperti and, or, dan not dalam pernyataan if. Contohnya: if umur > 18 and status == 'mahasiswa': print('Dewasa dan mahasiswa').",
                "answer_code": "umur = 20\nstatus = 'mahasiswa'\nif umur > 18 and status == 'mahasiswa':\n    print('Dewasa dan mahasiswa')"
            },
            {
                "question": "Bagaimana cara pakai if di dalam if?",
                "question_code": "nilai = 85\nif nilai > 60:\nif nilai >= 80\nprint('Nilai bagus')",
                "answer": "Anda bisa menggunakan pernyataan if bersarang dengan menempatkan satu pernyataan if di dalam pernyataan if lainnya. Contohnya: if nilai > 60: if nilai >= 80: print('Nilai bagus').",
                "answer_code": "nilai = 85\nif nilai > 60:\n    if nilai >= 80:\n        print('Nilai bagus')"
            },
            {
                "question": "Gimana cek dua nilai sama di Python?",
                "question_code": "x = 10\ny = 20\nif x == y\nprint('x dan y sama')",
                "answer": "Anda bisa memeriksa kesamaan dua nilai dengan menggunakan operator ==. Contohnya: if x == y: print('x dan y sama').",
                "answer_code": "x = 10\ny = 20\nif x == y:\n    print('x dan y sama')"
            },
            {
                "question": "Gimana cek dua nilai tidak sama di Python?",
                "question_code": "a = 10\nb = 10\nif a <> b\nprint('a tidak sama dengan b')",
                "answer": "Anda bisa memeriksa ketidaksamaan dua nilai dengan menggunakan operator !=. Contohnya: if a != b: print('a tidak sama dengan b').",
                "answer_code": "a = 10\nb = 10\nif a != b:\n    print('a tidak sama dengan b')"
            },
            {
                "question": "Gimana tau satu nilai lebih besar dari lainnya di Python?",
                "question_code": "a = 8\nb = 12\nif a > b\nprint('a lebih besar dari b')",
                "answer": "Anda bisa memeriksa apakah satu nilai lebih besar dari nilai lainnya dengan menggunakan operator >. Contohnya: if a > b: print('a lebih besar dari b').",
                "answer_code": "a = 8\nb = 12\nif a > b:\n    print('a lebih besar dari b')"
            },
            {
                "question": "Gimana pakai else setelah for loop?",
                "question_code": "for i in range(3)\nprint(i)\nelse\nprint('Loop selesai')",
                "answer": "Anda bisa menggunakan pernyataan else dalam loop for untuk menjalankan blok kode jika loop selesai tanpa intervensi break. Contohnya: else: print('Loop selesai').",
                "answer_code": "for i in range(3):\n    print(i)\nelse:\n    print('Loop selesai')"
            }
        ]
    },
    {
        "sumber": "pythonpemula.com",
        "penulis": "Budi Setiawan",
        "tanggal": "2024-04-12",
        "judul": "Penggunaan Fungsi dan Modul di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "fungsi", "modul"],
        "konten": "Artikel ini menjelaskan cara mendefinisikan fungsi di Python, cara memanggil fungsi, serta cara mengimpor dan menggunakan modul.",
        "pertanyaan": [
            {
                "question": "Gimana caranya bikin fungsi di Python?",
                "answer": "Anda bisa mendefinisikan fungsi dengan menggunakan kata kunci def diikuti dengan nama fungsi dan tanda kurung. Contohnya: def my_function():"
            },
            {
                "question": "Kalau udah bikin fungsi, gimana cara pakenya?",
                "answer": "Anda bisa memanggil fungsi dengan menulis nama fungsi diikuti dengan tanda kurung. Contohnya: my_function()."
            },
            {
                "question": "Gimana cara import modul di Python?",
                "question_code": "import maths",
                "answer": "Anda bisa mengimpor modul dengan menggunakan kata kunci import diikuti dengan nama modul. Contohnya: import math.",
                "answer_code": "import math"
            },
            {
                "question": "Gimana pakai fungsi dari modul yang sudah diimpor?",
                "question_code": "import math\nhasil = math.power(4, 2)",
                "answer": "Anda bisa menggunakan fungsi dalam modul yang telah diimpor dengan menulis nama modul diikuti dengan tanda titik dan nama fungsi. Contohnya: math.pow(4, 2).",
                "answer_code": "import math\nresult = math.pow(4, 2)"
            },
            {
                "question": "Gimana bikin fungsi dengan parameter di Python?",
                "question_code": "def tambah(x, y)\nreturn x + y",
                "answer": "Anda bisa mendefinisikan fungsi dengan parameter dengan menambahkan parameter di dalam tanda kurung setelah nama fungsi. Contohnya: def tambah(x, y):",
                "answer_code": "def tambah(x, y):\n    return x + y"
            },
            {
                "question": "Gimana caranya fungsi ngembaliin nilai di Python?",
                "question_code": "def get_nilai()\nreturn 42",
                "answer": "Anda bisa mengembalikan nilai dari fungsi dengan menggunakan kata kunci return. Contohnya: return 42.",
                "answer_code": "def get_nilai():\n    return 42"
            },
            {
                "question": "Gimana cara import modul pakai alias di Python?",
                "question_code": "import pandas like pd",
                "answer": "Anda bisa mengimpor modul dengan alias dengan menggunakan kata kunci as setelah nama modul. Contohnya: import pandas as pd.",
                "answer_code": "import pandas as pd"
            },
            {
                "question": "Gimana cara import fungsi tertentu dari modul di Python?",
                "question_code": "from math import squareroot",
                "answer": "Anda bisa mengimpor fungsi tertentu dari modul dengan menggunakan sintaks from modul import fungsi. Contohnya: from math import sqrt.",
                "answer_code": "from math import sqrt"
            },
            {
                "question": "Gimana caranya bikin fungsi dengan parameter default di Python?",
                "question_code": "def kali(a, b=7)\nreturn a * b",
                "answer": "Anda bisa mendefinisikan fungsi dengan parameter default dengan memberikan nilai default pada parameter. Contohnya: def kali(a, b=7):",
                "answer_code": "def kali(a, b=7):\n    return a * b"
            }
        ]
    }
]
