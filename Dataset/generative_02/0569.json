[
    {
        "sumber": "Introduction to Python Programming",
        "penulis": "Samantha Lee",
        "tanggal": "2024-07-26",
        "judul": "Kesalahan Umum dalam Menyalin List di Python dan Cara Memperbaikinya",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "Copy Method"],
        "konten": "Panduan ini membahas berbagai kesalahan umum saat menyalin list di Python dan memberikan solusi yang benar untuk setiap masalah.",
        "pertanyaan": [
            {
                "question": "Apa yang salah dengan kode ini saat mencoba menyalin list dan mengubah elemen baru di salinan?",
                "answer": "Kode ini membuat salinan dangkal dari list yang menyebabkan perubahan pada salinan juga mempengaruhi list asli. Gunakan metode `copy()` untuk membuat salinan yang independen.",
                "question_code": "items = [10, 20, 30]\nitems_copy = items\nitems_copy[1] = 99\nprint('Items:', items)\nprint('Items Copy:', items_copy)",
                "answer_code": "items = [10, 20, 30]\nitems_copy = items.copy()\nitems_copy[1] = 99\nprint('Items:', items)\nprint('Items Copy:', items_copy)"
            },
            {
                "question": "Bagaimana kode berikut dapat diperbaiki untuk menyalin list berisi objek string dan memastikan bahwa list asli tidak terpengaruh?",
                "answer": "Kode ini menyalin referensi dari list, bukan salinan independen. Gunakan `copy()` untuk membuat salinan terpisah.",
                "question_code": "cities = ['New York', 'Los Angeles', 'Chicago']\ncities_copy = cities.copy()\ncities_copy.append('Houston')\nprint('Cities:', cities)\nprint('Cities Copy:', cities_copy)",
                "answer_code": "cities = ['New York', 'Los Angeles', 'Chicago']\ncities_copy = cities.copy()\ncities_copy.append('Houston')\nprint('Cities:', cities)\nprint('Cities Copy:', cities_copy)"
            },
            {
                "question": "Apa kesalahan dalam kode ini ketika menyalin list yang berisi dictionary dan mengubah elemen dalam salinan?",
                "answer": "Kode ini hanya membuat salinan dangkal dari list yang berisi dictionary. Untuk memastikan bahwa perubahan tidak mempengaruhi list asli, gunakan `deepcopy()`.",
                "question_code": "import copy\ndata = [{'name': 'Alice'}, {'name': 'Bob'}]\ndata_copy = copy.copy(data)\ndata_copy[0]['name'] = 'Carol'\nprint('Data:', data)\nprint('Data Copy:', data_copy)",
                "answer_code": "import copy\n data = [{'name': 'Alice'}, {'name': 'Bob'}]\ndata_copy = copy.deepcopy(data)\ndata_copy[0]['name'] = 'Carol'\nprint('Data:', data)\nprint('Data Copy:', data_copy)"
            },
            {
                "question": "Bagaimana cara memperbaiki kode ini agar menyalin list yang berisi list lain di dalamnya tanpa mempengaruhi list asli?",
                "answer": "Kode ini hanya menyalin list secara dangkal. Gunakan `deepcopy()` untuk membuat salinan mendalam yang benar.",
                "question_code": "import copy\nnested = [[1, 2], [3, 4]]\nshallow_copy = copy.copy(nested)\nshallow_copy[1].append(5)\nprint('Nested:', nested)\nprint('Shallow Copy:', shallow_copy)",
                "answer_code": "import copy\nnested = [[1, 2], [3, 4]]\ndeep_copy = copy.deepcopy(nested)\ndeep_copy[1].append(5)\nprint('Nested:', nested)\nprint('Deep Copy:', deep_copy)"
            }
        ]
    },
    {
        "sumber": "Python Essentials",
        "penulis": "David Smith",
        "tanggal": "2024-07-26",
        "judul": "Memahami Kesalahan dalam Menyalin List di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "Lists", "Copy"],
        "konten": "Artikel ini menjelaskan kesalahan umum saat menyalin list di Python dan memberikan solusi yang benar.",
        "pertanyaan": [
            {
                "question": "Apa kesalahan dalam kode ini ketika mencoba membuat salinan dari list dan memodifikasi salinan?",
                "answer": "Kode ini membuat referensi ke list asli, bukan salinan terpisah. Gunakan `copy()` untuk memastikan salinan independen.",
                "question_code": "numbers = [1, 2, 3]\nnumbers_copy = numbers\nnumbers_copy[0] = 99\nprint('Numbers:', numbers)\nprint('Numbers Copy:', numbers_copy)",
                "answer_code": "numbers = [1, 2, 3]\nnumbers_copy = numbers.copy()\nnumbers_copy[0] = 99\nprint('Numbers:', numbers)\nprint('Numbers Copy:', numbers_copy)"
            },
            {
                "question": "Bagaimana cara memperbaiki kode ini agar salinan list yang berisi integer tidak mempengaruhi list asli?",
                "answer": "Kode ini menyalin list secara dangkal. Gunakan `copy()` untuk membuat salinan yang benar-benar terpisah.",
                "question_code": "values = [5, 10, 15]\nvalues_copy = values\nvalues_copy[1] = 100\nprint('Values:', values)\nprint('Values Copy:', values_copy)",
                "answer_code": "values = [5, 10, 15]\nvalues_copy = values.copy()\nvalues_copy[1] = 100\nprint('Values:', values)\nprint('Values Copy:', values_copy)"
            },
            {
                "question": "Apa yang salah dengan kode ini ketika menyalin list yang berisi tuples dan mengubah salah satu tuple dalam salinan?",
                "answer": "Kode ini hanya menyalin list secara dangkal. Gunakan `copy()` untuk membuat salinan yang terpisah.",
                "question_code": "tuples = [(1, 2), (3, 4)]\ntuples_copy = tuples.copy()\ntuples_copy[0] = (99, 100)\nprint('Tuples:', tuples)\nprint('Tuples Copy:', tuples_copy)",
                "answer_code": "tuples = [(1, 2), (3, 4)]\ntuples_copy = tuples.copy()\ntuples_copy[0] = (99, 100)\nprint('Tuples:', tuples)\nprint('Tuples Copy:', tuples_copy)"
            },
            {
                "question": "Bagaimana kode berikut dapat diperbaiki untuk menyalin list yang berisi list di dalamnya tanpa mempengaruhi list asli?",
                "answer": "Kode ini hanya membuat salinan dangkal dari list yang berisi list lain. Gunakan `deepcopy()` untuk menyalin list secara mendalam.",
                "question_code": "import copy\nlist_of_lists = [[1, 2], [3, 4]]\nshallow_copy = copy.copy(list_of_lists)\nshallow_copy[0].remove(1)\nprint('List of Lists:', list_of_lists)\nprint('Shallow Copy:', shallow_copy)",
                "answer_code": "import copy\nlist_of_lists = [[1, 2], [3, 4]]\ndeep_copy = copy.deepcopy(list_of_lists)\ndeep_copy[0].remove(1)\nprint('List of Lists:', list_of_lists)\nprint('Deep Copy:', deep_copy)"
            }
        ]
    }
]
