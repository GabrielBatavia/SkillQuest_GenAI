[
    {
        "sumber": "pythonmudah.com",
        "penulis": "Siti Nurhaliza",
        "tanggal": "2024-03-15",
        "judul": "Penggunaan Operator Perbandingan di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "operator perbandingan", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan operator perbandingan di Python seperti `==`, `!=`, `>`, `<`, `>=`, dan `<=`.",
        "pertanyaan": [
            {
                "question": "Apa itu operator perbandingan di Python?",
                "answer": "Operator perbandingan digunakan untuk membandingkan dua nilai dan mengembalikan nilai boolean `True` atau `False`."
            },
            {
                "question": "Bagaimana cara menggunakan operator `==` di Python?",
                "question_code": "a = 5\nb = 5\nresult = (a == b)",
                "answer": "Operator `==` digunakan untuk memeriksa apakah dua nilai sama. Contohnya: `a == b`.",
                "answer_code": "a = 5\nb = 5\nresult = (a == b)"
            },
            {
                "question": "Bagaimana cara menggunakan operator `!=` di Python?",
                "question_code": "a = 5\nb = 3\nresult = (a != b)",
                "answer": "Operator `!=` digunakan untuk memeriksa apakah dua nilai tidak sama. Contohnya: `a != b`.",
                "answer_code": "a = 5\nb = 3\nresult = (a != b)"
            },
            {
                "question": "Bagaimana cara menggunakan operator `>` di Python?",
                "question_code": "a = 5\nb = 3\nresult = (a > b)",
                "answer": "Operator `>` digunakan untuk memeriksa apakah nilai di sebelah kiri lebih besar dari nilai di sebelah kanan. Contohnya: `a > b`.",
                "answer_code": "a = 5\nb = 3\nresult = (a > b)"
            },
            {
                "question": "Bagaimana cara menggunakan operator `<` di Python?",
                "question_code": "a = 5\nb = 7\nresult = (a < b)",
                "answer": "Operator `<` digunakan untuk memeriksa apakah nilai di sebelah kiri lebih kecil dari nilai di sebelah kanan. Contohnya: `a < b`.",
                "answer_code": "a = 5\nb = 7\nresult = (a < b)"
            },
            {
                "question": "Bagaimana cara menggunakan operator `>=` di Python?",
                "question_code": "a = 5\nb = 5\nresult = (a >= b)",
                "answer": "Operator `>=` digunakan untuk memeriksa apakah nilai di sebelah kiri lebih besar atau sama dengan nilai di sebelah kanan. Contohnya: `a >= b`.",
                "answer_code": "a = 5\nb = 5\nresult = (a >= b)"
            },
            {
                "question": "Bagaimana cara menggunakan operator `<=` di Python?",
                "question_code": "a = 5\nb = 7\nresult = (a <= b)",
                "answer": "Operator `<=` digunakan untuk memeriksa apakah nilai di sebelah kiri lebih kecil atau sama dengan nilai di sebelah kanan. Contohnya: `a <= b`.",
                "answer_code": "a = 5\nb = 7\nresult = (a <= b)"
            },
            {
                "question": "Bagaimana cara menggunakan operator `is` di Python?",
                "question_code": "a = [1, 2, 3]\nb = a\nresult = (a is b)",
                "answer": "Operator `is` digunakan untuk memeriksa apakah dua variabel merujuk ke objek yang sama. Contohnya: `a is b`.",
                "answer_code": "a = [1, 2, 3]\nb = a\nresult = (a is b)"
            },
            {
                "question": "Bagaimana cara menggunakan operator `is not` di Python?",
                "question_code": "a = [1, 2, 3]\nb = [1, 2, 3]\nresult = (a is not b)",
                "answer": "Operator `is not` digunakan untuk memeriksa apakah dua variabel tidak merujuk ke objek yang sama. Contohnya: `a is not b`.",
                "answer_code": "a = [1, 2, 3]\nb = [1, 2, 3]\nresult = (a is not b)"
            }
        ]
    },
    {
        "sumber": "panduanbelajarpython.com",
        "penulis": "Ali Mustofa",
        "tanggal": "2024-05-10",
        "judul": "Penggunaan List Comprehension di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "list comprehension", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan list comprehension di Python untuk membuat list dengan cara yang lebih ringkas dan efisien.",
        "pertanyaan": [
            {
                "question": "Apa itu list comprehension di Python?",
                "answer": "List comprehension adalah cara singkat untuk membuat list baru dari iterable yang ada menggunakan satu baris kode."
            },
            {
                "question": "Bagaimana cara membuat list comprehension sederhana di Python?",
                "question_code": "[x for x in range(5)]",
                "answer": "Anda bisa membuat list comprehension sederhana dengan sintaks `[expression for item in iterable]`. Contohnya: `[x for x in range(5)]`.",
                "answer_code": "[x for x in range(5)]"
            },
            {
                "question": "Bagaimana cara menambahkan kondisi ke dalam list comprehension di Python?",
                "question_code": "[x for x in range(10) if x % 2 == 0]",
                "answer": "Anda bisa menambahkan kondisi ke dalam list comprehension dengan sintaks `[expression for item in iterable if condition]`. Contohnya: `[x for x in range(10) if x % 2 == 0]`.",
                "answer_code": "[x for x in range(10) if x % 2 == 0]"
            },
            {
                "question": "Bagaimana cara membuat list comprehension dengan fungsi di Python?",
                "question_code": "[x**2 for x in range(10)]",
                "answer": "Anda bisa membuat list comprehension dengan menggunakan fungsi di dalam ekspresi. Contohnya: `[x**2 for x in range(10)]`.",
                "answer_code": "[x**2 for x in range(10)]"
            },
            {
                "question": "Bagaimana cara membuat list comprehension dari list yang ada di Python?",
                "question_code": "numbers = [1, 2, 3, 4, 5]\nsquares = [x**2 for x in numbers]",
                "answer": "Anda bisa membuat list comprehension dari list yang ada dengan menggunakan list sebagai iterable. Contohnya: `[x**2 for x in numbers]`.",
                "answer_code": "numbers = [1, 2, 3, 4, 5]\nsquares = [x**2 for x in numbers]"
            },
            {
                "question": "Bagaimana cara membuat nested list comprehension di Python?",
                "question_code": "[[x, y] for x in range(3) for y in range(3)]",
                "answer": "Anda bisa membuat nested list comprehension dengan menggunakan dua loop for di dalam satu list comprehension. Contohnya: `[[x, y] for x in range(3) for y in range(3)]`.",
                "answer_code": "[[x, y] for x in range(3) for y in range(3)]"
            },
            {
                "question": "Bagaimana cara menggunakan list comprehension untuk memanipulasi string di Python?",
                "question_code": "[char.upper() for char in 'hello']",
                "answer": "Anda bisa menggunakan list comprehension untuk memanipulasi string dengan iterasi karakter di dalam string. Contohnya: `[char.upper() for char in 'hello']`.",
                "answer_code": "[char.upper() for char in 'hello']"
            },
            {
                "question": "Bagaimana cara membuat dictionary comprehension di Python?",
                "question_code": "{x: x**2 for x in range(5)}",
                "answer": "Anda bisa membuat dictionary comprehension dengan menggunakan sintaks `{key: value for item in iterable}`. Contohnya: `{x: x**2 for x in range(5)}`.",
                "answer_code": "{x: x**2 for x in range(5)}"
            },
            {
                "question": "Bagaimana cara membuat set comprehension di Python?",
                "question_code": "{x for x in range(5)}",
                "answer": "Anda bisa membuat set comprehension dengan menggunakan tanda kurung kurawal `{}`. Contohnya: `{x for x in range(5)}`.",
                "answer_code": "{x for x in range(5)}"
            }
        ]
    }
]
