[
    {
        "sumber": "PythonBeginner.org",
        "penulis": "Andi Setiawan",
        "tanggal": "2024-08-20",
        "judul": "Dasar-dasar Pemrograman dengan Python",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "pemula", "dasar"],
        "konten": "Artikel ini membahas tentang dasar-dasar pemrograman di Python, termasuk cara mendeklarasikan variabel, tipe data, dan melakukan operasi dasar.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan variabel di Python?",
                "answer": "Di Python, Anda bisa mendeklarasikan variabel dengan langsung memberikan nilai kepadanya. Contoh: a = 10."
            },
            {
                "question": "Apa yang perlu dilakukan untuk menampilkan isi dari variabel?",
                "answer": "Untuk menampilkan nilai variabel, gunakan fungsi print(). Misalnya: print(a)."
            },
            {
                "question": "Apa yang dimaksud dengan tipe data di Python?",
                "answer": "Tipe data menggambarkan jenis nilai yang bisa disimpan dalam variabel. Contoh tipe data adalah integer, float, dan string."
            },
            {
                "question": "Kenapa kode ini tidak berfungsi?",
                "question_code": "name = 'John'\nprint(Name)",
                "answer": "Kesalahan ini terjadi karena Python sensitif terhadap huruf kapital. Variabel yang benar adalah name, bukan Name.",
                "answer_code": "name = 'John'\nprint(name)"
            },
            {
                "question": "Mengapa saya mendapatkan pesan error NameError?",
                "question_code": "print(x)",
                "answer": "NameError terjadi karena variabel x belum dideklarasikan. Pastikan x sudah ada nilainya sebelum digunakan.",
                "answer_code": "x = 5\nprint(x)"
            },
            {
                "question": "Bagaimana cara menggabungkan dua string?",
                "question_code": "str1 = 'Happy'\nstr2 = 'Birthday'\nprint(str1 + str2)",
                "answer": "Untuk menggabungkan dua string, gunakan operator +. Misalnya: str1 + ' ' + str2.",
                "answer_code": "str1 = 'Happy'\nstr2 = 'Birthday'\nprint(str1 + ' ' + str2)"
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf kapital?",
                "question_code": "phrase = 'goodbye'\nprint(phrase.capitalize())",
                "answer": "Untuk mengubah semua huruf dalam string menjadi kapital, gunakan metode upper(). Misalnya: phrase.upper().",
                "answer_code": "phrase = 'goodbye'\nprint(phrase.upper())"
            },
            {
                "question": "Bagaimana cara menghapus spasi di kedua sisi string?",
                "question_code": "text = '  sample  '\nprint(text.lstrip())",
                "answer": "Untuk menghapus spasi di awal dan akhir string, gunakan metode strip(). Misalnya: text.strip().",
                "answer_code": "text = '  sample  '\nprint(text.strip())"
            },
            {
                "question": "Bagaimana cara memeriksa apakah substring ada dalam string?",
                "question_code": "message = 'Hello there!'\nprint('there' in message)",
                "answer": "Gunakan operator in untuk memeriksa apakah substring terdapat dalam string. Misalnya: 'there' in message.",
                "answer_code": "message = 'Hello there!'\nprint('there' in message)"
            }
        ]
    },
    {
        "sumber": "MasteringPython.net",
        "penulis": "Siti Maulani",
        "tanggal": "2024-08-25",
        "judul": "Mengelola Alur Program dengan Python",
        "tingkat_kesulitan": "menengah",
        "tag": ["kontrol alur", "python", "if-else"],
        "konten": "Artikel ini menjelaskan tentang kontrol alur dalam Python, termasuk penggunaan pernyataan if-else, loop for, dan while.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan pernyataan if di Python?",
                "answer": "Pernyataan if digunakan untuk mengevaluasi kondisi dan menjalankan kode jika kondisi tersebut benar. Contoh: if x > 5: print('x lebih besar dari 5')."
            },
            {
                "question": "Apa fungsi dari pernyataan else?",
                "answer": "Pernyataan else digunakan untuk menjalankan kode jika kondisi dalam if tidak terpenuhi. Contoh: else: print('x tidak lebih besar dari 5')."
            },
            {
                "question": "Bagaimana cara menambahkan kondisi tambahan menggunakan elif?",
                "answer": "Pernyataan elif digunakan untuk memeriksa kondisi tambahan jika kondisi dalam if sebelumnya tidak benar. Contoh: elif x == 5: print('x sama dengan 5')."
            },
            {
                "question": "Kenapa kode ini error?",
                "question_code": "number = 4\nif number == 4:\nprint('Number is four')",
                "answer": "IndentationError muncul karena print() tidak memiliki indentasi yang benar. Tambahkan indentasi di bawah if.",
                "answer_code": "number = 4\nif number == 4:\n    print('Number is four')"
            },
            {
                "question": "Apa yang salah dengan loop for ini?",
                "question_code": "for num in range(4)\n    print(num)",
                "answer": "SyntaxError terjadi karena titik dua (:) setelah range(4) hilang. Tambahkan titik dua setelah range(4).",
                "answer_code": "for num in range(4):\n    print(num)"
            },
            {
                "question": "Bagaimana cara kerja loop while?",
                "question_code": "counter = 3\nwhile counter > 0:\nprint(counter)\ncounter -= 1",
                "answer": "Loop while akan terus berjalan selama kondisinya benar. Misalnya: while counter > 0: print(counter); counter -= 1.",
                "answer_code": "counter = 3\nwhile counter > 0:\n    print(counter)\n    counter -= 1"
            },
            {
                "question": "Bagaimana cara menghentikan loop menggunakan break?",
                "question_code": "for n in range(5):\n    if n == 2:\n        stop\n    print(n)",
                "answer": "Gunakan break untuk menghentikan loop saat kondisi tertentu terpenuhi. Ganti stop dengan break.",
                "answer_code": "for n in range(5):\n    if n == 2:\n        break\n    print(n)"
            },
            {
                "question": "Bagaimana cara melanjutkan ke iterasi berikutnya dalam loop?",
                "question_code": "for n in range(4):\n    if n == 1:\n        pass\n    print(n)",
                "answer": "Gunakan continue untuk melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya. Ganti pass dengan continue.",
                "answer_code": "for n in range(4):\n    if n == 1:\n        continue\n    print(n)"
            },
            {
                "question": "Bagaimana cara menulis nested loop di Python?",
                "question_code": "for i in range(2):\nfor j in range(3):\nprint(i, j)",
                "answer": "Nested loop adalah loop di dalam loop. Pastikan setiap loop terindetasi dengan benar. Contoh: for i in range(2): for j in range(3): print(i, j).",
                "answer_code": "for i in range(2):\n    for j in range(3):\n        print(i, j)"
            }
        ]
    }
]
