[
    {
        "sumber": "Python for Beginners",
        "penulis": "Guido van Rossum",
        "tanggal": "2024-07-27",
        "judul": "Mengelola Nested List di Python",
        "tingkat_kesulitan": "Beginner",
        "tag": ["Python", "Lists", "Nested Lists"],
        "konten": "Artikel ini menjelaskan cara mengakses, menambahkan, dan menghapus elemen dalam nested list di Python dengan beberapa contoh kode praktis.",
        "pertanyaan": [
            {
                "question": "Bagaimana Anda dapat menemukan data yang berada dalam struktur list yang kompleks?",
                "answer": "Anda perlu menggunakan dua indeks: satu untuk memilih sub-list dan satu lagi untuk memilih elemen dalam sub-list tersebut. Misalnya, `nested_list[2][1]` mengakses elemen kedua dari sub-list ketiga."
            },
            {
                "question": "Apa yang Anda lakukan jika ingin menambahkan elemen baru ke dalam list berlapis?",
                "answer": "Anda dapat menambahkan elemen menggunakan metode append() atau insert() pada sub-list yang diinginkan. Contoh: `nested_list[1].append('elemen baru')` menambahkan 'elemen baru' ke sub-list kedua."
            },
            {
                "question": "Bagaimana cara yang tepat untuk menghapus elemen dari sub-list dalam nested list?",
                "answer": "Gunakan metode remove(), del, atau pop() pada sub-list yang diinginkan. Contoh: `del nested_list[0][2]` menghapus elemen ketiga dari sub-list pertama."
            },
            {
                "question": "Mengapa kode berikut ini tidak menghasilkan output yang benar?",
                "question_code": "data = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]\nvalue = data[3][1]",
                "answer": "Kode tersebut menghasilkan kesalahan karena mencoba mengakses indeks yang tidak ada dalam list. List utama hanya memiliki tiga sub-list, sehingga indeks 3 tidak ada.",
                "answer_code": "data = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]\nvalue = data[2][1]"
            },
            {
                "question": "Mengapa elemen baru tidak ditambahkan ke sub-list yang diinginkan?",
                "question_code": "nested_list = [['apple', 'banana'], ['cherry', 'date']]\nnested_list[3].append('elderberry')",
                "answer": "Kesalahan terjadi karena sub-list keempat tidak ada. Indeks yang benar adalah 1 untuk sub-list kedua.",
                "answer_code": "nested_list = [['apple', 'banana'], ['cherry', 'date']]\nnested_list[1].append('elderberry')"
            },
            {
                "question": "Bagaimana cara memperbaiki kode ini agar elemen dapat dihapus dari nested list?",
                "question_code": "data = [['a', 'b'], ['c', 'd']]\ndata.remove(['c', 'd'][0])",
                "answer": "Metode remove() digunakan dengan cara yang salah. Seharusnya menggunakan del atau pop untuk menghapus elemen dari sub-list.",
                "answer_code": "data = [['a', 'b'], ['c', 'd']]\ndel data[1][0]"
            },
            {
                "question": "Apa yang menyebabkan kode ini tidak berfungsi seperti yang diharapkan?",
                "question_code": "nested_list = [[1, 2], [3, [4, 5]], 6]\nelement = nested_list[2].pop(0)",
                "answer": "Kesalahan terjadi karena elemen `nested_list[2]` adalah integer, bukan list, sehingga tidak bisa menggunakan metode pop.",
                "answer_code": "nested_list = [[1, 2], [3, [4, 5]], [6]]\nelement = nested_list[2].pop()"
            },
            {
                "question": "Bagaimana kode berikut ini mengubah list yang sudah ada?",
                "question_code": "nested = [[100, 200], [300, 400], [500, 600]]\nnested[1].append(450)",
                "answer": "Kode tersebut benar dan menambahkan elemen 450 ke sub-list kedua.",
                "answer_code": "nested = [[100, 200], [300, 400], [500, 600]]\nnested[1].append(450)"
            },
            {
                "question": "Apa yang menyebabkan kesalahan dalam kode berikut?",
                "question_code": "matrix = [[5, 10], [15, 20], [25, 30]]\ndel matrix[2][2]",
                "answer": "Kesalahan terjadi karena mencoba mengakses indeks yang tidak ada. Sub-list ketiga hanya memiliki dua elemen dengan indeks maksimal 1.",
                "answer_code": "matrix = [[5, 10], [15, 20], [25, 30]]\ndel matrix[2][1]"
            }
        ]
    },
    {
        "sumber": "Learning Python",
        "penulis": "Alice Johnson",
        "tanggal": "2024-07-27",
        "judul": "Memanipulasi Elemen dalam Nested List di Python",
        "tingkat_kesulitan": "Beginner",
        "tag": ["Python", "Lists", "Nested Lists"],
        "konten": "Panduan ini menjelaskan cara mengakses, menambahkan, dan menghapus elemen dalam nested list di Python dengan contoh-contoh praktis.",
        "pertanyaan": [
            {
                "question": "Mengapa penggunaan nested list membantu dalam mengelola data yang lebih rumit?",
                "answer": "Nested list memungkinkan pengorganisasian data dalam beberapa tingkatan atau dimensi, seperti tabel atau matriks, sehingga memudahkan pengelolaan data yang lebih kompleks."
            },
            {
                "question": "Bagaimana Anda dapat menambahkan sub-list baru ke dalam list yang sudah berlapis?",
                "answer": "Anda bisa menambahkan sub-list baru menggunakan metode append() atau insert(). Misalnya, `nested_list.append([150, 250, 350])` menambahkan sub-list baru ke dalam list utama."
            },
            {
                "question": "Bagaimana Anda mengakses elemen tertentu dalam sub-list yang berada di dalam list bersarang?",
                "answer": "Gunakan dua indeks: satu untuk memilih sub-list dan satu lagi untuk memilih elemen dalam sub-list tersebut. Contoh: `nested_list[2][1]` mengakses elemen kedua dari sub-list ketiga."
            },
            {
                "question": "Apa yang menyebabkan kode berikut ini tidak menghasilkan hasil yang diharapkan?",
                "question_code": "data_structure = [['x', 'y'], ['z', 'w'], ['p', 'q']]\nelement = data_structure[3][1]",
                "answer": "Kesalahan terjadi karena indeks yang diakses berada di luar jangkauan. List utama hanya memiliki tiga sub-list, sehingga indeks 3 tidak ada.",
                "answer_code": "data_structure = [['x', 'y'], ['z', 'w'], ['p', 'q']]\nelement = data_structure[2][1]"
            },
            {
                "question": "Apa yang membuat elemen tidak dimasukkan ke sub-list yang benar?",
                "question_code": "nested_data = [['alpha', 'beta'], ['gamma', 'delta']]\nnested_data[3].append('epsilon')",
                "answer": "Kesalahan terjadi karena sub-list keempat tidak ada. Indeks yang benar adalah 1 untuk sub-list kedua.",
                "answer_code": "nested_data = [['alpha', 'beta'], ['gamma', 'delta']]\nnested_data[1].append('epsilon')"
            },
            {
                "question": "Bagaimana Anda memperbaiki kode ini agar elemen dapat dihapus dari sub-list?",
                "question_code": "data = [['cat', 'dog'], ['fish', 'bird']]\ndata.remove(['fish', 'bird'][0])",
                "answer": "Metode remove() digunakan dengan cara yang salah. Seharusnya menggunakan del atau pop untuk menghapus elemen dari sub-list.",
                "answer_code": "data = [['cat', 'dog'], ['fish', 'bird']]\ndel data[1][0]"
            },
            {
                "question": "Apa yang salah dalam kode berikut sehingga menyebabkan kesalahan?",
                "question_code": "complex_list = [[1, 2], [3, [4, 5]], 6]\nelement = complex_list[2].pop(1)",
                "answer": "Kesalahan terjadi karena elemen `complex_list[2]` adalah integer, bukan list, sehingga tidak bisa menggunakan metode pop.",
                "answer_code": "complex_list = [[1, 2], [3, [4, 5]], [6]]\nelement = complex_list[2].pop()"
            },
            {
                "question": "Bagaimana perubahan yang terjadi pada nested list setelah menjalankan kode ini?",
                "question_code": "nested_elements = [[10, 20], [30, 40], [50, 60]]\nnested_elements[1].append(45)",
                "answer": "Kode tersebut benar dan menambahkan elemen 45 ke sub-list kedua, menyebabkan perubahan pada nested list.",
                "answer_code": "nested_elements = [[10, 20], [30, 40], [50, 60]]\nnested_elements[1].append(45)"
            },
            {
                "question": "Mengapa kode berikut tidak berfungsi saat mencoba menghapus elemen dari nested list?",
                "question_code": "matrix = [[5, 10, 15], [20, 25, 30], [35, 40, 45]]\nmatrix[1].remove(35)",
                "answer": "Kesalahan terjadi karena elemen 35 tidak ada dalam sub-list kedua, sehingga tidak bisa dihapus.",
                "answer_code": "matrix = [[5, 10, 15], [20, 25, 30], [35, 40, 45]]\nmatrix[2].remove(35)"
            }
        ]
    }
]
