[
    {
        "sumber": "Python Essentials",
        "penulis": "Jane Doe",
        "tanggal": "2024-11-20",
        "judul": "Teknik Penggabungan List di Python: Metode `extend()` dan Operator `+`",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "extend", "Operator", "Pemula"],
        "konten": "Artikel ini menjelaskan cara menggabungkan dua list di Python menggunakan metode `extend()` dan operator `+`. Dapatkan contoh praktis yang jelas untuk memahami perbedaan antara kedua metode ini.",
        "pertanyaan": [
            {
                "question": "Apa hasil dari menggabungkan list `[2, 4, 6]` dan `[8, 10, 12]` menggunakan metode `extend()`?",
                "answer": "Menggunakan `extend()`, list pertama akan diperpanjang dengan elemen dari list kedua. Contoh: jika `list1 = [2, 4, 6]` dan `list1.extend([8, 10, 12])`, maka `list1` setelah operasi akan menjadi `[2, 4, 6, 8, 10, 12]`."
            },
            {
                "question": "Apa yang terjadi jika Anda menggabungkan list `[5, 10]` dengan `[15, 20]` menggunakan operator `+`?",
                "answer": "Operator `+` akan menggabungkan kedua list dan menghasilkan list baru tanpa mengubah list asli. Misalnya, jika `result = [5, 10] + [15, 20]`, maka `result` akan menjadi `[5, 10, 15, 20]`."
            },
            {
                "question": "Bagaimana cara menggabungkan list `[1, 3, 5]` dan `[7, 9, 11]` tanpa memodifikasi list pertama menggunakan metode `extend()`?",
                "answer": "Gunakan salinan dari list pertama dan aplikasikan `extend()`. Contoh: `list1 = [1, 3, 5]; list2 = list1.copy(); list2.extend([7, 9, 11])` sehingga `list2` menjadi `[1, 3, 5, 7, 9, 11]` tanpa mengubah `list1`."
            },
            {
                "question": "Apa yang menyebabkan error saat mencoba menggabungkan list `[4, 8]` dan string `'hello'` menggunakan operator `+`?",
                "question_code": "list_a = [4, 8]\nresult = list_a + 'hello'",
                "answer": "Error ini disebabkan karena operator `+` tidak dapat menggabungkan list dengan string. Anda perlu memastikan bahwa elemen yang digabungkan adalah tipe data yang kompatibel, seperti list. Untuk menggabungkan, Anda bisa mengonversi string menjadi list terlebih dahulu.",
                "answer_code": "list_a = [4, 8]\nresult = list_a + list('hello')"
            },
            {
                "question": "Apa hasilnya jika Anda mencoba menggabungkan list `[100, 200]` dengan dictionary `{300: 'three hundred'}` menggunakan metode `extend()`?",
                "question_code": "list_b = [100, 200]\nlist_b.extend({300: 'three hundred'})",
                "answer": "Menggunakan `extend()` dengan dictionary akan mengakibatkan error, karena dictionary tidak dapat langsung di-extend. Untuk menggabungkan, Anda harus mengonversi dictionary menjadi list terlebih dahulu.",
                "answer_code": "list_b = [100, 200]\nlist_b.extend(list({300: 'three hundred'}.items()))"
            },
            {
                "question": "Bagaimana cara menggabungkan list `[9, 18]` dan tuple `(27, 36)` menggunakan operator `+`?",
                "answer": "Operator `+` tidak dapat menggabungkan list dengan tuple secara langsung. Konversikan tuple menjadi list terlebih dahulu. Contoh: `result = [9, 18] + list((27, 36))` menghasilkan `[9, 18, 27, 36]`."
            },
            {
                "question": "Apa yang terjadi saat Anda menggabungkan list `[2, 4, 6]` dengan list `[8, 10]` dan list ketiga `[12, 14]` menggunakan metode `extend()`?",
                "answer": "Metode `extend()` dapat digunakan beberapa kali untuk menggabungkan beberapa list secara berurutan. Contoh: `list_x = [2, 4, 6]; list_x.extend([8, 10]); list_x.extend([12, 14])` akan menghasilkan `list_x` sebagai `[2, 4, 6, 8, 10, 12, 14]`."
            },
            {
                "question": "Bagaimana Anda menggabungkan list `[1, 3, 5]` dengan list `[7, 9, 11]` tanpa memodifikasi list awal menggunakan operator `+`?",
                "answer": "Operator `+` membuat list baru tanpa mengubah list asli. Misalnya, `result = [1, 3, 5] + [7, 9, 11]` menghasilkan list baru `[1, 3, 5, 7, 9, 11]`, sementara list asli tetap tidak berubah."
            }
        ]
    },
    {
        "sumber": "Learn Python Programming",
        "penulis": "John Smith",
        "tanggal": "2024-11-21",
        "judul": "Penggabungan List di Python: `extend()` vs `+` Operator",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "extend", "Operator", "Pemula"],
        "konten": "Panduan ini membahas cara menggabungkan list di Python menggunakan metode `extend()` dan operator `+`. Dapatkan pemahaman yang lebih baik dengan contoh yang praktis dan mudah diikuti.",
        "pertanyaan": [
            {
                "question": "Apa hasil dari menggabungkan list `[3, 6, 9]` dan `[12, 15, 18]` menggunakan metode `extend()`?",
                "answer": "Dengan `extend()`, list pertama akan diperluas dengan elemen dari list kedua. Misalnya, jika `list1 = [3, 6, 9]` dan `list1.extend([12, 15, 18])`, maka `list1` menjadi `[3, 6, 9, 12, 15, 18]`."
            },
            {
                "question": "Bagaimana hasil penggabungan list `[7, 14]` dengan `[21, 28]` menggunakan operator `+`?",
                "answer": "Operator `+` menghasilkan list baru yang menggabungkan kedua list. Misalnya, `result = [7, 14] + [21, 28]` akan menghasilkan `[7, 14, 21, 28]`."
            },
            {
                "question": "Cara apa yang bisa Anda gunakan untuk menggabungkan list `[11, 22]` dan `[33, 44]` tanpa memodifikasi list pertama menggunakan metode `extend()`?",
                "answer": "Buat salinan dari list pertama dan gunakan `extend()` pada salinan tersebut. Contoh: `list1 = [11, 22]; list2 = list1.copy(); list2.extend([33, 44])` menghasilkan `list2` sebagai `[11, 22, 33, 44]`."
            },
            {
                "question": "Apa yang menyebabkan error saat menggabungkan list `[5, 10]` dengan tuple `(15, 20)` menggunakan operator `+`?",
                "question_code": "list_a = [5, 10]\nresult = list_a + (15, 20)",
                "answer": "Error ini disebabkan karena operator `+` tidak dapat menggabungkan list dengan tuple secara langsung. Konversikan tuple menjadi list terlebih dahulu.",
                "answer_code": "list_a = [5, 10]\nresult = list_a + list((15, 20))"
            },
            {
                "question": "Apa yang terjadi jika Anda menggabungkan list `[2, 4]` dengan dictionary `{6: 'six'}` menggunakan metode `extend()`?",
                "question_code": "list_b = [2, 4]\nlist_b.extend({6: 'six'})",
                "answer": "Dictionary tidak dapat digunakan langsung dengan `extend()`. Anda harus mengonversinya menjadi list terlebih dahulu. Misalnya, `list_b.extend(list({6: 'six'}.items()))` menghasilkan `[2, 4, (6, 'six')]`."
            },
            {
                "question": "Bagaimana Anda menggabungkan list `[8, 16]` dan set `{32, 64}` menggunakan operator `+`?",
                "answer": "Operator `+` tidak dapat menggabungkan list dengan set langsung. Konversikan set menjadi list terlebih dahulu. Misalnya, `result = [8, 16] + list({32, 64})` menghasilkan `[8, 16, 32, 64]`."
            },
            {
                "question": "Bagaimana cara menggabungkan list `[1, 2, 3]` dan `[4, 5, 6]` tanpa mengubah list awal menggunakan operator `+`?",
                "answer": "Gunakan operator `+` untuk menggabungkan kedua list tanpa mengubah list awal. Misalnya, `result = [1, 2, 3] + [4, 5, 6]` menghasilkan list baru `[1, 2, 3, 4, 5, 6]`."
            }
        ]
    }
]
