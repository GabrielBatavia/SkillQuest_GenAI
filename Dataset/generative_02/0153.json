[
    {
        "sumber": "w3schools.com",
        "penulis": "Alice Johnson",
        "tanggal": "2024-07-22",
        "judul": "Memahami Variabel dan Tipe Data di Python",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "variabel", "tipe data"],
        "konten": "Artikel ini menjelaskan bagaimana cara mendeklarasikan variabel dan memahami berbagai tipe data dalam Python.",
        "pertanyaan": [
            {
                "question": "Apa yang dimaksud dengan tipe data integer di Python? Berikan contohnya!",
                "answer": "Tipe data integer (int) adalah untuk bilangan bulat tanpa desimal. Contoh: 7, -12, 0."
            },
            {
                "question": "Bagaimana Anda bisa mendeklarasikan variabel yang berisi angka desimal di Python?",
                "answer": "Variabel dengan angka desimal dideklarasikan dengan tipe data float, contohnya: `temperature = 36.5`."
            },
            {
                "question": "Apa perbedaan antara tipe data string dan integer di Python?",
                "answer": "String (str) menyimpan teks seperti 'Hello', sedangkan integer (int) menyimpan bilangan bulat seperti 5 atau -3."
            },
            {
                "question": "Bagaimana cara mengecek tipe data suatu variabel di Python?",
                "question_code": "my_var = 10.5\nprint(type(my_var))",
                "answer": "Gunakan fungsi `type()` untuk memeriksa tipe data variabel. Contoh: `print(type(my_var))`.",
                "answer_code": "<class 'float'>"
            },
            {
                "question": "Jika Anda punya string '123', bagaimana cara mengubahnya menjadi angka?",
                "question_code": "number_string = '123'\nnumber = int(number_string)",
                "answer": "Gunakan `int()` untuk mengubah string menjadi integer. Contoh: `number = int(number_string)`.",
                "answer_code": "123"
            },
            {
                "question": "Apa itu list dalam Python dan bagaimana cara menggunakannya?",
                "question_code": "fruits = ['apple', 'banana', 'cherry']\nprint(fruits[0])",
                "answer": "List adalah kumpulan item yang bisa diubah dan diakses dengan indeks. Contoh: `fruits = ['apple', 'banana', 'cherry']`.",
                "answer_code": "'apple'"
            },
            {
                "question": "Bagaimana Anda menambahkan elemen baru ke dalam list?",
                "question_code": "fruits = ['apple', 'banana']\nfruits.append('orange')",
                "answer": "Gunakan metode `append()` untuk menambah elemen baru. Contoh: `fruits.append('orange')`.",
                "answer_code": "['apple', 'banana', 'orange']"
            },
            {
                "question": "Jika Anda memiliki list `[1, 2, 3, 4]`, bagaimana cara mendapatkan elemen dari indeks 2 hingga akhir?",
                "question_code": "numbers = [1, 2, 3, 4]\nslice = numbers[2:]",
                "answer": "Gunakan slicing untuk mendapatkan elemen dari indeks tertentu hingga akhir. Contoh: `slice = numbers[2:]`.",
                "answer_code": "[3, 4]"
            },
            {
                "question": "Bagaimana cara menghitung jumlah elemen dalam sebuah list?",
                "question_code": "items = [1, 2, 3]\nlength = len(items)",
                "answer": "Gunakan fungsi `len()` untuk menghitung jumlah elemen. Contoh: `length = len(items)`.",
                "answer_code": "3"
            }
        ]
    },
    {
        "sumber": "geeksforgeeks.org",
        "penulis": "Robert Brown",
        "tanggal": "2024-07-21",
        "judul": "Dasar-Dasar Sintaks Python untuk Pemula",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "syntax", "pemula"],
        "konten": "Panduan ini memberikan penjelasan dasar mengenai sintaks Python dan cara penggunaannya untuk pemula.",
        "pertanyaan": [
            {
                "question": "Apa fungsi dari `print()` dalam Python dan bagaimana cara menggunakannya?",
                "answer": "Fungsi `print()` digunakan untuk menampilkan teks atau variabel ke layar. Contoh: `print('Hello, World!')`."
            },
            {
                "question": "Bagaimana Anda dapat mendefinisikan fungsi yang hanya mencetak pesan sederhana?",
                "answer": "Gunakan `def` untuk mendefinisikan fungsi, contohnya: `def say_hello(): print('Hello!')`."
            },
            {
                "question": "Apa yang dimaksud dengan loop dalam pemrograman dan bagaimana Anda menggunakannya?",
                "answer": "Loop digunakan untuk menjalankan blok kode beberapa kali. Ada dua jenis utama: `for` dan `while` loops."
            },
            {
                "question": "Bagaimana cara mencetak setiap item dalam list `[1, 2, 3]` menggunakan loop?",
                "question_code": "numbers = [1, 2, 3]\nfor number in numbers:\n    print(number)",
                "answer": "Gunakan loop `for` untuk iterasi melalui list dan mencetak setiap item. Contoh: `for number in numbers: print(number)`.",
                "answer_code": "1\n2\n3"
            },
            {
                "question": "Bagaimana Anda bisa membuat loop yang berhenti setelah mencapai angka tertentu?",
                "question_code": "i = 0\nwhile i < 5:\n    print(i)\n    i += 1",
                "answer": "Gunakan `while` loop dengan kondisi untuk menghentikan loop saat kondisi tidak lagi benar. Contoh: `while i < 5: print(i); i += 1`.",
                "answer_code": "0\n1\n2\n3\n4"
            },
            {
                "question": "Apa kegunaan operator aritmatika seperti `+` dan `*` dalam Python?",
                "question_code": "x = 10\ny = 5\nsum_result = x + y\nproduct_result = x * y",
                "answer": "Operator aritmatika digunakan untuk operasi matematika. `+` menambah, dan `*` mengalikan. Contoh: `sum_result = x + y`.",
                "answer_code": "sum_result: 15\nproduct_result: 50"
            },
            {
                "question": "Bagaimana Anda memeriksa apakah sebuah karakter ada dalam string?",
                "question_code": "text = 'Python'\nif 'P' in text:\n    print('Ditemukan')",
                "answer": "Gunakan operator `in` untuk memeriksa keberadaan karakter dalam string. Contoh: `if 'P' in text: print('Ditemukan')`.",
                "answer_code": "Ditemukan"
            },
            {
                "question": "Bagaimana Anda mengubah string 'HELLO' menjadi huruf kecil?",
                "question_code": "text = 'HELLO'\nlower_text = text.lower()",
                "answer": "Gunakan metode `lower()` untuk mengubah string menjadi huruf kecil. Contoh: `lower_text = text.lower()`.",
                "answer_code": "hello"
            },
            {
                "question": "Bagaimana Anda menghapus elemen terakhir dari sebuah list?",
                "question_code": "numbers = [1, 2, 3, 4]\nnumbers.pop()",
                "answer": "Gunakan metode `pop()` untuk menghapus elemen terakhir dari list. Contoh: `numbers.pop()`.",
                "answer_code": "[1, 2, 3]"
            }
        ]
    },
    {
        "sumber": "tutorialspoint.com",
        "penulis": "Emily White",
        "tanggal": "2024-07-19",
        "judul": "Memulai dengan Sintaks Python: Panduan untuk Pemula",
        "tingkat_kesulitan": "pemula",
        "tag": ["python", "syntax", "tutorial"],
        "konten": "Panduan ini dirancang untuk membantu pemula memahami sintaks dasar Python dan bagaimana menerapkannya.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan `input()` untuk meminta input dari pengguna?",
                "answer": "Fungsi `input()` digunakan untuk mendapatkan input dari pengguna. Contoh: `user_input = input('Masukkan sesuatu: ')`."
            },
            {
                "question": "Apa perbedaan antara `==` dan `!=` dalam Python?",
                "answer": "Operator `==` memeriksa apakah dua nilai sama, sedangkan `!=` memeriksa apakah dua nilai tidak sama. Contoh: `3 == 3` adalah True, `4 != 2` adalah True."
            },
            {
                "question": "Apa itu tuple dan bagaimana cara menggunakannya?",
                "answer": "Tuple adalah struktur data yang tidak dapat diubah setelah dibuat. Contoh tuple: `(1, 2, 3)`."
            },
            {
                "question": "Bagaimana cara membuat tuple baru dengan item yang sudah ada?",
                "question_code": "old_tuple = (1, 2, 3)\nnew_tuple = old_tuple + (4, 5)",
                "answer": "Gabungkan tuple lama dengan tuple baru untuk membuat tuple baru. Contoh: `new_tuple = old_tuple + (4, 5)`.",
                "answer_code": "(1, 2, 3, 4, 5)"
            },
            {
                "question": "Apa itu set dan bagaimana cara menggunakannya dalam Python?",
                "answer": "Set adalah koleksi yang tidak terurut dan tidak memiliki duplikat. Contoh penggunaan: `my_set = {1, 2, 3}`."
            },
            {
                "question": "Bagaimana cara menghapus item dari set?",
                "question_code": "my_set = {1, 2, 3}\nmy_set.discard(2)",
                "answer": "Gunakan metode `discard()` untuk menghapus item dari set. Contoh: `my_set.discard(2)`.",
                "answer_code": "{1, 3}"
            },
            {
                "question": "Bagaimana Anda mengakses nilai dalam dictionary?",
                "question_code": "my_dict = {'name': 'Alice', 'age': 30}\nprint(my_dict['name'])",
                "answer": "Akses nilai dalam dictionary dengan key-nya. Contoh: `print(my_dict['name'])`.",
                "answer_code": "Alice"
            },
            {
                "question": "Bagaimana cara mengupdate nilai dalam dictionary?",
                "question_code": "my_dict = {'name': 'Alice'}\nmy_dict['name'] = 'Bob'",
                "answer": "Gunakan sintaks `dictionary[key] = value` untuk memperbarui nilai. Contoh: `my_dict['name'] = 'Bob'`.",
                "answer_code": "{'name': 'Bob'}"
            },
            {
                "question": "Apa itu `list comprehension` dan bagaimana cara menggunakannya?",
                "question_code": "squares = [x**2 for x in range(5)]\nprint(squares)",
                "answer": "`List comprehension` digunakan untuk membuat list baru dari iterasi. Contoh: `[x**2 for x in range(5)]`.",
                "answer_code": "[0, 1, 4, 9, 16]"
            }
        ]
    }
]
