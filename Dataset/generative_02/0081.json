[
    {
        "sumber": "belajarcodingpython.com",
        "penulis": "Ahmad Rizal",
        "tanggal": "2023-04-22",
        "judul": "Penggunaan Dictionary di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "dictionary", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan dictionary di Python, termasuk cara membuat, mengakses, menambah, dan menghapus pasangan kunci-nilai dalam dictionary.",
        "pertanyaan": [
            {
                "question": "Apa itu dictionary di Python?",
                "answer": "Dictionary adalah struktur data yang menyimpan data dalam bentuk pasangan kunci-nilai."
            },
            {
                "question": "Bagaimana cara membuat dictionary di Python?",
                "answer": "Anda bisa membuat dictionary dengan menggunakan tanda kurung kurawal `{}` dan memisahkan pasangan kunci-nilai dengan koma. Contohnya: `my_dict = {'key': 'value'}`."
            },
            {
                "question": "Bagaimana cara mengakses nilai dalam dictionary?",
                "answer": "Anda bisa mengakses nilai dalam dictionary dengan menggunakan kunci. Contohnya: `value = my_dict['key']`."
            },
            {
                "question": "Bagaimana cara menambah pasangan kunci-nilai ke dictionary?",
                "question_code": "my_dict['new_key'] = 'new_value'",
                "answer": "Anda bisa menambah pasangan kunci-nilai ke dictionary dengan menugaskan nilai baru ke kunci baru. Contohnya: `my_dict['new_key'] = 'new_value'`.",
                "answer_code": "my_dict['new_key'] = 'new_value'"
            },
            {
                "question": "Bagaimana cara menghapus pasangan kunci-nilai dari dictionary?",
                "question_code": "del my_dict['key']",
                "answer": "Anda bisa menghapus pasangan kunci-nilai dari dictionary dengan menggunakan kata kunci `del`. Contohnya: `del my_dict['key']`.",
                "answer_code": "del my_dict['key']"
            },
            {
                "question": "Bagaimana cara memeriksa apakah kunci ada dalam dictionary?",
                "question_code": "'key' in my_dict",
                "answer": "Anda bisa memeriksa apakah kunci ada dalam dictionary dengan menggunakan operator `in`. Contohnya: `'key' in my_dict`.",
                "answer_code": "'key' in my_dict"
            },
            {
                "question": "Bagaimana cara mendapatkan semua kunci dalam dictionary?",
                "question_code": "my_dict.keys()",
                "answer": "Anda bisa mendapatkan semua kunci dalam dictionary dengan menggunakan metode `keys()`. Contohnya: `my_dict.keys()`.",
                "answer_code": "my_dict.keys()"
            },
            {
                "question": "Bagaimana cara mendapatkan semua nilai dalam dictionary?",
                "question_code": "my_dict.values()",
                "answer": "Anda bisa mendapatkan semua nilai dalam dictionary dengan menggunakan metode `values()`. Contohnya: `my_dict.values()`.",
                "answer_code": "my_dict.values()"
            },
            {
                "question": "Bagaimana cara mengupdate nilai dalam dictionary?",
                "question_code": "my_dict['key'] = 'updated_value'",
                "answer": "Anda bisa mengupdate nilai dalam dictionary dengan menugaskan nilai baru ke kunci yang sudah ada. Contohnya: `my_dict['key'] = 'updated_value'`.",
                "answer_code": "my_dict['key'] = 'updated_value'"
            }
        ]
    },
    {
        "sumber": "belajarpythonpemula.com",
        "penulis": "Siti Nurhaliza",
        "tanggal": "2023-12-05",
        "judul": "Penggunaan String di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "string", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan string di Python, termasuk cara membuat, mengakses, memanipulasi, dan memformat string.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara membuat string di Python?",
                "answer": "Anda bisa membuat string dengan menggunakan tanda kutip tunggal atau ganda. Contohnya: `str1 = 'Hello'` atau `str2 = \"World\"`."
            },
            {
                "question": "Bagaimana cara mengakses karakter dalam string?",
                "answer": "Anda bisa mengakses karakter dalam string dengan menggunakan indeks. Contohnya: `str1[0]` untuk karakter pertama."
            },
            {
                "question": "Bagaimana cara menggabungkan dua string di Python?",
                "answer": "Anda bisa menggabungkan dua string dengan menggunakan operator `+`. Contohnya: `str1 + str2`."
            },
            {
                "question": "Bagaimana cara mengulang string beberapa kali di Python?",
                "question_code": "str1 * 3",
                "answer": "Anda bisa mengulang string beberapa kali dengan menggunakan operator `*`. Contohnya: `str1 * 3`.",
                "answer_code": "str1 * 3"
            },
            {
                "question": "Bagaimana cara memeriksa apakah substring ada dalam string di Python?",
                "question_code": "'Hello' in str1",
                "answer": "Anda bisa memeriksa apakah substring ada dalam string dengan menggunakan operator `in`. Contohnya: `'Hello' in str1`.",
                "answer_code": "'Hello' in str1"
            },
            {
                "question": "Bagaimana cara mengganti substring dalam string di Python?",
                "question_code": "str1.replace('Hello', 'Hi')",
                "answer": "Anda bisa mengganti substring dalam string dengan menggunakan metode `replace()`. Contohnya: `str1.replace('Hello', 'Hi')`.",
                "answer_code": "str1.replace('Hello', 'Hi')"
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf besar di Python?",
                "question_code": "str1.upper()",
                "answer": "Anda bisa mengubah string menjadi huruf besar dengan menggunakan metode `upper()`. Contohnya: `str1.upper()`.",
                "answer_code": "str1.upper()"
            },
            {
                "question": "Bagaimana cara menghapus spasi di awal dan akhir string di Python?",
                "question_code": "str1.strip()",
                "answer": "Anda bisa menghapus spasi di awal dan akhir string dengan menggunakan metode `strip()`. Contohnya: `str1.strip()`.",
                "answer_code": "str1.strip()"
            },
            {
                "question": "Bagaimana cara memformat string dengan variabel di Python?",
                "question_code": "\"Hello, {}\".format(name)",
                "answer": "Anda bisa memformat string dengan variabel menggunakan metode `format()`. Contohnya: `\"Hello, {}\".format(name)`.",
                "answer_code": "\"Hello, {}\".format(name)"
            }
        ]
    }
]
