[
    {
        "sumber": "pythonuntukpemula.com",
        "penulis": "Teguh Pramono",
        "tanggal": "2023-02-14",
        "judul": "Penggunaan Operasi String di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "string", "operasi dasar"],
        "konten": "Artikel ini menjelaskan berbagai operasi dasar pada string di Python, seperti penggabungan, pengulangan, dan pemeriksaan substring.",
        "pertanyaan": [
            {
                "question": "Bagaimana caranya menggabungkan dua string di Python? Saya bingung kok nggak bisa ya?",
                "question_code": "concat(str1, str2)",
                "answer": "Anda bisa menggabungkan dua string dengan menggunakan operator `+`. Contohnya: `str1 + str2`.",
                "answer_code": "str1 = 'Hello'\nstr2 = 'World'\nresult = str1 + ' ' + str2"
            },
            {
                "question": "Gimana caranya mengulang string beberapa kali di Python? Saya pakai str1 kali 3 tapi kok salah ya?",
                "question_code": "str1.repeat(3)",
                "answer": "Anda bisa mengulang string beberapa kali dengan menggunakan operator `*`. Contohnya: `str1 * 3`.",
                "answer_code": "str1 = 'Hello'\nrepeated_string = str1 * 3"
            },
            {
                "question": "Kalau mau cek apakah substring ada di dalam string gimana? Saya coba str1.includes('Hello') tapi nggak jalan.",
                "question_code": "str1.includes('Hello')",
                "answer": "Anda bisa memeriksa apakah substring ada dalam string dengan menggunakan operator `in`. Contohnya: `'Hello' in str1`.",
                "answer_code": "str1 = 'Hello, world'\nresult = 'Hello' in str1"
            },
            {
                "question": "Gimana cara cari posisi substring dalam string? Saya coba pakai str1.locate('world') tapi error.",
                "question_code": "str1.locate('world')",
                "answer": "Anda bisa menemukan posisi substring dalam string dengan menggunakan metode `find()`. Contohnya: `str1.find('world')`.",
                "answer_code": "str1 = 'Hello, world'\nposition = str1.find('world')"
            },
            {
                "question": "Kalau mau ganti substring dalam string gimana ya? Saya coba str1.switch('Hello', 'Hi') tapi salah.",
                "question_code": "str1.switch('Hello', 'Hi')",
                "answer": "Anda bisa mengganti substring dalam string dengan menggunakan metode `replace()`. Contohnya: `str1.replace('Hello', 'Hi')`.",
                "answer_code": "str1 = 'Hello, world'\nnew_string = str1.replace('Hello', 'Hi')"
            },
            {
                "question": "Gimana caranya bagi string jadi daftar kata? Saya coba str1.divide() tapi nggak bisa.",
                "question_code": "str1.divide()",
                "answer": "Anda bisa membagi string menjadi list dengan menggunakan metode `split()`. Contohnya: `str1.split()`.",
                "answer_code": "str1 = 'Hello world'\nwords = str1.split()"
            },
            {
                "question": "Saya punya daftar kata, gimana cara gabunginnya jadi satu string? Pakai merge(words) kok error.",
                "question_code": "merge(words)",
                "answer": "Anda bisa menggabungkan list menjadi string dengan menggunakan metode `join()`. Contohnya: `' '.join(['Hello', 'world'])`.",
                "answer_code": "words = ['Hello', 'world']\njoined_string = ' '.join(words)"
            },
            {
                "question": "Gimana caranya ubah string jadi huruf besar? Pakai str1.big() kok nggak jalan.",
                "question_code": "str1.big()",
                "answer": "Anda bisa mengubah string menjadi huruf besar dengan menggunakan metode `upper()`. Contohnya: `str1.upper()`.",
                "answer_code": "str1 = 'hello'\nupper_string = str1.upper()"
            },
            {
                "question": "Kalau mau ubah string jadi huruf kecil gimana ya? Saya coba str1.small() tapi nggak bisa.",
                "question_code": "str1.small()",
                "answer": "Anda bisa mengubah string menjadi huruf kecil dengan menggunakan metode `lower()`. Contohnya: `str1.lower()`.",
                "answer_code": "str1 = 'HELLO'\nlower_string = str1.lower()"
            }
        ]
    },
    {
        "sumber": "belajarpemrograman.net",
        "penulis": "Dedi Setiawan",
        "tanggal": "2024-05-18",
        "judul": "Penggunaan Fungsi dan Return di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "fungsi", "return"],
        "konten": "Artikel ini menjelaskan cara mendefinisikan fungsi di Python, cara memanggil fungsi, serta cara menggunakan pernyataan return untuk mengembalikan nilai dari fungsi.",
        "pertanyaan": [
            {
                "question": "Gimana caranya bikin fungsi di Python? Saya beneran nggak tahu harus mulai dari mana.",
                "answer": "Anda bisa mendefinisikan fungsi dengan menggunakan kata kunci `def` diikuti dengan nama fungsi dan tanda kurung. Contohnya: `def my_function():`."
            },
            {
                "question": "Saya sudah bikin fungsi, tapi gimana caranya memanggilnya? Nggak ngerti deh.",
                "answer": "Anda bisa memanggil fungsi dengan menulis nama fungsi diikuti dengan tanda kurung. Contohnya: `my_function()`."
            },
            {
                "question": "Kalau mau bikin fungsi yang bisa terima input gimana ya? Bingung nih.",
                "answer": "Anda bisa mendefinisikan fungsi dengan parameter dengan menambahkan parameter di dalam tanda kurung setelah nama fungsi. Contohnya: `def my_function(param1, param2):`."
            },
            {
                "question": "Saya mau fungsi balikin nilai, gimana caranya? Kok pakai return42 nggak bisa?",
                "question_code": "def my_function():\n    return42",
                "answer": "Anda bisa mengembalikan nilai dari fungsi dengan menggunakan kata kunci `return`. Contohnya: `return 42`.",
                "answer_code": "def my_function():\n    return 42"
            },
            {
                "question": "Gimana bikin fungsi dengan nilai default? Saya masih bingung cara buatnya.",
                "question_code": "def my_function(x, y):\n    y = 10\n    return x + y",
                "answer": "Anda bisa mendefinisikan fungsi dengan parameter default dengan memberikan nilai default pada parameter. Contohnya: `def my_function(x, y=10):`.",
                "answer_code": "def my_function(x, y=10):\n    return x + y"
            },
            {
                "question": "Kalau fungsi bisa terima banyak input gimana ya? Saya pakai def my_function(args*) kok error.",
                "question_code": "def my_function(args*):\n    for arg in args:\n        print(arg)",
                "answer": "Anda bisa mendefinisikan fungsi dengan jumlah argumen tak terbatas dengan menggunakan tanda bintang `*` sebelum nama parameter. Contohnya: `def my_function(*args):`.",
                "answer_code": "def my_function(*args):\n    for arg in args:\n        print(arg)"
            },
            {
                "question": "Mau bikin fungsi yang bisa terima banyak pasangan kunci-nilai gimana ya? Saya pakai def my_function(kvargs**) kok salah.",
                "question_code": "def my_function(kvargs**):\n    for key, value in kvargs.items():\n        print(key, value)",
                "answer": "Anda bisa mendefinisikan fungsi dengan jumlah pasangan kunci-nilai tak terbatas dengan menggunakan dua tanda bintang `**` sebelum nama parameter. Contohnya: `def my_function(**kwargs):`.",
                "answer_code": "def my_function(**kwargs):\n    for key, value in kwargs.items():\n        print(key, value)"
            },
            {
                "question": "Fungsi di dalam fungsi itu gimana ya? Saya nggak paham cara bikinnya.",
                "question_code": "def outer_function():\n    def inner_function():\n        return 'Hello'\ninner_function()",
                "answer": "Anda bisa mendefinisikan fungsi dalam fungsi lain dengan menuliskan definisi fungsi di dalam fungsi lain. Contohnya: `def outer_function(): def inner_function():`.",
                "answer_code": "def outer_function():\n    def inner_function():\n        print('Hello from inner function')\n    inner_function()"
            },
            {
                "question": "Fungsi lambda itu apa ya? Gimana pakainya buat argumen? Bingung banget.",
                "question_code": "def apply_function(x, f):\n    f(x)\napply_function(5, lambda x: x + 2)",
                "answer": "Anda bisa menggunakan fungsi lambda sebagai argumen fungsi lain dengan mendefinisikan lambda di dalam panggilan fungsi. Contohnya: `apply_function(5, lambda x: x * 2)`.",
                "answer_code": "def apply_function(x, func):\n    return func(x)\nresult = apply_function(5, lambda x: x * 2)"
            }
        ]
    }
]
