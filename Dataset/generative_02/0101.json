[
    {
        "sumber": "belajarpemrogramanpython.com",
        "penulis": "Andi Firmansyah",
        "tanggal": "2023-03-22",
        "judul": "Penggunaan Fungsi Built-in untuk String di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "string", "built-in functions"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi built-in untuk memanipulasi string di Python, seperti `len()`, `str()`, `upper()`, `lower()`, dan `split()`.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mengukur panjang string di Python?",
                "answer": "Anda bisa mengukur panjang string dengan menggunakan fungsi `len()`. Contohnya: `len('hello')`."
            },
            {
                "question": "Bagaimana cara mengubah tipe data menjadi string di Python?",
                "answer": "Anda bisa mengubah tipe data menjadi string dengan menggunakan fungsi `str()`. Contohnya: `str(123)`."
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf besar di Python?",
                "question_code": "my_string = 'hello'\nupper_string = my_string.upper()",
                "answer": "Anda bisa mengubah string menjadi huruf besar dengan menggunakan metode `upper()`. Contohnya: `my_string.upper()`.",
                "answer_code": "my_string = 'hello'\nupper_string = my_string.upper()"
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf kecil di Python?",
                "question_code": "my_string = 'HELLO'\nlower_string = my_string.lower()",
                "answer": "Anda bisa mengubah string menjadi huruf kecil dengan menggunakan metode `lower()`. Contohnya: `my_string.lower()`.",
                "answer_code": "my_string = 'HELLO'\nlower_string = my_string.lower()"
            },
            {
                "question": "Bagaimana cara memisahkan string menjadi list di Python?",
                "question_code": "my_string = 'hello world'\nwords = my_string.split()",
                "answer": "Anda bisa memisahkan string menjadi list dengan menggunakan metode `split()`. Contohnya: `my_string.split()`.",
                "answer_code": "my_string = 'hello world'\nwords = my_string.split()"
            },
            {
                "question": "Bagaimana cara menggabungkan list menjadi string di Python?",
                "question_code": "words = ['hello', 'world']\nmy_string = ' '.join(words)",
                "answer": "Anda bisa menggabungkan list menjadi string dengan menggunakan metode `join()`. Contohnya: `' '.join(words)`.",
                "answer_code": "words = ['hello', 'world']\nmy_string = ' '.join(words)"
            },
            {
                "question": "Bagaimana cara mengganti substring dalam string di Python?",
                "question_code": "my_string = 'hello world'\nnew_string = my_string.replace('world', 'Python')",
                "answer": "Anda bisa mengganti substring dalam string dengan menggunakan metode `replace()`. Contohnya: `my_string.replace('world', 'Python')`.",
                "answer_code": "my_string = 'hello world'\nnew_string = my_string.replace('world', 'Python')"
            },
            {
                "question": "Bagaimana cara menghapus spasi di awal dan akhir string di Python?",
                "question_code": "my_string = ' hello world '\ntrimmed_string = my_string.strip()",
                "answer": "Anda bisa menghapus spasi di awal dan akhir string dengan menggunakan metode `strip()`. Contohnya: `my_string.strip()`.",
                "answer_code": "my_string = ' hello world '\ntrimmed_string = my_string.strip()"
            },
            {
                "question": "Bagaimana cara memeriksa apakah string dimulai dengan substring tertentu di Python?",
                "question_code": "my_string = 'hello world'\nresult = my_string.startswith('hello')",
                "answer": "Anda bisa memeriksa apakah string dimulai dengan substring tertentu dengan menggunakan metode `startswith()`. Contohnya: `my_string.startswith('hello')`.",
                "answer_code": "my_string = 'hello world'\nresult = my_string.startswith('hello')"
            }
        ]
    },
    {
        "sumber": "belajarpython.net",
        "penulis": "Siti Aminah",
        "tanggal": "2024-01-12",
        "judul": "Penggunaan Kondisi dan Loop di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "kondisi", "loop"],
        "konten": "Artikel ini menjelaskan cara menggunakan kondisi dan loop di Python, termasuk pernyataan `if`, `else`, `elif`, dan loop `for` serta `while`.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan pernyataan `if` di Python?",
                "answer": "Pernyataan `if` digunakan untuk menjalankan blok kode tertentu jika kondisi yang diberikan benar. Contohnya: `if x > 0: print('x positif')`."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `else` di Python?",
                "answer": "Pernyataan `else` digunakan untuk menjalankan blok kode jika kondisi dalam pernyataan `if` salah. Contohnya: `else: print('x tidak positif')`."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `elif` di Python?",
                "answer": "Pernyataan `elif` digunakan untuk memeriksa kondisi lain jika kondisi dalam pernyataan `if` sebelumnya salah. Contohnya: `elif x == 0: print('x nol')`."
            },
            {
                "question": "Bagaimana cara menulis loop `for` di Python?",
                "question_code": "for i in range(5):\n    print(i)",
                "answer": "Anda bisa menulis loop `for` dengan menggunakan sintaks `for item in iterable:` diikuti dengan blok kode yang akan diulang. Contohnya: `for i in range(5): print(i)`.",
                "answer_code": "for i in range(5):\n    print(i)"
            },
            {
                "question": "Bagaimana cara menulis loop `while` di Python?",
                "question_code": "x = 0\nwhile x < 5:\n    print(x)\n    x += 1",
                "answer": "Anda bisa menulis loop `while` dengan menggunakan sintaks `while condition:` diikuti dengan blok kode yang akan diulang. Contohnya: `while x < 5: print(x)`.",
                "answer_code": "x = 0\nwhile x < 5:\n    print(x)\n    x += 1"
            },
            {
                "question": "Bagaimana cara menghentikan loop di Python?",
                "question_code": "for i in range(10):\n    if i == 5:\n        break\n    print(i)",
                "answer": "Anda bisa menghentikan loop dengan menggunakan pernyataan `break`. Contohnya: `if i == 5: break`.",
                "answer_code": "for i in range(10):\n    if i == 5:\n        break\n    print(i)"
            },
            {
                "question": "Bagaimana cara melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya dalam loop?",
                "question_code": "for i in range(10):\n    if i % 2 == 0:\n        continue\n    print(i)",
                "answer": "Anda bisa melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya dengan menggunakan pernyataan `continue`. Contohnya: `if i % 2 == 0: continue`.",
                "answer_code": "for i in range(10):\n    if i % 2 == 0:\n        continue\n    print(i)"
            },
            {
                "question": "Bagaimana cara menggunakan loop bersarang di Python?",
                "question_code": "for i in range(3):\n    for j in range(3):\n        print(i, j)",
                "answer": "Anda bisa menggunakan loop bersarang dengan menempatkan satu loop di dalam loop lainnya. Contohnya: `for i in range(3): for j in range(3):`.",
                "answer_code": "for i in range(3):\n    for j in range(3):\n        print(i, j)"
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `else` dalam loop di Python?",
                "question_code": "for i in range(5):\n    print(i)\nelse:\n    print('Loop selesai')",
                "answer": "Anda bisa menggunakan pernyataan `else` dalam loop untuk menjalankan blok kode jika loop selesai tanpa intervensi `break`. Contohnya: `else: print('Loop selesai')`.",
                "answer_code": "for i in range(5):\n    print(i)\nelse:\n    print('Loop selesai')"
            }
        ]
    }
]
