[
    {
        "sumber": "belajarpemrograman.com",
        "penulis": "Ahmad Fajar",
        "tanggal": "2023-01-18",
        "judul": "Penggunaan Kondisional di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "kondisional", "if else"],
        "konten": "Artikel ini menjelaskan cara menggunakan pernyataan kondisional di Python, termasuk if, elif, dan else untuk membuat keputusan dalam program.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan pernyataan if di Python?",
                "answer": "Pernyataan if digunakan untuk menjalankan blok kode tertentu jika kondisi yang diberikan benar. Contohnya: if x > 0: print('x positif')."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan else di Python?",
                "answer": "Pernyataan else digunakan untuk menjalankan blok kode jika kondisi dalam pernyataan if salah. Contohnya: else: print('x tidak positif')."
            },
            {
                "question": "Apa bedanya elif dengan if dan else di Python?",
                "question_code": "x = 0\nif x > 0\n    print('x positif')\nelif x == 0\nprint('x nol')",
                "answer": "Pernyataan elif digunakan untuk memeriksa kondisi lain jika kondisi dalam pernyataan if sebelumnya salah. Contohnya: elif x == 0: print('x nol').",
                "answer_code": "x = 0\nif x > 0:\n    print('x positif')\nelif x == 0:\n    print('x nol')"
            },
            {
                "question": "Bagaimana cara menggunakan operator logika dalam pernyataan if?",
                "question_code": "x = 5\ny = 10\nif x > 0 && y > 0\n    print('Keduanya positif')",
                "answer": "Anda bisa menggunakan operator logika seperti and, or, dan not dalam pernyataan if. Contohnya: if x > 0 and y > 0: print('Keduanya positif').",
                "answer_code": "x = 5\ny = 10\nif x > 0 and y > 0:\n    print('Keduanya positif')"
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan if bersarang di Python?",
                "question_code": "x = 5\nif x > 0\n    if x < 10\nprint('x kurang dari 10')",
                "answer": "Anda bisa menggunakan pernyataan if bersarang dengan menempatkan satu pernyataan if di dalam pernyataan if lainnya. Contohnya: if x > 0: if x < 10: print('x adalah bilangan positif kurang dari 10').",
                "answer_code": "x = 5\nif x > 0:\n    if x < 10:\n        print('x adalah bilangan positif kurang dari 10')"
            },
            {
                "question": "Bagaimana cara memeriksa kesamaan dua nilai di Python?",
                "question_code": "a = 5\nb = 5\nif a = b\n    print('a sama dengan b')",
                "answer": "Anda bisa memeriksa kesamaan dua nilai dengan menggunakan operator ==. Contohnya: if a == b: print('a sama dengan b').",
                "answer_code": "a = 5\nb = 5\nif a == b:\n    print('a sama dengan b')"
            },
            {
                "question": "Bagaimana cara memeriksa ketidaksamaan dua nilai di Python?",
                "question_code": "a = 5\nb = 3\nif a <> b\n    print('a tidak sama dengan b')",
                "answer": "Anda bisa memeriksa ketidaksamaan dua nilai dengan menggunakan operator !=. Contohnya: if a != b: print('a tidak sama dengan b').",
                "answer_code": "a = 5\nb = 3\nif a != b:\n    print('a tidak sama dengan b')"
            },
            {
                "question": "Bagaimana cara memeriksa apakah satu nilai lebih besar dari nilai lainnya di Python?",
                "question_code": "a = 5\nb = 3\nif a > b\nprint('a lebih besar dari b')",
                "answer": "Anda bisa memeriksa apakah satu nilai lebih besar dari nilai lainnya dengan menggunakan operator >. Contohnya: if a > b: print('a lebih besar dari b').",
                "answer_code": "a = 5\nb = 3\nif a > b:\n    print('a lebih besar dari b')"
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan else dalam loop for di Python?",
                "question_code": "for i in range(5)\nprint(i)\nelse\nprint('Loop selesai')",
                "answer": "Anda bisa menggunakan pernyataan else dalam loop for untuk menjalankan blok kode jika loop selesai tanpa intervensi break. Contohnya: else: print('Loop selesai').",
                "answer_code": "for i in range(5):\n    print(i)\nelse:\n    print('Loop selesai')"
            }
        ]
    },
    {
        "sumber": "pythonpemula.com",
        "penulis": "Budi Setiawan",
        "tanggal": "2024-04-12",
        "judul": "Penggunaan Fungsi dan Modul di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "fungsi", "modul"],
        "konten": "Artikel ini menjelaskan cara mendefinisikan fungsi di Python, cara memanggil fungsi, serta cara mengimpor dan menggunakan modul.",
        "pertanyaan": [
            {
                "question": "Gimana cara bikin fungsi di Python?",
                "answer": "Anda bisa mendefinisikan fungsi dengan menggunakan kata kunci def diikuti dengan nama fungsi dan tanda kurung. Contohnya: def my_function():"
            },
            {
                "question": "Kalau sudah bikin fungsi, gimana cara pakenya?",
                "answer": "Anda bisa memanggil fungsi dengan menulis nama fungsi diikuti dengan tanda kurung. Contohnya: my_function()."
            },
            {
                "question": "Gimana cara import modul di Python?",
                "question_code": "import maths",
                "answer": "Anda bisa mengimpor modul dengan menggunakan kata kunci import diikuti dengan nama modul. Contohnya: import math.",
                "answer_code": "import math"
            },
            {
                "question": "Gimana cara pakai fungsi dalam modul yang sudah diimport?",
                "question_code": "import math\nhasil = sqrt(16)",
                "answer": "Anda bisa menggunakan fungsi dalam modul yang telah diimpor dengan menulis nama modul diikuti dengan tanda titik dan nama fungsi. Contohnya: math.sqrt(16).",
                "answer_code": "import math\nresult = math.sqrt(16)"
            },
            {
                "question": "Bagaimana cara bikin fungsi dengan parameter di Python?",
                "question_code": "def my_function(param1, param2)\nreturn param1 + param2",
                "answer": "Anda bisa mendefinisikan fungsi dengan parameter dengan menambahkan parameter di dalam tanda kurung setelah nama fungsi. Contohnya: def my_function(param1, param2):",
                "answer_code": "def my_function(param1, param2):\n    return param1 + param2"
            },
            {
                "question": "Gimana caranya fungsi mengembalikan nilai di Python?",
                "question_code": "def my_function()\nreturn 42",
                "answer": "Anda bisa mengembalikan nilai dari fungsi dengan menggunakan kata kunci return. Contohnya: return 42.",
                "answer_code": "def my_function():\n    return 42"
            },
            {
                "question": "Gimana cara import modul pakai alias di Python?",
                "question_code": "import numpy like np",
                "answer": "Anda bisa mengimpor modul dengan alias dengan menggunakan kata kunci as setelah nama modul. Contohnya: import numpy as np.",
                "answer_code": "import numpy as np"
            },
            {
                "question": "Gimana cara import fungsi tertentu dari modul di Python?",
                "question_code": "from math import squareroot",
                "answer": "Anda bisa mengimpor fungsi tertentu dari modul dengan menggunakan sintaks from modul import fungsi. Contohnya: from math import sqrt.",
                "answer_code": "from math import sqrt"
            },
            {
                "question": "Gimana caranya bikin fungsi dengan parameter default di Python?",
                "question_code": "def my_function(x, y=10)\nreturn x + y",
                "answer": "Anda bisa mendefinisikan fungsi dengan parameter default dengan memberikan nilai default pada parameter. Contohnya: def my_function(x, y=10):",
                "answer_code": "def my_function(x, y=10):\n    return x + y"
            }
        ]
    }
]
