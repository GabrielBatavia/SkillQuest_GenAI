[
    {
        "sumber": "pythonmudah.com",
        "penulis": "Agus Wijaya",
        "tanggal": "2023-03-12",
        "judul": "Penggunaan Fungsi Lambda di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "lambda", "fungsi"],
        "konten": "Artikel ini menjelaskan cara mendefinisikan dan menggunakan fungsi lambda di Python untuk membuat fungsi anonim yang singkat.",
        "pertanyaan": [
            {
                "question": "Apakah Anda merasa pusing dengan konsep 'fungsi lambda'? Bisa dijelaskan dengan lebih sederhana?",
                "answer": "Fungsi lambda adalah fungsi anonim kecil yang dapat memiliki sejumlah argumen tetapi hanya satu ekspresi."
            },
            {
                "question": "Sepertinya Anda mungkin belum memahami cara mendefinisikan fungsi lambda. Bisa jelaskan caranya?",
                "answer": "Anda bisa mendefinisikan fungsi lambda dengan menggunakan kata kunci `lambda` diikuti dengan argumen dan ekspresi. Contohnya: `lambda x: x * 2`."
            },
            {
                "question": "Apa yang harus Anda lakukan jika Anda bingung tentang cara fungsi lambda bekerja dengan map?",
                "question_code": "list(map(lambda x: x * 2, [1, 2, 3]))",
                "answer": "Anda bisa menggunakan fungsi lambda dengan `map()` untuk menerapkan fungsi ke setiap elemen dalam iterable. Contohnya: `map(lambda x: x * 2, [1, 2, 3])`.",
                "answer_code": "list(map(lambda x: x * 2, [1, 2, 3]))"
            },
            {
                "question": "Bagaimana jika Anda kesulitan memahami penggunaan fungsi lambda dengan filter?",
                "question_code": "list(filter(lambda x: x % 2 == 0, [1, 2, 3, 4]))",
                "answer": "Anda bisa menggunakan fungsi lambda dengan `filter()` untuk menyaring elemen dalam iterable. Contohnya: `filter(lambda x: x % 2 == 0, [1, 2, 3, 4])`.",
                "answer_code": "list(filter(lambda x: x % 2 == 0, [1, 2, 3, 4]))"
            },
            {
                "question": "Jika Anda merasa bingung tentang bagaimana lambda digunakan dengan reduce, apa langkah selanjutnya?",
                "question_code": "from functools import reduce\nreduce(lambda x, y: x + y, [1, 2, 3, 4])",
                "answer": "Anda bisa menggunakan fungsi lambda dengan `reduce()` untuk menerapkan fungsi secara kumulatif ke elemen-elemen dalam iterable. Contohnya: `reduce(lambda x, y: x + y, [1, 2, 3, 4])`.",
                "answer_code": "from functools import reduce\nreduce(lambda x, y: x + y, [1, 2, 3, 4])"
            },
            {
                "question": "Apakah Anda merasa masih bingung tentang bagaimana fungsi lambda digunakan di dalam sorted?",
                "question_code": "sorted([('a', 3), ('b', 2), ('c', 1)], key=lambda x: x[1])",
                "answer": "Anda bisa menggunakan fungsi lambda di dalam `sorted()` untuk menentukan kunci pengurutan. Contohnya: `sorted([('a', 3), ('b', 2), ('c', 1)], key=lambda x: x[1])`.",
                "answer_code": "sorted([('a', 3), ('b', 2), ('c', 1)], key=lambda x: x[1])"
            },
            {
                "question": "Jika Anda tidak yakin tentang mendefinisikan fungsi lambda dengan beberapa argumen, apa yang harus dilakukan?",
                "question_code": "lambda x, y: x + y",
                "answer": "Anda bisa mendefinisikan fungsi lambda dengan beberapa argumen dengan memisahkan argumen menggunakan koma. Contohnya: `lambda x, y: x + y`.",
                "answer_code": "lambda x, y: x + y"
            },
            {
                "question": "Apa langkah Anda jika Anda bingung tentang cara menggunakan fungsi lambda dengan list comprehension?",
                "question_code": "[lambda x: x * 2 for x in range(5)]",
                "answer": "Anda bisa menggunakan fungsi lambda dengan list comprehension untuk membuat list fungsi. Contohnya: `[lambda x: x * 2 for x in range(5)]`.",
                "answer_code": "[lambda x: x * 2 for x in range(5)]"
            },
            {
                "question": "Bagaimana jika Anda merasa sulit menggunakan fungsi lambda dalam dictionary comprehension?",
                "question_code": "{x: (lambda x: x * 2)(x) for x in range(5)}",
                "answer": "Anda bisa menggunakan fungsi lambda di dalam dictionary comprehension untuk membuat dictionary. Contohnya: `{x: (lambda x: x * 2)(x) for x in range(5)}`.",
                "answer_code": "{x: (lambda x: x * 2)(x) for x in range(5)}"
            }
        ]
    },
    {
        "sumber": "belajarpython.org",
        "penulis": "Indra Kurniawan",
        "tanggal": "2024-01-20",
        "judul": "Penggunaan Struktur Data List di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "list", "struktur data"],
        "konten": "Artikel ini menjelaskan cara menggunakan list di Python, termasuk cara membuat, mengakses, menambah, menghapus, dan memanipulasi elemen dalam list.",
        "pertanyaan": [
            {
                "question": "Jika Anda baru memulai dengan Python, bagaimana Anda memahami konsep list?",
                "answer": "List adalah struktur data yang dapat menyimpan beberapa item dalam satu variabel dan diakses menggunakan indeks."
            },
            {
                "question": "Bagaimana Anda bisa membuat list jika Anda tidak familiar dengan cara membuatnya?",
                "answer": "Anda bisa membuat list dengan menggunakan tanda kurung siku `[]` dan memisahkan item dengan koma. Contohnya: `my_list = [1, 2, 3]`."
            },
            {
                "question": "Anda mungkin bingung tentang cara mengakses elemen dalam list. Apa langkah yang harus diambil?",
                "answer": "Anda bisa mengakses elemen dalam list dengan menggunakan indeks. Contohnya: `my_list[0]`."
            },
            {
                "question": "Jika Anda tidak tahu bagaimana menambahkan elemen ke dalam list, apa yang bisa dilakukan?",
                "question_code": "my_list.append(4)",
                "answer": "Anda bisa menambahkan elemen ke dalam list dengan menggunakan metode `append()`. Contohnya: `my_list.append(4)`.",
                "answer_code": "my_list.append(4)"
            },
            {
                "question": "Apa yang harus Anda lakukan jika Anda tidak tahu cara menghapus elemen dari list?",
                "question_code": "my_list.remove(2)",
                "answer": "Anda bisa menghapus elemen dari list dengan menggunakan metode `remove()`. Contohnya: `my_list.remove(2)`.",
                "answer_code": "my_list.remove(2)"
            },
            {
                "question": "Jika Anda bingung tentang cara mengurutkan elemen dalam list, apa yang bisa Anda lakukan?",
                "question_code": "my_list.sort()",
                "answer": "Anda bisa mengurutkan elemen dalam list dengan menggunakan metode `sort()`. Contohnya: `my_list.sort()`.",
                "answer_code": "my_list.sort()"
            },
            {
                "question": "Bagaimana jika Anda tidak tahu cara membalik urutan elemen dalam list?",
                "question_code": "my_list.reverse()",
                "answer": "Anda bisa membalik urutan elemen dalam list dengan menggunakan metode `reverse()`. Contohnya: `my_list.reverse()`.",
                "answer_code": "my_list.reverse()"
            },
            {
                "question": "Jika Anda merasa kesulitan menemukan indeks elemen dalam list, apa yang harus dilakukan?",
                "question_code": "my_list.index(3)",
                "answer": "Anda bisa menemukan indeks elemen dalam list dengan menggunakan metode `index()`. Contohnya: `my_list.index(3)`.",
                "answer_code": "my_list.index(3)"
            },
            {
                "question": "Apa yang harus Anda lakukan jika Anda tidak tahu cara menghitung jumlah kemunculan elemen dalam list?",
                "question_code": "my_list.count(2)",
                "answer": "Anda bisa menghitung jumlah kemunculan elemen dalam list dengan menggunakan metode `count()`. Contohnya: `my_list.count(2)`.",
                "answer_code": "my_list.count(2)"
            }
        ]
    }
]
