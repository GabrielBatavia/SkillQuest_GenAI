[
    {
        "sumber": "Python Basics",
        "penulis": "Laura Smith",
        "tanggal": "2024-11-12",
        "judul": "Menggabungkan Dua List di Python: `extend()` vs `+` Operator",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "extend", "Operator", "Pemula"],
        "konten": "Pelajari cara efektif untuk menggabungkan dua list di Python menggunakan metode `extend()` dan operator `+`. Artikel ini membahas perbedaan antara kedua metode dan memberikan contoh praktis untuk pemula.",
        "pertanyaan": [
            {
                "question": "Apa hasil dari menggabungkan list `[1, 3, 5]` dengan `[7, 9, 11]` menggunakan `extend()`?",
                "answer": "Dengan menggunakan `extend()`, list pertama akan dimodifikasi secara langsung. Misalnya, jika `list_one = [1, 3, 5]; list_one.extend([7, 9, 11])`, maka `list_one` setelah operasi menjadi `[1, 3, 5, 7, 9, 11]`."
            },
            {
                "question": "Apa yang terjadi jika Anda menggabungkan list `[10, 20]` dan `[30, 40]` menggunakan operator `+`?",
                "answer": "Operator `+` akan menghasilkan list baru tanpa memodifikasi list asli. Jika `result = [10, 20] + [30, 40]`, maka `result` adalah `[10, 20, 30, 40]`."
            },
            {
                "question": "Bagaimana cara menggabungkan list `[50, 100]` dan `[150, 200]` tanpa mengubah list awal menggunakan `extend()`?",
                "answer": "Untuk menggabungkan tanpa mengubah list awal, buat salinan dari list awal dan gunakan `extend()`. Contoh: `original_list = [50, 100]; new_list = original_list.copy(); new_list.extend([150, 200])` menghasilkan `new_list` menjadi `[50, 100, 150, 200]`."
            },
            {
                "question": "Apa yang menyebabkan error saat menggabungkan list `[3, 6]` dengan dictionary `{8: 'eight'}` menggunakan operator `+`?",
                "question_code": "list_a = [3, 6]\nresult = list_a + {8: 'eight'}",
                "answer": "Error ini terjadi karena operator `+` tidak dapat menggabungkan list dengan dictionary. Untuk mengatasi ini, konversikan dictionary menjadi list sebelum penggabungan.",
                "answer_code": "list_a = [3, 6]\nresult = list_a + list({8: 'eight'}.items())"
            },
            {
                "question": "Apa yang akan terjadi jika Anda menggunakan `extend()` untuk menggabungkan list `[2, 4, 6]` dengan set `{8, 10}`?",
                "question_code": "list_b = [2, 4, 6]\nlist_b.extend({8, 10})",
                "answer": "Set akan diubah menjadi iterable dalam `extend()`, dan elemen dari set akan ditambahkan ke list. Misalnya, setelah `list_b.extend({8, 10})`, `list_b` akan menjadi `[2, 4, 6, 8, 10]`."
            },
            {
                "question": "Bagaimana Anda menggabungkan list `[12, 24]` dan tuple `(36, 48)` menggunakan operator `+`?",
                "answer": "Operator `+` hanya dapat digunakan untuk menggabungkan list dengan list. Anda perlu mengonversi tuple menjadi list terlebih dahulu. Contoh: `result = [12, 24] + list((36, 48))` menghasilkan `[12, 24, 36, 48]`."
            },
            {
                "question": "Apa yang menyebabkan error 'TypeError: can only concatenate list (not 'float') to list' saat menggunakan operator `+`?",
                "question_code": "list_c = [1, 2]\nresult = list_c + 3.14",
                "answer": "Error ini muncul karena operator `+` tidak bisa menggabungkan list dengan tipe data selain list. Pastikan semua elemen yang digabungkan adalah list atau dapat diubah menjadi list.",
                "answer_code": "list_c = [1, 2]\nresult = list_c + [3.14]"
            },
            {
                "question": "Bagaimana cara menggabungkan list `[8, 16]` dan `[32, 64]` tanpa menggunakan `extend()` atau operator `+`?",
                "answer": "Anda dapat menggunakan metode `append()` dalam loop untuk menggabungkan list, seperti `list_x = [8, 16]; list_y = [32, 64]; for item in list_y: list_x.append(item)`, sehingga `list_x` menjadi `[8, 16, 32, 64]`."
            }
        ]
    },
    {
        "sumber": "Introduction to Python",
        "penulis": "Michael Brown",
        "tanggal": "2024-11-13",
        "judul": "Menggabungkan List di Python: `extend()` dan `+` Operator",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List", "extend", "Operator", "Pemula"],
        "konten": "Artikel ini membahas cara menggabungkan list di Python dengan menggunakan metode `extend()` dan operator `+`, lengkap dengan contoh untuk membantu pemula memahami perbedaan dan cara penggunaan masing-masing metode.",
        "pertanyaan": [
            {
                "question": "Apa yang terjadi saat Anda menggabungkan list `[4, 8]` dan `[12, 16]` menggunakan `extend()`?",
                "answer": "Dengan `extend()`, list pertama akan ditambahkan elemen dari list kedua secara langsung. Misalnya, jika `list_one = [4, 8]; list_one.extend([12, 16])`, maka `list_one` setelah operasi menjadi `[4, 8, 12, 16]`."
            },
            {
                "question": "Hasil dari menggabungkan list `[2, 4]` dengan `[6, 8]` menggunakan operator `+` adalah?",
                "answer": "Hasil penggabungan menggunakan operator `+` akan membuat list baru tanpa memodifikasi list asli. Contoh: `result = [2, 4] + [6, 8]` menghasilkan list baru `[2, 4, 6, 8]`."
            },
            {
                "question": "Bagaimana cara menggabungkan list `[9, 18]` dan `[27, 36]` tanpa memodifikasi list asli menggunakan `extend()`?",
                "answer": "Untuk menggabungkan tanpa memodifikasi list asli, buat salinan dari list awal dan gunakan `extend()`. Contoh: `list_initial = [9, 18]; list_copy = list_initial.copy(); list_copy.extend([27, 36])` menghasilkan `list_copy` menjadi `[9, 18, 27, 36]`."
            },
            {
                "question": "Kenapa Anda mungkin mendapatkan error saat mencoba menggabungkan list `[1, 2]` dengan `None` menggunakan operator `+`?",
                "question_code": "list_d = [1, 2]\nresult = list_d + None",
                "answer": "Error terjadi karena `None` bukan tipe data yang dapat digabungkan dengan list menggunakan operator `+`. Anda harus memastikan bahwa semua elemen yang digabungkan adalah list atau dapat diubah menjadi list.",
                "answer_code": "list_d = [1, 2]\nresult = list_d + [None]"
            },
            {
                "question": "Apa yang akan terjadi jika Anda mencoba menggabungkan list `[5, 10]` dan `{20, 30}` menggunakan `extend()`?",
                "question_code": "list_e = [5, 10]\nlist_e.extend({20, 30})",
                "answer": "`extend()` dapat menggabungkan set karena set adalah iterable. Hasilnya adalah list `[5, 10, 20, 30]` setelah operasi `extend()`."
            },
            {
                "question": "Bagaimana menggabungkan list `[14, 28]` dan tuple `(42, 56)` menggunakan operator `+`?",
                "answer": "Operator `+` tidak dapat menggabungkan list dengan tuple secara langsung. Konversikan tuple menjadi list sebelum penggabungan. Contoh: `result = [14, 28] + list((42, 56))` menghasilkan `[14, 28, 42, 56]`."
            },
            {
                "question": "Apa yang menyebabkan error 'TypeError: can only concatenate list (not 'str') to list' saat menggunakan operator `+`?",
                "question_code": "list_f = [7, 14]\nresult = list_f + 'string'",
                "answer": "Error ini terjadi karena operator `+` tidak bisa menggabungkan list dengan string. Gunakan konversi atau pastikan semua elemen yang digabungkan adalah list.",
                "answer_code": "list_f = [7, 14]\nresult = list_f + ['string']"
            },
            {
                "question": "Bagaimana cara menggabungkan list `[100, 200]` dan `[300, 400]` tanpa menggunakan `extend()` atau operator `+`?",
                "answer": "Anda bisa menggunakan metode `append()` dalam loop untuk menggabungkan list. Contoh: `list_z = [100, 200]; list_add = [300, 400]; for item in list_add: list_z.append(item)` sehingga `list_z` menjadi `[100, 200, 300, 400]`."
            }
        ]
    }
]
