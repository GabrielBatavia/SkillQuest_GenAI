[
    {
        "sumber": "belajarpemrogramanpython.com",
        "penulis": "Andi Firmansyah",
        "tanggal": "2023-03-22",
        "judul": "Penggunaan Fungsi Built-in untuk String di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "string", "built-in functions"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi built-in untuk memanipulasi string di Python, seperti `len()`, `str()`, `upper()`, `lower()`, dan `split()`.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mengukur panjang string di Python?",
                "answer": "Anda bisa mengukur panjang string dengan menggunakan fungsi `len()`. Contohnya: `len('hello')`."
            },
            {
                "question": "Bagaimana cara mengubah tipe data menjadi string di Python?",
                "answer": "Anda bisa mengubah tipe data menjadi string dengan menggunakan fungsi `str()`. Contohnya: `str(123)`."
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf besar di Python?",
                "question_code": "text = 'world'\ncapitalized_text = text.capitalize()",
                "answer": "Untuk mengubah string menjadi huruf besar, gunakan metode `upper()`. `capitalize()` hanya mengubah huruf pertama menjadi huruf besar, sedangkan `upper()` mengubah semua huruf menjadi huruf besar.",
                "answer_code": "text = 'world'\ncapitalized_text = text.upper()"
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf kecil di Python?",
                "question_code": "text = 'WORLD'\nnew_text = text.to_lower_case()",
                "answer": "Untuk mengubah string menjadi huruf kecil, gunakan metode `lower()`. Kode `to_lower_case()` tidak ada dalam Python. Kode yang benar adalah `text.lower()`.",
                "answer_code": "text = 'WORLD'\nnew_text = text.lower()"
            },
            {
                "question": "Bagaimana cara memisahkan string menjadi list di Python?",
                "question_code": "text = 'one;two;three'\nitems = text.split(';')",
                "answer": "Untuk memisahkan string, gunakan metode `split()` dengan parameter pemisah yang sesuai. Contoh: `text.split(';')` memisahkan string berdasarkan titik koma.",
                "answer_code": "text = 'one,two,three'\nitems = text.split(',')"
            },
            {
                "question": "Bagaimana cara menggabungkan list menjadi string di Python?",
                "question_code": "elements = ['one', 'two']\nresult = ''.append(elements)",
                "answer": "Untuk menggabungkan list menjadi string, gunakan metode `join()` dengan pemisah yang sesuai. `''.append()` tidak ada dalam Python. Kode yang benar adalah `', '.join(elements)`.",
                "answer_code": "elements = ['one', 'two']\nresult = ', '.join(elements)"
            },
            {
                "question": "Bagaimana cara mengganti substring dalam string di Python?",
                "question_code": "sentence = 'hello everyone'\nupdated_sentence = sentence.replace('everyone', 'all')",
                "answer": "Untuk mengganti substring dalam string, gunakan metode `replace()`. Contoh: `sentence.replace('everyone', 'all')` mengganti 'everyone' dengan 'all'.",
                "answer_code": "sentence = 'good morning'\nupdated_sentence = sentence.replace('morning', 'evening')"
            },
            {
                "question": "Bagaimana cara menghapus spasi di awal dan akhir string di Python?",
                "question_code": "string = '   test string   '\ncleaned_string = string.clean_spaces()",
                "answer": "Untuk menghapus spasi di awal dan akhir string, gunakan metode `strip()`. Kode `clean_spaces()` tidak ada. Kode yang benar adalah `string.strip()`.",
                "answer_code": "string = '   test string   '\ncleaned_string = string.strip()"
            },
            {
                "question": "Bagaimana cara memeriksa apakah string dimulai dengan substring tertentu di Python?",
                "question_code": "phrase = 'start here'\ncheck = phrase.begins_with('start')",
                "answer": "Untuk memeriksa apakah string dimulai dengan substring tertentu, gunakan metode `startswith()`. `begins_with()` tidak ada. Kode yang benar adalah `phrase.startswith('start')`.",
                "answer_code": "phrase = 'start here'\ncheck = phrase.startswith('start')"
            }
        ]
    },
    {
        "sumber": "belajarpython.net",
        "penulis": "Siti Aminah",
        "tanggal": "2024-01-12",
        "judul": "Penggunaan Kondisi dan Loop di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "kondisi", "loop"],
        "konten": "Artikel ini menjelaskan cara menggunakan kondisi dan loop di Python, termasuk pernyataan `if`, `else`, `elif`, dan loop `for` serta `while`.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan pernyataan `if` di Python?",
                "answer": "Pernyataan `if` digunakan untuk menjalankan blok kode tertentu jika kondisi yang diberikan benar. Contohnya: `if x > 0: print('x positif')`."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `else` di Python?",
                "answer": "Pernyataan `else` digunakan untuk menjalankan blok kode jika kondisi dalam pernyataan `if` salah. Contohnya: `else: print('x tidak positif')`."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `elif` di Python?",
                "answer": "Pernyataan `elif` digunakan untuk memeriksa kondisi lain jika kondisi dalam pernyataan `if` sebelumnya salah. Contohnya: `elif x == 0: print('x nol')`."
            },
            {
                "question": "Bagaimana cara menulis loop `for` di Python?",
                "question_code": "for number in range(5):\n    print(number * 3)",
                "answer": "Untuk menulis loop `for`, gunakan sintaks `for item in iterable:`. Dalam contoh ini, `number * 3` akan mencetak hasil perkalian setiap elemen dalam `range(5)` dengan 3.",
                "answer_code": "for number in range(5):\n    print(number)"
            },
            {
                "question": "Bagaimana cara menulis loop `while` di Python?",
                "question_code": "counter = 10\nwhile counter > 0:\n    print(counter)\n    counter -= 2",
                "answer": "Untuk menulis loop `while`, gunakan sintaks `while condition:`. Dalam contoh ini, `counter` dikurangi 2 pada setiap iterasi hingga mencapai 0.",
                "answer_code": "counter = 10\nwhile counter > 0:\n    print(counter)\n    counter -= 1"
            },
            {
                "question": "Bagaimana cara menghentikan loop di Python?",
                "question_code": "for num in range(8):\n    if num == 6:\n        exit_loop\n    print(num)",
                "answer": "Untuk menghentikan loop, gunakan pernyataan `break`. `exit_loop` bukanlah perintah yang valid. Kode yang benar adalah `break`.",
                "answer_code": "for num in range(8):\n    if num == 6:\n        break\n    print(num)"
            },
            {
                "question": "Bagaimana cara melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya dalam loop?",
                "question_code": "for index in range(6):\n    if index % 2 != 0:\n        skip_iteration\n    print(index)",
                "answer": "Untuk melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya, gunakan pernyataan `continue`. `skip_iteration` bukanlah perintah yang valid. Kode yang benar adalah `continue`.",
                "answer_code": "for index in range(6):\n    if index % 2 != 0:\n        continue\n    print(index)"
            },
            {
                "question": "Bagaimana cara menggunakan loop bersarang di Python?",
                "question_code": "for i in range(2):\n    for j in range(4):\n        print(i * j)",
                "answer": "Untuk menggunakan loop bersarang, tempatkan satu loop di dalam loop lainnya. Contoh ini mengalikan nilai `i` dan `j` untuk setiap iterasi.",
                "answer_code": "for i in range(2):\n    for j in range(4):\n        print(i, j)"
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `else` dalam loop di Python?",
                "question_code": "for item in range(4):\n    if item == 2:\n        break\nelse:\n    print('Done')",
                "answer": "Pernyataan `else` dalam loop digunakan untuk menjalankan blok kode jika loop selesai tanpa intervensi `break`. Jika loop dihentikan dengan `break`, `else` tidak akan dijalankan.",
                "answer_code": "for item in range(4):\n    if item == 2:\n        break\nelse:\n    print('Loop selesai')"
            }
        ]
    }
]
