[
    {
        "sumber": "Python Data Structures Guide",
        "penulis": "Michael Brown",
        "tanggal": "2024-08-10",
        "judul": "Mengelola List dengan Berbagai Tipe Data di Python",
        "tingkat_kesulitan": "Intermediate",
        "tag": ["Python", "Lists", "Data Types"],
        "konten": "Artikel ini menjelaskan cara mengelola list yang berisi berbagai tipe data di Python, seperti integer, string, list lain, tuple, set, dan dictionary.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan list yang berisi tipe data berbeda di Python?",
                "answer": "Anda dapat mendeklarasikan list dengan berbagai tipe data menggunakan tanda kurung siku dan memisahkan setiap elemen dengan koma. Contoh: my_list = [42, 'Python', [1, 2], (3, 4), {5, 6}, {'key': 'value'}]"
            },
            {
                "question": "Mengapa penting mengetahui bahwa list di Python dapat berisi berbagai tipe data?",
                "answer": "Mengetahui bahwa list di Python dapat berisi berbagai tipe data penting karena memberikan fleksibilitas dalam menyimpan dan memanipulasi data yang kompleks dalam satu struktur data tunggal."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam list yang berisi berbagai tipe data?",
                "answer": "Anda dapat mengakses elemen dalam list menggunakan indeks. Contoh: my_list[3] akan mengakses elemen keempat dari my_list, yaitu (3, 4)."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: unhashable type: 'dict'', saya tidak paham?",
                "question_code": "my_list = [1, 'hello', {'a': 1}]\nmy_set = {my_list}",
                "answer": "Error ini terjadi karena dictionary tidak dapat menjadi elemen dari set karena tidak hashable. Gunakan tipe data yang hashable.",
                "answer_code": "my_list = [1, 'hello', {'a': 1}]\nmy_set = {1, 'hello', (2, 3)}"
            },
            {
                "question": "Kenapa terjadi error 'ValueError: dictionary update sequence element #0 has length 1; 2 is required', saya tidak paham?",
                "question_code": "my_dict = dict([1, 'one'])",
                "answer": "Error ini terjadi karena setiap elemen yang digunakan untuk menginisialisasi dictionary harus berupa pasangan kunci-nilai. Gunakan tuple untuk setiap pasangan.",
                "answer_code": "my_dict = dict([(1, 'one')])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'list' object does not support item assignment', saya tidak paham?",
                "question_code": "my_list = [10, 20, 30]\nmy_list[0] = 40",
                "answer": "Error ini terjadi karena Anda mencoba mengubah elemen dalam list yang sebenarnya adalah tuple. Tuple bersifat immutable. Gunakan list jika elemen perlu diubah.",
                "answer_code": "my_tuple = (10, 20, 30)\nmy_list = list(my_tuple)\nmy_list[0] = 40"
            },
            {
                "question": "Kenapa terjadi error 'KeyError: 'key'', saya tidak paham?",
                "question_code": "my_dict = {'key1': 'value1'}\nprint(my_dict['key2'])",
                "answer": "Error ini terjadi karena kunci yang diakses tidak ada dalam dictionary. Gunakan metode get() untuk menghindari error jika kunci tidak ada.",
                "answer_code": "my_dict = {'key1': 'value1'}\nprint(my_dict.get('key2', 'default_value'))"
            },
            {
                "question": "Kenapa terjadi error 'IndexError: list index out of range', saya tidak paham?",
                "question_code": "my_list = [1, 'hello', (2, 3)]\nprint(my_list[4])",
                "answer": "Error ini terjadi karena indeks yang diakses berada di luar rentang list. Indeks dimulai dari 0, jadi indeks maksimum untuk list ini adalah 2.",
                "answer_code": "my_list = [1, 'hello', (2, 3)]\nprint(my_list[2])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'tuple' object is not iterable', saya tidak paham?",
                "question_code": "my_list = [1, 'hello', (2, 3)]\nfor i in (2, 3):\n    print(i)",
                "answer": "Error ini terjadi karena tuple tidak dapat diiterasi seperti list. Pastikan Anda mengiterasi objek yang benar seperti list atau gunakan metode yang sesuai.",
                "answer_code": "my_list = [1, 'hello', (2, 3)]\nfor i in my_list:\n    print(i)"
            }
        ]
    },
    {
        "sumber": "Mastering Python",
        "penulis": "Susan Lee",
        "tanggal": "2024-08-11",
        "judul": "Penggunaan Berbagai Tipe Data dalam List Python",
        "tingkat_kesulitan": "Advanced",
        "tag": ["Python", "Lists", "Data Types"],
        "konten": "Panduan ini memberikan penjelasan mendalam tentang cara menggunakan berbagai tipe data sebagai elemen dalam list di Python, seperti integer, string, list lain, tuple, set, dan dictionary.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan list dengan berbagai tipe data di Python?",
                "answer": "Anda dapat mendeklarasikan list dengan berbagai tipe data menggunakan tanda kurung siku dan memisahkan setiap elemen dengan koma. Contoh: my_list = [42, 'example', [1, 2], (3, 4), {5, 6}, {'name': 'John'}]"
            },
            {
                "question": "Apa keuntungan menggunakan list yang berisi berbagai tipe data di Python?",
                "answer": "Menggunakan list yang berisi berbagai tipe data memberikan fleksibilitas dalam menyimpan dan memanipulasi data yang kompleks dan heterogen dalam satu struktur data tunggal."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam list yang berisi berbagai tipe data?",
                "answer": "Anda dapat mengakses elemen dalam list menggunakan indeks. Contoh: my_list[4] akan mengakses elemen kelima dari my_list, yaitu {5, 6}."
            },
            {
                "question": "Kenapa terjadi error 'TypeError: unhashable type: 'set'', saya tidak paham?",
                "question_code": "mixed_list = [1, 'text', {3, 4}]\nmy_set = {mixed_list}",
                "answer": "Error ini terjadi karena set tidak dapat menjadi elemen dari set lain karena tidak hashable. Gunakan tipe data yang hashable seperti tuple.",
                "answer_code": "mixed_list = [1, 'text', {3, 4}]\nmy_set = {1, 'text', (3, 4)}"
            },
            {
                "question": "Kenapa terjadi error 'ValueError: dictionary update sequence element #0 has length 1; 2 is required', saya tidak paham?",
                "question_code": "my_dict = dict(['key', 'value'])",
                "answer": "Error ini terjadi karena setiap elemen yang digunakan untuk menginisialisasi dictionary harus berupa pasangan kunci-nilai. Gunakan tuple untuk setiap pasangan.",
                "answer_code": "my_dict = dict([('key', 'value')])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'list' object does not support item assignment', saya tidak paham?",
                "question_code": "my_list = [10, 20, 30]\nmy_tuple = tuple(my_list)\nmy_tuple[0] = 40",
                "answer": "Error ini terjadi karena tuple bersifat immutable dan tidak dapat diubah setelah didefinisikan. Gunakan list jika elemen perlu diubah.",
                "answer_code": "my_list = [10, 20, 30]\nmy_list[0] = 40"
            },
            {
                "question": "Kenapa terjadi error 'KeyError: 'key'', saya tidak paham?",
                "question_code": "my_dict = {'name': 'Alice'}\nprint(my_dict['age'])",
                "answer": "Error ini terjadi karena kunci yang diakses tidak ada dalam dictionary. Gunakan metode get() untuk menghindari error jika kunci tidak ada.",
                "answer_code": "my_dict = {'name': 'Alice'}\nprint(my_dict.get('age', 'unknown'))"
            },
            {
                "question": "Kenapa terjadi error 'IndexError: list index out of range', saya tidak paham?",
                "question_code": "data_list = [10, 'Python', (3, 4)]\nprint(data_list[5])",
                "answer": "Error ini terjadi karena indeks yang diakses berada di luar rentang list. Indeks dimulai dari 0, jadi indeks maksimum untuk list ini adalah 2.",
                "answer_code": "data_list = [10, 'Python', (3, 4)]\nprint(data_list[2])"
            },
            {
                "question": "Kenapa terjadi error 'TypeError: 'dict' object is not iterable', saya tidak paham?",
                "question_code": "elements = [100, 'text', {'a': 1}]\nfor i in {'a': 1}:\n    print(i)",
                "answer": "Error ini terjadi karena dictionary tidak dapat diiterasi seperti list. Pastikan Anda mengiterasi objek yang benar seperti list atau gunakan metode yang sesuai.",
                "answer_code": "elements = [100, 'text', {'a': 1}]\nfor i in elements:\n    print(i)"
            }
        ]
    }
]
