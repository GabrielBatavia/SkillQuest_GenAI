[
    {
        "sumber": "PythonUntukPemula.com",
        "penulis": "Budi Santoso",
        "tanggal": "2024-08-01",
        "judul": "Memahami Fungsi Dasar di Python",
        "tingkat_kesulitan": "pemula",
        "tag": ["fungsi", "dasar", "python"],
        "konten": "Artikel ini menjelaskan cara mendefinisikan dan menggunakan fungsi dasar di Python, termasuk parameter dan nilai kembalian.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendefinisikan fungsi di Python?",
                "answer": "Fungsi dapat didefinisikan dengan menggunakan kata kunci def diikuti dengan nama fungsi dan tanda kurung. Contohnya: def nama_fungsi():"
            },
            {
                "question": "Bagaimana cara memanggil fungsi yang sudah didefinisikan di Python?",
                "answer": "Anda bisa memanggil fungsi dengan menuliskan nama fungsi diikuti dengan tanda kurung. Contohnya: nama_fungsi()."
            },
            {
                "question": "Apa itu parameter dalam fungsi Python?",
                "answer": "Parameter adalah variabel yang didefinisikan dalam tanda kurung pada saat mendefinisikan fungsi, yang digunakan untuk menerima nilai saat fungsi dipanggil. Contohnya: def fungsi(parameter):"
            },
            {
                "question": "Kenapa fungsi ini tidak bekerja seperti yang diharapkan?",
                "question_code": "def tambah(a, b):\n    hasil = a + b\nprint(tambah(3, 4))",
                "answer": "Fungsi tidak mengembalikan nilai apapun karena tidak ada pernyataan return. Tambahkan return hasil di dalam fungsi.",
                "answer_code": "def tambah(a, b):\n    hasil = a + b\n    return hasil\nprint(tambah(3, 4))"
            },
            {
                "question": "Mengapa saya mendapatkan TypeError saat menjalankan fungsi ini?",
                "question_code": "def kali(a, b):\n    return a * b\nprint(kali(5, '3'))",
                "answer": "TypeError terjadi karena Anda mencoba mengalikan integer dengan string. Pastikan kedua parameter adalah angka.",
                "answer_code": "def kali(a, b):\n    return a * b\nprint(kali(5, 3))"
            },
            {
                "question": "Bagaimana cara menggunakan nilai default untuk parameter fungsi di Python?",
                "question_code": "def sapa(nama='Dunia'):\n    print('Halo, ' + nama)\nsapa()",
                "answer": "Anda bisa menggunakan nilai default untuk parameter dengan menentukannya dalam definisi fungsi. Contohnya: def sapa(nama='Dunia'):",
                "answer_code": "def sapa(nama='Dunia'):\n    print('Halo, ' + nama)\nsapa()"
            },
            {
                "question": "Bagaimana cara menangani sejumlah parameter yang tidak diketahui dalam fungsi di Python?",
                "question_code": "def jumlahkan(*angka):\n    total = 0\n    for num in angka:\n        total += num\n    return total\nprint(jumlahkan(1, 2, 3, 4))",
                "answer": "Anda bisa menggunakan *args untuk menangani sejumlah parameter yang tidak diketahui dalam fungsi. Contohnya: def jumlahkan(*angka):",
                "answer_code": "def jumlahkan(*angka):\n    total = 0\n    for num in angka:\n        total += num\n    return total\nprint(jumlahkan(1, 2, 3, 4))"
            },
            {
                "question": "Bagaimana cara mendefinisikan fungsi yang mengembalikan lebih dari satu nilai di Python?",
                "question_code": "def operasi(a, b):\n    tambah = a + b\n    kurang = a - b\n    return tambah, kurang\nhasil1, hasil2 = operasi(10, 5)\nprint(hasil1, hasil2)",
                "answer": "Anda bisa mengembalikan lebih dari satu nilai dengan menggunakan tuple. Contohnya: return tambah, kurang",
                "answer_code": "def operasi(a, b):\n    tambah = a + b\n    kurang = a - b\n    return tambah, kurang\nhasil1, hasil2 = operasi(10, 5)\nprint(hasil1, hasil2)"
            },
            {
                "question": "Bagaimana cara mendefinisikan fungsi anonim (lambda) di Python?",
                "question_code": "tambah = lambda x, y: x + y\nprint(tambah(3, 4))",
                "answer": "Fungsi anonim atau lambda dapat didefinisikan dengan menggunakan kata kunci lambda diikuti oleh parameter dan ekspresi. Contohnya: lambda x, y: x + y",
                "answer_code": "tambah = lambda x, y: x + y\nprint(tambah(3, 4))"
            }
        ]
    },
    {
        "sumber": "PythonLanjut.com",
        "penulis": "Siti Aisyah",
        "tanggal": "2024-08-03",
        "judul": "Memahami List dan Operasinya di Python",
        "tingkat_kesulitan": "menengah",
        "tag": ["list", "operasi", "python"],
        "konten": "Artikel ini membahas tentang cara kerja list di Python dan berbagai operasi yang dapat dilakukan pada list.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan list di Python?",
                "answer": "List dapat dideklarasikan dengan menggunakan tanda kurung siku dan elemen-elemen dipisahkan dengan koma. Contohnya: my_list = [1, 2, 3]."
            },
            {
                "question": "Bagaimana cara menambahkan elemen ke dalam list di Python?",
                "answer": "Anda bisa menggunakan metode append() untuk menambahkan elemen ke dalam list. Contohnya: my_list.append(4)."
            },
            {
                "question": "Bagaimana cara mengakses elemen dari list di Python?",
                "answer": "Anda bisa mengakses elemen dari list dengan menggunakan indeks. Contohnya: my_list[0] untuk mengakses elemen pertama."
            },
            {
                "question": "Kenapa kode saya ini tidak berhasil menambahkan elemen ke dalam list?",
                "question_code": "my_list = [1, 2, 3]\nmy_list.add(4)\nprint(my_list)",
                "answer": "Metode yang benar untuk menambahkan elemen ke dalam list adalah append(), bukan add().",
                "answer_code": "my_list = [1, 2, 3]\nmy_list.append(4)\nprint(my_list)"
            },
            {
                "question": "Mengapa saya mendapatkan IndexError saat menjalankan kode ini?",
                "question_code": "my_list = [1, 2, 3]\nprint(my_list[3])",
                "answer": "IndexError terjadi karena indeks yang diakses tidak ada dalam list. Indeks 3 tidak ada karena list hanya memiliki 3 elemen dengan indeks 0, 1, dan 2.",
                "answer_code": "my_list = [1, 2, 3]\nprint(my_list[2])"
            },
            {
                "question": "Bagaimana cara menghapus elemen dari list di Python?",
                "question_code": "my_list = [1, 2, 3, 4]\nmy_list.remove(3)\nprint(my_list)",
                "answer": "Anda bisa menggunakan metode remove() untuk menghapus elemen dari list. Contohnya: my_list.remove(3).",
                "answer_code": "my_list = [1, 2, 3, 4]\nmy_list.remove(3)\nprint(my_list)"
            },
            {
                "question": "Bagaimana cara memeriksa apakah elemen ada di dalam list di Python?",
                "question_code": "my_list = [1, 2, 3, 4]\nprint(3 in my_list)",
                "answer": "Anda bisa menggunakan operator in untuk memeriksa apakah elemen ada di dalam list. Contohnya: 3 in my_list.",
                "answer_code": "my_list = [1, 2, 3, 4]\nprint(3 in my_list)"
            },
            {
                "question": "Bagaimana cara menggabungkan dua list di Python?",
                "question_code": "list1 = [1, 2, 3]\nlist2 = [4, 5, 6]\nlist3 = list1 + list2\nprint(list3)",
                "answer": "Anda bisa menggabungkan dua list dengan menggunakan operator +. Contohnya: list3 = list1 + list2.",
                "answer_code": "list1 = [1, 2, 3]\nlist2 = [4, 5, 6]\nlist3 = list1 + list2\nprint(list3)"
            },
            {
                "question": "Bagaimana cara mengurutkan elemen dalam list di Python?",
                "question_code": "my_list = [3, 1, 4, 2]\nmy_list.sort()\nprint(my_list)",
                "answer": "Anda bisa mengurutkan elemen dalam list dengan menggunakan metode sort(). Contohnya: my_list.sort().",
                "answer_code": "my_list = [3, 1, 4, 2]\nmy_list.sort()\nprint(my_list)"
            }
        ]
    }
]
