[
    {
        "sumber": "panduancodingpython.com",
        "penulis": "Dina Puspita",
        "tanggal": "2023-05-30",
        "judul": "Penggunaan Dictionary di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "dictionary", "dasar"],
        "konten": "Artikel ini menjelaskan cara membuat, mengakses, menambah, menghapus, dan memanipulasi elemen dalam dictionary di Python.",
        "pertanyaan": [
            {
                "question": "Apa itu dictionary dalam Python?",
                "answer": "Dictionary adalah struktur data di Python yang menyimpan data dalam bentuk pasangan kunci-nilai, seperti kamus."
            },
            {
                "question": "Bagaimana cara membuat dictionary baru di Python?",
                "answer": "Untuk membuat dictionary, gunakan kurung kurawal `{}` dan pisahkan pasangan kunci-nilai dengan koma. Contohnya: `data = {'nama': 'Andi', 'umur': 25}`."
            },
            {
                "question": "Bagaimana saya bisa mengambil nilai dari dictionary?",
                "question_code": "data = {'nama': 'Andi'}\nambil_nilai = data['nama']",
                "answer": "Nilai dalam dictionary bisa diambil dengan menggunakan kunci di dalam tanda kurung kotak. Contoh: `ambil_nilai = data['nama']`.",
                "answer_code": "data = {'nama': 'Andi'}\nambil_nilai = data['nama']"
            },
            {
                "question": "Bagaimana cara menambahkan item baru ke dictionary?",
                "question_code": "data['alamat'] = 'Jakarta'",
                "answer": "Menambahkan item baru ke dictionary bisa dilakukan dengan menetapkan nilai baru untuk kunci yang diinginkan. Contoh: `data['alamat'] = 'Jakarta'`.",
                "answer_code": "data['alamat'] = 'Jakarta'"
            },
            {
                "question": "Bagaimana cara menghapus item dari dictionary?",
                "question_code": "del data['umur']",
                "answer": "Untuk menghapus item dari dictionary, gunakan perintah `del` diikuti kunci yang ingin dihapus. Contoh: `del data['umur']`.",
                "answer_code": "del data['umur']"
            },
            {
                "question": "Bagaimana cara mengecek apakah suatu kunci ada di dictionary?",
                "question_code": "'nama' in data",
                "answer": "Untuk memeriksa keberadaan kunci dalam dictionary, gunakan operator `in`. Contoh: `'nama' in data` akan mengembalikan True jika 'nama' ada di dictionary.",
                "answer_code": "'nama' in data"
            },
            {
                "question": "Bagaimana saya bisa mendapatkan semua kunci dari dictionary?",
                "question_code": "data.keys()",
                "answer": "Untuk mendapatkan semua kunci dalam dictionary, gunakan metode `keys()`. Contoh: `data.keys()` akan mengembalikan semua kunci dalam dictionary.",
                "answer_code": "data.keys()"
            },
            {
                "question": "Bagaimana cara melihat semua nilai yang ada di dictionary?",
                "question_code": "data.values()",
                "answer": "Untuk melihat semua nilai dalam dictionary, gunakan metode `values()`. Contoh: `data.values()` akan menampilkan semua nilai dalam dictionary.",
                "answer_code": "data.values()"
            },
            {
                "question": "Bagaimana saya bisa memperbarui nilai dari kunci yang sudah ada di dictionary?",
                "question_code": "data['nama'] = 'Budi'",
                "answer": "Untuk memperbarui nilai kunci yang sudah ada, cukup tetapkan nilai baru ke kunci tersebut. Contoh: `data['nama'] = 'Budi'`.",
                "answer_code": "data['nama'] = 'Budi'"
            }
        ]
    },
    {
        "sumber": "belajarpemrogramanpython.net",
        "penulis": "Eko Prasetyo",
        "tanggal": "2023-11-21",
        "judul": "Penggunaan List Comprehensions di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "list comprehensions", "dasar"],
        "konten": "Artikel ini menjelaskan cara menggunakan list comprehensions di Python untuk membuat dan memanipulasi list dengan sintaks yang lebih ringkas dan efisien.",
        "pertanyaan": [
            {
                "question": "Apa itu list comprehensions di Python?",
                "answer": "List comprehensions adalah metode untuk membuat list baru dengan sintaks yang singkat dan mudah dibaca, biasanya dalam satu baris kode."
            },
            {
                "question": "Bagaimana cara membuat list comprehension untuk angka dari 0 hingga 4?",
                "question_code": "[i for i in range(5)]",
                "answer": "Untuk membuat list comprehension yang menghasilkan angka dari 0 hingga 4, gunakan sintaks seperti ini: `[i for i in range(5)]`.",
                "answer_code": "[i for i in range(5)]"
            },
            {
                "question": "Bagaimana cara menambahkan syarat dalam list comprehension?",
                "question_code": "[i for i in range(10) if i % 2 == 0]",
                "answer": "Anda bisa menambahkan kondisi untuk menyaring hasil list comprehension. Contoh: `[i for i in range(10) if i % 2 == 0]` menghasilkan angka genap dari 0 hingga 9.",
                "answer_code": "[i for i in range(10) if i % 2 == 0]"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi dalam list comprehension?",
                "question_code": "[i**2 for i in range(5)]",
                "answer": "Fungsi bisa digunakan dalam list comprehension untuk memodifikasi elemen. Contoh: `[i**2 for i in range(5)]` menghasilkan kuadrat dari angka 0 hingga 4.",
                "answer_code": "[i**2 for i in range(5)]"
            },
            {
                "question": "Bagaimana membuat list comprehension dari list yang sudah ada?",
                "question_code": "daftar = [2, 4, 6]\nkuadrat = [x**2 for x in daftar]",
                "answer": "Untuk membuat list comprehension dari list yang sudah ada, gunakan list tersebut sebagai iterable. Contoh: `kuadrat = [x**2 for x in daftar]` menghasilkan kuadrat dari setiap elemen dalam `daftar`.",
                "answer_code": "daftar = [2, 4, 6]\nkuadrat = [x**2 for x in daftar]"
            },
            {
                "question": "Bagaimana cara membuat list comprehension dengan nested loops?",
                "question_code": "[[x, y] for x in range(2) for y in range(3)]",
                "answer": "Anda bisa menggunakan nested loops dalam list comprehension dengan menambahkan beberapa loop for. Contoh: `[[x, y] for x in range(2) for y in range(3)]` menghasilkan pasangan kombinasi antara x dan y.",
                "answer_code": "[[x, y] for x in range(2) for y in range(3)]"
            },
            {
                "question": "Bagaimana saya bisa memanipulasi string menggunakan list comprehension?",
                "question_code": "[ch.lower() for ch in 'HELLO']",
                "answer": "List comprehension juga bisa digunakan untuk memanipulasi string. Contoh: `[ch.lower() for ch in 'HELLO']` mengubah semua huruf dalam string menjadi huruf kecil.",
                "answer_code": "[ch.lower() for ch in 'HELLO']"
            },
            {
                "question": "Bagaimana membuat list comprehension dari dictionary?",
                "question_code": "{k: v*2 for k, v in {'a': 1, 'b': 2}.items()}",
                "answer": "Untuk membuat list comprehension dari dictionary, gunakan `.items()` untuk iterasi kunci dan nilai. Contoh: `{k: v*2 for k, v in {'a': 1, 'b': 2}.items()}` menggandakan setiap nilai dalam dictionary.",
                "answer_code": "{k: v*2 for k, v in {'a': 1, 'b': 2}.items()}"
            },
            {
                "question": "Bagaimana cara membuat set comprehension di Python?",
                "question_code": "{i*2 for i in range(4)}",
                "answer": "Set comprehension digunakan untuk membuat set dengan sintaks yang mirip dengan list comprehension, tetapi menggunakan kurung kurawal `{}`. Contoh: `{i*2 for i in range(4)}` menghasilkan set dari 0 hingga 6 dengan kelipatan dua.",
                "answer_code": "{i*2 for i in range(4)}"
            }
        ]
    }
]
