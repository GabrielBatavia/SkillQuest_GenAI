[
    {
        "sumber": "Practical Python Examples",
        "penulis": "Michael Turner",
        "tanggal": "2024-12-17",
        "judul": "List Comprehension: Contoh dan Aplikasi Praktis",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Contoh Praktis", "Pemula"],
        "konten": "Panduan ini menyajikan berbagai contoh praktis penggunaan list comprehension di Python. List comprehension memungkinkan penulisan kode yang lebih ringkas dan elegan untuk transformasi dan manipulasi data.",
        "pertanyaan": [
            {
                "question": "Misalkan Anda memiliki sebuah list yang berisi beberapa angka seperti `[5, 10, 15, 20]`. Bagaimana Anda bisa membuat list baru yang berisi setiap angka dikalikan dua, dan apa yang akan terjadi jika list tersebut berisi angka negatif?",
                "answer": "Gunakan kode berikut: `numbers = [5, 10, 15, 20]; doubled = [x * 2 for x in numbers]`. Kode ini akan menghasilkan `[10, 20, 30, 40]`. Jika list berisi angka negatif, seperti `[-5, 10, -15]`, hasilnya akan menjadi `[-10, 20, -30]`."
            },
            {
                "question": "Anda memiliki sebuah list yang berisi string seperti `['hello', 'world', 'python']`. Bagaimana Anda bisa membuat list baru yang berisi setiap string dengan huruf kapital semua dan apa yang terjadi jika list tersebut berisi string kosong?",
                "answer": "Gunakan kode berikut: `words = ['hello', 'world', 'python']; capitalized = [word.upper() for word in words]`. Hasilnya adalah `['HELLO', 'WORLD', 'PYTHON']`. Jika list berisi string kosong, seperti `['', 'python']`, hasilnya adalah `['', 'PYTHON']`."
            },
            {
                "question": "Jika Anda ingin menghasilkan list dari angka ganjil dalam rentang 1 hingga 10 dan menjadikannya dalam format string seperti `'1st'`, `'3rd'`, dan seterusnya, bagaimana Anda melakukannya?",
                "answer": "Gunakan kode berikut: `odds = [x for x in range(1, 11) if x % 2 != 0]; formatted = [f'{x}st' if x == 1 else f'{x}rd' if x == 3 else f'{x}th' for x in odds]`. Hasilnya adalah `['1st', '3rd', '5th', '7th', '9th']`."
            },
            {
                "question": "Anda memiliki sebuah list yang berisi angka desimal seperti `[2.4, 5.6, 3.1]`. Bagaimana Anda dapat menghasilkan list baru yang berisi angka-angka yang dibulatkan ke bawah dan bagaimana jika angka-angka tersebut adalah integer?",
                "answer": "Gunakan kode berikut: `decimals = [2.4, 5.6, 3.1]; rounded_down = [int(x) for x in decimals]`. Ini akan menghasilkan `[2, 5, 3]`. Jika angka-angka tersebut sudah integer, seperti `[2, 5, 3]`, hasilnya tetap `[2, 5, 3]`."
            },
            {
                "question": "Anda ingin membuat list dari elemen-elemen yang merupakan hasil gabungan dari dua list berbeda, misalnya `['A', 'B']` dan `[1, 2]`. Bagaimana Anda dapat membuat list baru yang berisi kombinasi dari setiap elemen dalam kedua list?",
                "question_code": "list1 = ['A', 'B']; list2 = [1, 2]; combined = [f'{a}{b}' for a in list1 for b in list2]",
                "answer": "Gunakan kode berikut: `list1 = ['A', 'B']; list2 = [1, 2]; combined = [f'{a}{b}' for a in list1 for b in list2]`. Ini akan menghasilkan `['A1', 'A2', 'B1', 'B2']`.",
                "answer_code": "list1 = ['A', 'B']; list2 = [1, 2]; combined = [f'{a}{b}' for a in list1 for b in list2]"
            },
            {
                "question": "Jika Anda memiliki sebuah list yang berisi angka seperti `[3, 6, 9, 12]` dan Anda ingin memfilter hanya angka yang merupakan kelipatan 3 dan kemudian mengalikan angka-angka tersebut dengan 10, bagaimana caranya?",
                "question_code": "numbers = [3, 6, 9, 12]; multiples_of_3 = [x * 10 for x in numbers if x % 3 == 0]",
                "answer": "Gunakan kode berikut: `numbers = [3, 6, 9, 12]; multiples_of_3 = [x * 10 for x in numbers if x % 3 == 0]`. Ini akan menghasilkan `[30, 60, 90, 120]`.",
                "answer_code": "numbers = [3, 6, 9, 12]; multiples_of_3 = [x * 10 for x in numbers if x % 3 == 0]"
            },
            {
                "question": "Bagaimana Anda dapat membuat list yang berisi panjang dari setiap elemen string dalam list `['cat', 'elephant', 'dog']` menggunakan list comprehension?",
                "question_code": "words = ['cat', 'elephant', 'dog']; lengths = [len(word) for word in words]",
                "answer": "Gunakan kode berikut: `words = ['cat', 'elephant', 'dog']; lengths = [len(word) for word in words]`. Hasilnya adalah `[3, 8, 3]`.",
                "answer_code": "words = ['cat', 'elephant', 'dog']; lengths = [len(word) for word in words]"
            },
            {
                "question": "Anda ingin membuat list baru dari list `['apple', 'banana', 'cherry']` yang hanya berisi elemen dengan panjang lebih dari 5 karakter. Bagaimana Anda bisa melakukannya?",
                "question_code": "fruits = ['apple', 'banana', 'cherry']; long_fruits = [fruit for fruit in fruits if len(fruit) > 5]",
                "answer": "Gunakan kode berikut: `fruits = ['apple', 'banana', 'cherry']; long_fruits = [fruit for fruit in fruits if len(fruit) > 5]`. Hasilnya adalah `['banana', 'cherry']`.",
                "answer_code": "fruits = ['apple', 'banana', 'cherry']; long_fruits = [fruit for fruit in fruits if len(fruit) > 5]"
            },
            {
                "question": "Bagaimana Anda dapat mengubah list `['red', 'blue', 'green']` menjadi list baru yang berisi setiap warna dengan awalan 'Color: ' di depannya?",
                "question_code": "colors = ['red', 'blue', 'green']; labeled_colors = [f'Color: {color}' for color in colors]",
                "answer": "Gunakan kode berikut: `colors = ['red', 'blue', 'green']; labeled_colors = [f'Color: {color}' for color in colors]`. Hasilnya adalah `['Color: red', 'Color: blue', 'Color: green']`.",
                "answer_code": "colors = ['red', 'blue', 'green']; labeled_colors = [f'Color: {color}' for color in colors]"
            }
        ]
    },
    {
        "sumber": "Fundamentals of Python Programming",
        "penulis": "Jessica Adams",
        "tanggal": "2024-12-18",
        "judul": "Dasar-Dasar List Comprehension dan Contoh Penggunaan",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Dasar-Dasar", "Pemula"],
        "konten": "Artikel ini menyajikan dasar-dasar list comprehension dan memberikan contoh praktis untuk memahami konsep ini lebih baik. List comprehension memudahkan penulisan kode yang bersih dan efisien.",
        "pertanyaan": [
            {
                "question": "Jika Anda memiliki list `['a', 'b', 'c']` dan ingin mengubah setiap elemen menjadi huruf besar, bagaimana cara Anda melakukannya dan apa yang akan terjadi jika ada elemen kosong?",
                "answer": "Gunakan kode berikut: `chars = ['a', 'b', 'c']; upper_chars = [char.upper() for char in chars]`. Hasilnya adalah `['A', 'B', 'C']`. Jika ada elemen kosong, seperti `['', 'b']`, hasilnya adalah `['', 'B']`."
            },
            {
                "question": "Bagaimana Anda dapat menghasilkan list dari angka genap dalam rentang 1 hingga 15, dan apa yang terjadi jika rentangnya adalah angka negatif?",
                "answer": "Gunakan kode berikut: `evens = [x for x in range(1, 16) if x % 2 == 0]`. Hasilnya adalah `[2, 4, 6, 8, 10, 12, 14]`. Jika rentangnya adalah angka negatif, seperti `range(-5, 0)`, hasilnya adalah `[]`."
            },
            {
                "question": "Anda ingin membuat list dari hasil kuadrat dari angka dalam list `[1, 2, 3]`, bagaimana cara melakukannya dan apa yang terjadi jika listnya kosong?",
                "answer": "Gunakan kode berikut: `numbers = [1, 2, 3]; squared = [n ** 2 for n in numbers]`. Ini akan menghasilkan `[1, 4, 9]`. Jika listnya kosong, seperti `[]`, hasilnya juga akan menjadi `[]`."
            },
            {
                "question": "Bagaimana Anda bisa menghasilkan list baru dengan elemen yang merupakan gabungan dari list `['a', 'b']` dan `[1, 2]`, dan apa yang terjadi jika salah satu list kosong?",
                "question_code": "list1 = ['a', 'b']; list2 = [1, 2]; combined = [f'{x}{y}' for x in list1 for y in list2]",
                "answer": "Gunakan kode berikut: `list1 = ['a', 'b']; list2 = [1, 2]; combined = [f'{x}{y}' for x in list1 for y in list2]`. Ini menghasilkan `['a1', 'a2', 'b1', 'b2']`. Jika salah satu list kosong, seperti `list2 = []`, hasilnya adalah `[]`.",
                "answer_code": "list1 = ['a', 'b']; list2 = [1, 2]; combined = [f'{x}{y}' for x in list1 for y in list2]"
            },
            {
                "question": "Jika Anda ingin menghasilkan list dari angka dalam `range(1, 10)` yang bukan merupakan kelipatan 3, bagaimana cara melakukannya?",
                "question_code": "numbers = range(1, 10); non_multiples_of_3 = [x for x in numbers if x % 3 != 0]",
                "answer": "Gunakan kode berikut: `numbers = range(1, 10); non_multiples_of_3 = [x for x in numbers if x % 3 != 0]`. Ini akan menghasilkan `[1, 2, 4, 5, 7, 8]`.",
                "answer_code": "numbers = range(1, 10); non_multiples_of_3 = [x for x in numbers if x % 3 != 0]"
            },
            {
                "question": "Bagaimana Anda dapat membuat list yang berisi panjang dari setiap elemen dalam list `['apple', 'banana', 'kiwi']`, dan bagaimana jika list berisi elemen kosong?",
                "question_code": "fruits = ['apple', 'banana', 'kiwi']; lengths = [len(fruit) for fruit in fruits]",
                "answer": "Gunakan kode berikut: `fruits = ['apple', 'banana', 'kiwi']; lengths = [len(fruit) for fruit in fruits]`. Hasilnya adalah `[5, 6, 4]`. Jika list berisi elemen kosong, seperti `['apple', '', 'kiwi']`, hasilnya adalah `[5, 0, 4]`.",
                "answer_code": "fruits = ['apple', 'banana', 'kiwi']; lengths = [len(fruit) for fruit in fruits]"
            },
            {
                "question": "Anda ingin membuat list yang berisi setiap elemen dari list `['dog', 'cat', 'fish']` dengan awalan 'Pet: ' di depannya. Bagaimana Anda bisa melakukannya?",
                "question_code": "animals = ['dog', 'cat', 'fish']; pets = [f'Pet: {animal}' for animal in animals]",
                "answer": "Gunakan kode berikut: `animals = ['dog', 'cat', 'fish']; pets = [f'Pet: {animal}' for animal in animals]`. Hasilnya adalah `['Pet: dog', 'Pet: cat', 'Pet: fish']`.",
                "answer_code": "animals = ['dog', 'cat', 'fish']; pets = [f'Pet: {animal}' for animal in animals]"
            }
        ]
    }
]
