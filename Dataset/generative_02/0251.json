[
    {
        "sumber": "belajarpythonadvanced.com",
        "penulis": "Hadi Suprapto",
        "tanggal": "2024-08-01",
        "judul": "Penggunaan Fungsi Anonim (Lambda) di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "lambda", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi anonim atau lambda di Python untuk menulis fungsi kecil dan sederhana secara lebih singkat.",
        "pertanyaan": [
            {
                "question": "Apa itu fungsi lambda di Python?",
                "answer": "Fungsi lambda adalah fungsi anonim yang didefinisikan dengan kata kunci `lambda` dan dapat memiliki banyak argumen tetapi hanya satu ekspresi."
            },
            {
                "question": "Bagaimana cara mendefinisikan fungsi lambda di Python?",
                "question_code": "lambda x: x * 2",
                "answer": "Anda bisa mendefinisikan fungsi lambda dengan menggunakan kata kunci `lambda` diikuti oleh argumen dan ekspresi. Contohnya: `lambda x: x * 2`.",
                "answer_code": "lambda x: x * 2"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda dengan fungsi map di Python?",
                "question_code": "numbers = [1, 2, 3, 4]\ndoubled = list(map(lambda x: x * 2, numbers))",
                "answer": "Anda bisa menggunakan fungsi lambda dengan fungsi map untuk menggandakan setiap elemen dalam daftar. Contohnya: `map(lambda x: x * 2, numbers)`.",
                "answer_code": "numbers = [1, 2, 3, 4]\ndoubled = list(map(lambda x: x * 2, numbers))"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda dengan fungsi filter di Python?",
                "question_code": "numbers = [1, 2, 3, 4, 5]\nodd_numbers = list(filter(lambda x: x % 2 != 0, numbers))",
                "answer": "Anda bisa menggunakan fungsi lambda dengan fungsi filter untuk menyaring angka ganjil dalam daftar. Contohnya: `filter(lambda x: x % 2 != 0, numbers)`.",
                "answer_code": "numbers = [1, 2, 3, 4, 5]\nodd_numbers = list(filter(lambda x: x % 2 != 0, numbers))"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda dengan fungsi reduce di Python?",
                "question_code": "from functools import reduce\nnumbers = [1, 2, 3, 4]\nproduct = reduce(lambda x, y: x * y, numbers)",
                "answer": "Anda bisa menggunakan fungsi lambda dengan fungsi reduce untuk mengalikan semua elemen dalam daftar. Contohnya: `reduce(lambda x, y: x * y, numbers)`.",
                "answer_code": "from functools import reduce\nnumbers = [1, 2, 3, 4]\nproduct = reduce(lambda x, y: x * y, numbers)"
            },
            {
                "question": "Bagaimana cara menulis fungsi lambda untuk menghitung jumlah digit dalam sebuah angka?",
                "question_code": "num_digits = lambda n: len(str(n))\nresult = num_digits(12345)",
                "answer": "Anda bisa menulis fungsi lambda untuk menghitung jumlah digit dalam sebuah angka dengan mengonversi angka ke string dan menghitung panjangnya. Contohnya: `lambda n: len(str(n))`.",
                "answer_code": "num_digits = lambda n: len(str(n))\nresult = num_digits(12345)"
            },
            {
                "question": "Bagaimana cara menulis fungsi lambda untuk membalik urutan elemen dalam daftar?",
                "question_code": "reverse_list = lambda lst: lst[::-1]\nresult = reverse_list([1, 2, 3, 4, 5])",
                "answer": "Anda bisa menulis fungsi lambda untuk membalik urutan elemen dalam daftar dengan menggunakan slicing. Contohnya: `lambda lst: lst[::-1]`.",
                "answer_code": "reverse_list = lambda lst: lst[::-1]\nresult = reverse_list([1, 2, 3, 4, 5])"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda sebagai argumen dalam fungsi sorting di Python?",
                "question_code": "data = [{'name': 'Alice', 'age': 25}, {'name': 'Bob', 'age': 20}]\nsorted_data = sorted(data, key=lambda x: x['age'])",
                "answer": "Anda bisa menggunakan fungsi lambda sebagai argumen dalam fungsi sorting untuk mengurutkan berdasarkan usia. Contohnya: `sorted(data, key=lambda x: x['age'])`.",
                "answer_code": "data = [{'name': 'Alice', 'age': 25}, {'name': 'Bob', 'age': 20}]\nsorted_data = sorted(data, key=lambda x: x['age'])"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda untuk memeriksa apakah suatu angka adalah bilangan prima?",
                "question_code": "is_prime = lambda x: all(x % i != 0 for i in range(2, int(x**0.5) + 1))\nresult = is_prime(7)",
                "answer": "Anda bisa menggunakan fungsi lambda untuk memeriksa apakah suatu angka adalah bilangan prima dengan memeriksa pembagian dari 2 hingga akar kuadrat dari angka tersebut. Contohnya: `lambda x: all(x % i != 0 for i in range(2, int(x**0.5) + 1))`.",
                "answer_code": "is_prime = lambda x: all(x % i != 0 for i in range(2, int(x**0.5) + 1))\nresult = is_prime(7)"
            }
        ]
    },
    {
        "sumber": "belajarpythonlanjut.com",
        "penulis": "Dian Kurniawan",
        "tanggal": "2024-09-01",
        "judul": "Penggunaan Fungsi Partial di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "partial", "menengah"],
        "konten": "Artikel ini menjelaskan cara menggunakan fungsi partial di Python untuk membuat versi baru dari fungsi yang ada dengan beberapa argumen tetap.",
        "pertanyaan": [
            {
                "question": "Apa itu fungsi partial di Python?",
                "answer": "Fungsi partial adalah fungsi yang dibuat dari fungsi lain dengan satu atau lebih argumen tetap menggunakan modul `functools`."
            },
            {
                "question": "Bagaimana cara membuat fungsi partial di Python?",
                "question_code": "from functools import partial\ndef add(a, b, c):\n    return a + b + c\nadd_five = partial(add, 5)",
                "answer": "Anda bisa membuat fungsi partial dengan menggunakan `partial` dari modul `functools` dan menetapkan nilai argumen tetap. Contohnya: `partial(add, 5)`.",
                "answer_code": "from functools import partial\ndef add(a, b, c):\n    return a + b + c\nadd_five = partial(add, 5)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi partial untuk mengonversi suhu dari Fahrenheit ke Celsius?",
                "question_code": "from functools import partial\ndef convert_temp(temp, offset, factor):\n    return (temp - offset) * factor\nf_to_c = partial(convert_temp, offset=32, factor=5/9)\nresult = f_to_c(98.6)",
                "answer": "Anda bisa menggunakan fungsi partial untuk mengonversi suhu dengan menetapkan nilai argumen tetap untuk rumus konversi. Contohnya: `partial(convert_temp, offset=32, factor=5/9)`.",
                "answer_code": "from functools import partial\ndef convert_temp(temp, offset, factor):\n    return (temp - offset) * factor\nf_to_c = partial(convert_temp, offset=32, factor=5/9)\nresult = f_to_c(98.6)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi partial untuk membuat fungsi pembangkit daftar bilangan ganjil?",
                "question_code": "from functools import partial\ndef create_list(start, step, count):\n    return [start + step * i for i in range(count)]\nodd_list = partial(create_list, step=2)\nresult = odd_list(1, 5)",
                "answer": "Anda bisa menggunakan fungsi partial untuk membuat fungsi pembangkit daftar bilangan ganjil dengan menetapkan nilai argumen tetap untuk langkah. Contohnya: `partial(create_list, step=2)`.",
                "answer_code": "from functools import partial\ndef create_list(start, step, count):\n    return [start + step * i for i in range(count)]\nodd_list = partial(create_list, step=2)\nresult = odd_list(1, 5)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi partial untuk membuat fungsi pembangkit teks ucapan selamat datang?",
                "question_code": "from functools import partial\ndef welcome_message(greeting, name):\n    return f'{greeting}, {name}!'\nwelcome = partial(welcome_message, 'Selamat datang')\nresult = welcome('Dian')",
                "answer": "Anda bisa menggunakan fungsi partial untuk membuat fungsi pembangkit teks ucapan selamat datang dengan menetapkan nilai argumen tetap untuk ucapan. Contohnya: `partial(welcome_message, 'Selamat datang')`.",
                "answer_code": "from functools import partial\ndef welcome_message(greeting, name):\n    return f'{greeting}, {name}!'\nwelcome = partial(welcome_message, 'Selamat datang')\nresult = welcome('Dian')"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi partial untuk membuat fungsi pembangkit pangkat dua?",
                "question_code": "from functools import partial\ndef power(base, exponent):\n    return base ** exponent\nsquare = partial(power, exponent=2)\nresult = square(4)",
                "answer": "Anda bisa menggunakan fungsi partial untuk membuat fungsi pembangkit pangkat dua dengan menetapkan nilai argumen tetap untuk eksponen. Contohnya: `partial(power, exponent=2)`.",
                "answer_code": "from functools import partial\ndef power(base, exponent):\n    return base ** exponent\nsquare = partial(power, exponent=2)\nresult = square(4)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi partial untuk membuat fungsi pembangkit pangkat tiga?",
                "question_code": "from functools import partial\ndef power(base, exponent):\n    return base ** exponent\ncube = partial(power, exponent=3)\nresult = cube(2)",
                "answer": "Anda bisa menggunakan fungsi partial untuk membuat fungsi pembangkit pangkat tiga dengan menetapkan nilai argumen tetap untuk eksponen. Contohnya: `partial(power, exponent=3)`.",
                "answer_code": "from functools import partial\ndef power(base, exponent):\n    return base ** exponent\ncube = partial(power, exponent=3)\nresult = cube(2)"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi partial untuk membuat fungsi pembangkit teks ucapan selamat tidur?",
                "question_code": "from functools import partial\ndef greet(time_of_day, name):\n    return f'Selamat {time_of_day}, {name}!'\ngoodnight_greet = partial(greet, 'Tidur')\nresult = goodnight_greet('Sinta')",
                "answer": "Anda bisa menggunakan fungsi partial untuk membuat fungsi pembangkit teks ucapan selamat tidur dengan menetapkan nilai argumen tetap untuk waktu. Contohnya: `partial(greet, 'Tidur')`.",
                "answer_code": "from functools import partial\ndef greet(time_of_day, name):\n    return f'Selamat {time_of_day}, {name}!'\ngoodnight_greet = partial(greet, 'Tidur')\nresult = goodnight_greet('Sinta')"
            },
            {
                "question": "Bagaimana cara menggunakan fungsi partial untuk membuat fungsi pembangkit teks ucapan selamat sore?",
                "question_code": "from functools import partial\ndef greet(time_of_day, name):\n    return f'Selamat {time_of_day}, {name}!'\ngoodafternoon_greet = partial(greet, 'Sore')\nresult = goodafternoon_greet('Rudi')",
                "answer": "Anda bisa menggunakan fungsi partial untuk membuat fungsi pembangkit teks ucapan selamat sore dengan menetapkan nilai argumen tetap untuk waktu. Contohnya: `partial(greet, 'Sore')`.",
                "answer_code": "from functools import partial\ndef greet(time_of_day, name):\n    return f'Selamat {time_of_day}, {name}!'\ngoodafternoon_greet = partial(greet, 'Sore')\nresult = goodafternoon_greet('Rudi')"
            }
        ]
    }
]
