[
    {
        "sumber": "pythontutorial.net",
        "penulis": "Rahmat Hidayat",
        "tanggal": "2023-03-20",
        "judul": "Penggunaan List dan Dictionary di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "list", "dictionary"],
        "konten": "Artikel ini membahas cara menggunakan list dan dictionary di Python, termasuk cara membuat, mengakses, dan memodifikasi elemen.",
        "pertanyaan": [
            {
                "question": "Apa yang dimaksud dengan list di Python?",
                "answer": "List adalah tipe data yang dapat menyimpan berbagai item dalam satu variabel dan diakses melalui indeks."
            },
            {
                "question": "Bagaimana cara mendefinisikan list di Python?",
                "answer": "Anda dapat mendefinisikan list dengan menggunakan tanda kurung siku `[]` dan memisahkan item dengan koma. Contoh: `daftar = [1, 2, 3]`."
            },
            {
                "question": "Bagaimana cara mengambil elemen dari list?",
                "answer": "Anda dapat mengambil elemen dari list dengan menggunakan indeks. Misalnya: `daftar[0]`."
            },
            {
                "question": "Bagaimana cara menambahkan elemen ke dalam list?",
                "question_code": "daftar.append(4)",
                "answer": "Anda dapat menambahkan elemen ke dalam list menggunakan metode `append()`. Misalnya: `daftar.append(4)`."
            },
            {
                "question": "Bagaimana cara menghapus elemen dari list?",
                "question_code": "daftar.remove(2)",
                "answer": "Anda dapat menghapus elemen dari list menggunakan metode `remove()`. Misalnya: `daftar.remove(2)`."
            },
            {
                "question": "Apa yang dimaksud dengan dictionary di Python?",
                "question_code": "kamus = {'kunci': 'nilai'}",
                "answer": "Dictionary adalah tipe data yang menyimpan data dalam bentuk pasangan kunci-nilai. Misalnya: `kamus = {'kunci': 'nilai'}`."
            },
            {
                "question": "Bagaimana cara mengakses nilai dalam dictionary?",
                "question_code": "nilai = kamus['kunci']",
                "answer": "Anda dapat mengakses nilai dalam dictionary menggunakan kunci. Misalnya: `nilai = kamus['kunci']`."
            },
            {
                "question": "Bagaimana cara menambahkan pasangan kunci-nilai ke dictionary?",
                "question_code": "kamus['kunci_baru'] = 'nilai_baru'",
                "answer": "Anda dapat menambahkan pasangan kunci-nilai ke dictionary dengan menugaskan nilai baru ke kunci baru. Misalnya: `kamus['kunci_baru'] = 'nilai_baru'`."
            },
            {
                "question": "Bagaimana cara menghapus pasangan kunci-nilai dari dictionary?",
                "question_code": "del kamus['kunci']",
                "answer": "Anda dapat menghapus pasangan kunci-nilai dari dictionary menggunakan kata kunci `del`. Misalnya: `del kamus['kunci']`."
            }
        ]
    },
    {
        "sumber": "pythonforbeginners.com",
        "penulis": "Lina Sari",
        "tanggal": "2024-05-18",
        "judul": "Pemahaman Loop di Python",
        "tingkat_kesulitan": "Menengah",
        "tag": ["python", "loop", "intermediate"],
        "konten": "Artikel ini menjelaskan berbagai jenis loop di Python, termasuk loop `for` dan `while`, serta cara penggunaannya.",
        "pertanyaan": [
            {
                "question": "Apa itu loop `for` di Python?",
                "answer": "Loop `for` adalah struktur kontrol yang digunakan untuk mengulangi blok kode sejumlah item dalam urutan tertentu."
            },
            {
                "question": "Bagaimana cara membuat loop `for` di Python?",
                "answer": "Anda dapat membuat loop `for` menggunakan sintaks `for item in iterable:` diikuti oleh blok kode yang akan diulangi."
            },
            {
                "question": "Apa itu loop `while` di Python?",
                "answer": "Loop `while` adalah struktur kontrol yang digunakan untuk mengulangi blok kode selama kondisi yang ditentukan terpenuhi."
            },
            {
                "question": "Bagaimana cara membuat loop `while` di Python?",
                "question_code": "while kondisi:\n    # blok kode",
                "answer": "Anda dapat membuat loop `while` menggunakan sintaks `while kondisi:` diikuti oleh blok kode yang akan diulangi.",
                "answer_code": "while kondisi:\n    # blok kode"
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `break` di dalam loop?",
                "question_code": "for item in iterable:\n    if kondisi:\n        break",
                "answer": "Pernyataan `break` digunakan untuk menghentikan loop sebelum semua iterasi selesai dijalankan. Misalnya: `if kondisi: break`."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan `continue` di dalam loop?",
                "question_code": "for item in iterable:\n    if kondisi:\n        continue\n    # blok kode",
                "answer": "Pernyataan `continue` digunakan untuk melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya. Misalnya: `if kondisi: continue`."
            },
            {
                "question": "Bagaimana cara membuat loop bersarang di Python?",
                "question_code": "for i in range(3):\n    for j in range(3):\n        print(i, j)",
                "answer": "Anda dapat membuat loop bersarang dengan menempatkan satu loop di dalam loop lainnya. Misalnya: `for i in range(3): for j in range(3):`.",
                "answer_code": "for i in range(3):\n    for j in range(3):\n        print(i, j)"
            },
            {
                "question": "Bagaimana cara mengakses indeks dalam loop `for`?",
                "question_code": "for indeks, item in enumerate(iterable):\n    print(indeks, item)",
                "answer": "Anda dapat mengakses indeks dalam loop `for` menggunakan fungsi `enumerate()`. Misalnya: `for indeks, item in enumerate(iterable):`.",
                "answer_code": "for indeks, item in enumerate(iterable):\n    print(indeks, item)"
            },
            {
                "question": "Bagaimana cara menggunakan loop `while` dengan pernyataan `else`?",
                "question_code": "while kondisi:\n    # blok kode\nelse:\n    # blok kode lainnya",
                "answer": "Anda dapat menggunakan pernyataan `else` dengan loop `while` untuk menjalankan blok kode lainnya ketika kondisi loop tidak lagi terpenuhi.",
                "answer_code": "while kondisi:\n    # blok kode\nelse:\n    # blok kode lainnya"
            }
        ]
    }
]
