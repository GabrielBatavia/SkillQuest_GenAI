[
    {
        "sumber": "belajarpython.id",
        "penulis": "Fajar Hadi",
        "tanggal": "2023-09-25",
        "judul": "Memahami Fungsi Built-in di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "built-in functions", "pemula"],
        "konten": "Artikel ini menguraikan fungsi-fungsi built-in Python yang penting, seperti `len()`, `type()`, `input()`, `print()`, dan `range()`. Fungsi-fungsi ini sangat berguna untuk berbagai operasi dasar dalam pemrograman Python.",
        "pertanyaan": [
            {
                "question": "Apa fungsi dari `len()` dalam Python, dan berikan contohnya?",
                "answer": "Fungsi `len()` mengembalikan jumlah elemen dalam objek seperti string atau list. Contoh: `len('Python')` akan menghasilkan 6."
            },
            {
                "question": "Bagaimana cara mengetahui tipe data suatu objek dengan `type()`?",
                "answer": "Fungsi `type()` menunjukkan tipe data dari objek yang diberikan. Contoh: `type(3.14)` akan mengembalikan `<class 'float'>`."
            },
            {
                "question": "Apa kegunaan fungsi `input()` dan bagaimana cara menggunakannya?",
                "answer": "Fungsi `input()` digunakan untuk mendapatkan data dari pengguna. Contoh: `age = input('Masukkan usia Anda: ')` menyimpan input pengguna ke dalam variabel `age`."
            },
            {
                "question": "Tunjukkan cara menggunakan `print()` untuk mencetak string dan variabel dalam satu perintah.",
                "question_code": "print('Nama:', name)",
                "answer": "Fungsi `print()` menampilkan teks dan variabel di layar. Contoh: `print('Nama:', name)` akan mencetak 'Nama:' diikuti nilai dari variabel `name`.",
                "answer_code": "print('Nama:', name)"
            },
            {
                "question": "Bagaimana fungsi `range()` dapat digunakan dalam loop untuk menghasilkan urutan angka?",
                "question_code": "for i in range(3):\n    print(i)",
                "answer": "Fungsi `range()` menghasilkan urutan angka yang bisa digunakan dalam loop. Contoh: `for i in range(3): print(i)` akan mencetak 0, 1, dan 2.",
                "answer_code": "for i in range(3):\n    print(i)"
            },
            {
                "question": "Jelaskan penggunaan fungsi `abs()` untuk mendapatkan nilai absolut dari angka.",
                "question_code": "abs(-7)",
                "answer": "Fungsi `abs()` mengembalikan nilai absolut dari angka yang diberikan. Contoh: `abs(-7)` akan menghasilkan 7.",
                "answer_code": "abs(-7)"
            },
            {
                "question": "Apa kegunaan dari `max()` dan bagaimana cara menggunakannya?",
                "question_code": "max([3, 5, 2, 8])",
                "answer": "Fungsi `max()` digunakan untuk menemukan nilai tertinggi dalam iterable. Contoh: `max([3, 5, 2, 8])` akan menghasilkan 8.",
                "answer_code": "max([3, 5, 2, 8])"
            },
            {
                "question": "Bagaimana fungsi `min()` membantu dalam menemukan nilai terkecil?",
                "question_code": "min([6, 1, 4])",
                "answer": "Fungsi `min()` digunakan untuk mencari nilai terkecil dalam iterable. Contoh: `min([6, 1, 4])` akan mengembalikan 1.",
                "answer_code": "min([6, 1, 4])"
            },
            {
                "question": "Tunjukkan bagaimana fungsi `sum()` digunakan untuk menghitung total dari elemen dalam list.",
                "question_code": "sum([2, 4, 6])",
                "answer": "Fungsi `sum()` menjumlahkan semua elemen dalam iterable. Contoh: `sum([2, 4, 6])` akan menghasilkan 12.",
                "answer_code": "sum([2, 4, 6])"
            }
        ]
    },
    {
        "sumber": "codingpythonpemula.com",
        "penulis": "Dewi Kartika",
        "tanggal": "2024-03-14",
        "judul": "Struktur Kondisional dalam Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "kondisional", "pemula"],
        "konten": "Artikel ini membahas penggunaan struktur kondisional dalam Python. Ini mencakup pernyataan `if`, `else`, `elif`, serta operator logika `and`, `or`, dan `not` untuk mengontrol alur program.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara kerja pernyataan `if` dalam Python?",
                "answer": "Pernyataan `if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan adalah benar. Contoh: `if x > 10: print('x lebih dari 10')`."
            },
            {
                "question": "Apa fungsi dari `else` dalam struktur kondisional?",
                "answer": "Pernyataan `else` menangani kasus ketika kondisi `if` tidak terpenuhi. Contoh: `else: print('x tidak lebih dari 10')`."
            },
            {
                "question": "Jelaskan penggunaan `elif` untuk menambahkan kondisi tambahan.",
                "answer": "Pernyataan `elif` digunakan untuk mengevaluasi kondisi tambahan setelah `if` jika kondisi sebelumnya tidak terpenuhi. Contoh: `elif x == 10: print('x adalah 10')`."
            },
            {
                "question": "Bagaimana menggunakan operator `and` dalam pernyataan kondisional?",
                "question_code": "if age >= 18 and age <= 35:\n    print('Dewasa muda')",
                "answer": "Operator `and` memastikan bahwa semua kondisi yang diuji adalah benar. Contoh: `if age >= 18 and age <= 35:` memeriksa apakah `age` berada dalam rentang 18 hingga 35.",
                "answer_code": "if age >= 18 and age <= 35:\n    print('Dewasa muda')"
            },
            {
                "question": "Apa yang dilakukan operator `or` dalam logika kondisional?",
                "question_code": "if temperature < 0 or temperature > 35:\n    print('Suhu ekstrem')",
                "answer": "Operator `or` memeriksa apakah salah satu dari kondisi adalah benar. Contoh: `if temperature < 0 or temperature > 35:` memeriksa apakah suhu berada di luar rentang normal.",
                "answer_code": "if temperature < 0 or temperature > 35:\n    print('Suhu ekstrem')"
            },
            {
                "question": "Apa fungsi dari operator `not` dalam pernyataan kondisional?",
                "question_code": "if not is_active:\n    print('Akun tidak aktif')",
                "answer": "Operator `not` membalikkan nilai boolean dari kondisi yang diuji. Contoh: `if not is_active:` memeriksa apakah `is_active` adalah False.",
                "answer_code": "if not is_active:\n    print('Akun tidak aktif')"
            },
            {
                "question": "Bagaimana cara menggunakan kondisional bersarang dengan contoh yang sesuai?",
                "question_code": "if score >= 60:\n    if score >= 80:\n        print('Lulus dengan nilai baik')",
                "answer": "Kondisional bersarang melibatkan penggunaan `if` di dalam `if`. Contoh: `if score >= 60: if score >= 80:` memeriksa apakah `score` lulus dan juga lebih dari 80.",
                "answer_code": "if score >= 60:\n    if score >= 80:\n        print('Lulus dengan nilai baik')"
            },
            {
                "question": "Bagaimana operator perbandingan `==` digunakan untuk membandingkan dua nilai?",
                "question_code": "if a == b:\n    print('a sama dengan b')",
                "answer": "Operator `==` memeriksa kesamaan antara dua nilai. Contoh: `if a == b:` memeriksa apakah nilai `a` sama dengan `b`.",
                "answer_code": "if a == b:\n    print('a sama dengan b')"
            },
            {
                "question": "Apa yang dilakukan operator `!=` dalam perbandingan kondisi?",
                "question_code": "if a != b:\n    print('a tidak sama dengan b')",
                "answer": "Operator `!=` memeriksa ketidaksamaan antara dua nilai. Contoh: `if a != b:` memeriksa apakah `a` tidak sama dengan `b`.",
                "answer_code": "if a != b:\n    print('a tidak sama dengan b')"
            }
        ]
    }
]
