[
    {
        "sumber": "BelajarPython.org",
        "penulis": "Ayu Lestari",
        "tanggal": "2024-09-01",
        "judul": "Dasar-Dasar Pemrograman dengan Python",
        "tingkat_kesulitan": "pemula",
        "tag": ["dasar", "python", "pemula"],
        "konten": "Artikel ini memberikan pengantar tentang dasar-dasar pemrograman menggunakan Python, termasuk variabel, tipe data, dan operasi dasar.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara mendeklarasikan variabel di Python?",
                "answer": "Anda bisa mendeklarasikan variabel dengan memberikan nilai langsung. Contohnya: x = 5."
            },
            {
                "question": "Bagaimana cara mencetak nilai variabel?",
                "answer": "Gunakan fungsi print() untuk mencetak nilai variabel. Contohnya: print(x)."
            },
            {
                "question": "Apa yang dimaksud dengan variabel dalam Python?",
                "answer": "Variabel adalah tempat penyimpanan untuk nilai yang dapat digunakan dalam program. Contohnya: x = 10."
            },
            {
                "question": "Mengapa saya mendapatkan error saat menjalankan kode ini?",
                "question_code": "a = 10\nb = 20\nprint(a + b",
                "answer": "Kesalahan terjadi karena tanda kurung penutup pada fungsi print() hilang. Tambahkan kurung penutup.",
                "answer_code": "a = 10\nb = 20\nprint(a + b)"
            },
            {
                "question": "Kenapa saya mendapatkan NameError saat menjalankan kode ini?",
                "question_code": "print(a)",
                "answer": "NameError terjadi karena variabel a belum dideklarasikan. Pastikan variabel sudah dideklarasikan sebelum digunakan.",
                "answer_code": "a = 10\nprint(a)"
            },
            {
                "question": "Bagaimana cara menggabungkan dua string di Python?",
                "question_code": "str1 = 'Hello'\nstr2 = 'World'\nprint(str1 & str2)",
                "answer": "Gunakan operator + untuk menggabungkan dua string. Ganti operator & dengan +.",
                "answer_code": "str1 = 'Hello'\nstr2 = 'World'\nprint(str1 + ' ' + str2)"
            },
            {
                "question": "Bagaimana cara mengubah string menjadi huruf besar semua di Python?",
                "question_code": "text = 'hello'\nprint(text.capitalize())",
                "answer": "Gunakan metode upper() untuk mengubah semua huruf dalam string menjadi huruf besar. Ganti capitalize() dengan upper().",
                "answer_code": "text = 'hello'\nprint(text.upper())"
            },
            {
                "question": "Bagaimana cara memotong string di Python?",
                "question_code": "text = 'Hello, World!'\nprint(text[7:12])",
                "answer": "Anda bisa memotong string dengan menggunakan slicing. Contohnya: text[7:12].",
                "answer_code": "text = 'Hello, World!'\nprint(text[7:12])"
            },
            {
                "question": "Bagaimana cara memeriksa apakah satu nilai lebih besar dari nilai lainnya di Python?",
                "question_code": "x = 15\ny = 10\nif x <= y:\n    print('x lebih besar dari y')",
                "answer": "Gunakan operator > untuk memeriksa apakah x lebih besar dari y. Ganti <= dengan >.",
                "answer_code": "x = 15\ny = 10\nif x > y:\n    print('x lebih besar dari y')"
            }
        ]
    },
    {
        "sumber": "PemrogramanPython.com",
        "penulis": "Budi Santoso",
        "tanggal": "2024-09-05",
        "judul": "Struktur Kontrol di Python",
        "tingkat_kesulitan": "menengah",
        "tag": ["kontrol alur", "if", "loop"],
        "konten": "Artikel ini membahas tentang struktur kontrol dalam Python, seperti penggunaan if-else dan loop for serta loop while.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menggunakan pernyataan if di Python?",
                "answer": "Pernyataan if digunakan untuk menjalankan blok kode tertentu jika kondisi yang diberikan benar. Contohnya: if x > 0: print('x positif')."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan else di Python?",
                "answer": "Pernyataan else digunakan untuk menjalankan blok kode jika kondisi dalam pernyataan if salah. Contohnya: else: print('x negatif atau nol')."
            },
            {
                "question": "Bagaimana cara menggunakan pernyataan elif di Python?",
                "answer": "Pernyataan elif digunakan untuk memeriksa kondisi lain jika kondisi dalam pernyataan if sebelumnya salah. Contohnya: elif x == 0: print('x nol')."
            },
            {
                "question": "Mengapa loop for ini tidak berjalan dengan benar?",
                "question_code": "for i in range(3)\nprint(i)",
                "answer": "Tanda titik dua (:) setelah range(3) hilang. Tambahkan tanda titik dua setelah range(3).",
                "answer_code": "for i in range(3):\nprint(i)"
            },
            {
                "question": "Kenapa saya mendapatkan IndentationError?",
                "question_code": "for i in range(3):\nprint(i)\n print(i+1)",
                "answer": "IndentationError terjadi karena indentasi yang tidak konsisten. Pastikan semua baris kode dalam loop memiliki indentasi yang sama.",
                "answer_code": "for i in range(3):\n    print(i)\n    print(i+1)"
            },
            {
                "question": "Bagaimana cara menggunakan loop while di Python?",
                "question_code": "count = 0\nwhile count < 5\nprint(count)\ncount += 1",
                "answer": "Loop while digunakan untuk mengulang eksekusi kode selama kondisi tertentu benar. Tambahkan tanda titik dua (:) setelah kondisi dalam while.",
                "answer_code": "count = 0\nwhile count < 5:\n    print(count)\n    count += 1"
            },
            {
                "question": "Mengapa loop while ini tidak berhenti?",
                "question_code": "count = 0\nwhile count < 5:\n    print(count)",
                "answer": "Loop while tidak berhenti karena tidak ada increment pada variabel count. Tambahkan count += 1 di dalam loop.",
                "answer_code": "count = 0\nwhile count < 5:\n    print(count)\n    count += 1"
            },
            {
                "question": "Bagaimana cara menggunakan loop nested di Python?",
                "question_code": "for i in range(2):\nfor j in range(3):\nprint(i, j)",
                "answer": "Loop nested adalah loop di dalam loop. Pastikan loop dalam memiliki indentasi yang benar. Contohnya: for i in range(2): for j in range(3): print(i, j).",
                "answer_code": "for i in range(2):\n    for j in range(3):\n        print(i, j)"
            },
            {
                "question": "Bagaimana cara menghentikan loop dengan break di Python?",
                "question_code": "for i in range(5):\n    if i == 2:\n        stop\n    print(i)",
                "answer": "Gunakan pernyataan break untuk menghentikan loop. Ganti stop dengan break.",
                "answer_code": "for i in range(5):\n    if i == 2:\n        break\n    print(i)"
            }
        ]
    }
]
