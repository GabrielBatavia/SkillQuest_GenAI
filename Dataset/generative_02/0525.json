[
    {
        "sumber": "Introduction to Python Sorting",
        "penulis": "Emily Davis",
        "tanggal": "2024-12-25",
        "judul": "Panduan Praktis: Teknik Pengurutan List dalam Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "Sorting", "List", "Pemula"],
        "konten": "Artikel ini menjelaskan berbagai metode pengurutan dalam Python dengan contoh praktis. Fokus utama adalah pada penggunaan metode sort() untuk berbagai kasus penggunaan.",
        "pertanyaan": [
            {
                "question": "Anda diminta untuk mengurutkan daftar buku yang tidak hanya mencakup judul tetapi juga tahun terbitnya dalam format `['1984:1984', 'Brave New World:1932', 'Fahrenheit 451:1953']`. Bagaimana Anda akan mengurutkannya berdasarkan tahun terbit secara efektif?",
                "answer": "Gunakan kode berikut: `books = ['1984:1984', 'Brave New World:1932', 'Fahrenheit 451:1953']; books.sort(key=lambda b: int(b.split(':')[1]))`. Ini akan menghasilkan `['Brave New World:1932', 'Fahrenheit 451:1953', '1984:1984']`, mengurutkan berdasarkan tahun terbit."
            },
            {
                "question": "Jika Anda memiliki daftar lagu dengan durasi dalam format `['Song A:02:34', 'Song B:03:12', 'Song C:01:45']`, dan ingin mengurutkannya berdasarkan durasi, bagaimana Anda akan melakukannya?",
                "answer": "Gunakan kode berikut: `songs = ['Song A:02:34', 'Song B:03:12', 'Song C:01:45']; songs.sort(key=lambda s: int(s.split(':')[1].split(':')[0])*60 + int(s.split(':')[1].split(':')[1]))`. Ini akan menghasilkan `['Song C:01:45', 'Song A:02:34', 'Song B:03:12']`, mengurutkan berdasarkan durasi dalam detik."
            },
            {
                "question": "Anda memiliki daftar perangkat elektronik dengan harga dan rating dalam format `['Laptop:1000:4.5', 'Smartphone:500:4.0', 'Tablet:300:4.7']`, dan Anda ingin mengurutkannya berdasarkan rating terlebih dahulu, kemudian harga jika ratingnya sama. Bagaimana Anda mengatur urutannya?",
                "answer": "Gunakan kode berikut: `items = ['Laptop:1000:4.5', 'Smartphone:500:4.0', 'Tablet:300:4.7']; items.sort(key=lambda i: (-float(i.split(':')[2]), int(i.split(':')[1])))`. Ini akan menghasilkan `['Tablet:300:4.7', 'Laptop:1000:4.5', 'Smartphone:500:4.0']`, mengurutkan berdasarkan rating tertinggi dan harga terendah jika rating sama."
            },
            {
                "question": "Jika Anda memiliki daftar event dengan tanggal dan nama dalam format `['2024-08-10:Wedding', '2023-11-15:Conference', '2024-01-25:Workshop']`, bagaimana Anda bisa mengurutkannya berdasarkan tanggal secara ascending?",
                "answer": "Gunakan kode berikut: `events = ['2024-08-10:Wedding', '2023-11-15:Conference', '2024-01-25:Workshop']; events.sort(key=lambda e: datetime.strptime(e.split(':')[0], '%Y-%m-%d'))`. Ini akan menghasilkan `['2023-11-15:Conference', '2024-01-25:Workshop', '2024-08-10:Wedding']`, mengurutkan berdasarkan tanggal."
            },
            {
                "question": "Anda memiliki daftar produk yang mencakup kategori dan nama dalam format `['Electronics:TV', 'Furniture:Sofa', 'Electronics:Radio']`. Bagaimana Anda mengurutkan daftar ini berdasarkan kategori dan kemudian nama produk?",
                "answer": "Gunakan kode berikut: `products = ['Electronics:TV', 'Furniture:Sofa', 'Electronics:Radio']; products.sort(key=lambda p: (p.split(':')[0], p.split(':')[1]))`. Ini akan menghasilkan `['Electronics:Radio', 'Electronics:TV', 'Furniture:Sofa']`, mengurutkan berdasarkan kategori dan nama produk."
            }
        ]
    },
    {
        "sumber": "Python for Beginners: Sorting Techniques",
        "penulis": "Michael Smith",
        "tanggal": "2024-12-26",
        "judul": "Teknik Pengurutan Dasar dalam Python: Panduan Lengkap untuk Pemula",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "Sorting", "List", "Pemula"],
        "konten": "Panduan ini memberikan penjelasan lengkap tentang teknik pengurutan menggunakan metode sort() dalam Python. Contoh yang diberikan mencakup berbagai situasi yang umum ditemukan.",
        "pertanyaan": [
            {
                "question": "Dalam sebuah daftar yang berisi kombinasi tanggal dan nama acara seperti `['2023-09-12:Meeting', '2024-01-20:Workshop', '2023-05-14:Conference']`, bagaimana Anda dapat mengurutkan acara berdasarkan tanggal?",
                "answer": "Gunakan kode berikut: `events = ['2023-09-12:Meeting', '2024-01-20:Workshop', '2023-05-14:Conference']; events.sort(key=lambda e: datetime.strptime(e.split(':')[0], '%Y-%m-%d'))`. Ini akan menghasilkan `['2023-05-14:Conference', '2023-09-12:Meeting', '2024-01-20:Workshop']`, mengurutkan berdasarkan tanggal."
            },
            {
                "question": "Jika Anda memiliki daftar nama orang dengan usia dalam format `['Alice:30', 'Bob:25', 'Charlie:35']`, dan ingin mengurutkannya berdasarkan usia, bagaimana Anda akan melakukannya?",
                "answer": "Gunakan kode berikut: `people = ['Alice:30', 'Bob:25', 'Charlie:35']; people.sort(key=lambda p: int(p.split(':')[1]))`. Ini akan menghasilkan `['Bob:25', 'Alice:30', 'Charlie:35']`, mengurutkan berdasarkan usia."
            },
            {
                "question": "Anda bekerja dengan daftar produk dengan rating dan harga seperti `['Product A:4.5:120', 'Product B:4.7:90', 'Product C:4.5:150']`. Bagaimana Anda bisa mengurutkan produk berdasarkan rating, dan jika rating sama, mengurutkan berdasarkan harga?",
                "answer": "Gunakan kode berikut: `products = ['Product A:4.5:120', 'Product B:4.7:90', 'Product C:4.5:150']; products.sort(key=lambda p: (-float(p.split(':')[1]), int(p.split(':')[2])))`. Ini akan menghasilkan `['Product B:4.7:90', 'Product C:4.5:150', 'Product A:4.5:120']`, mengurutkan berdasarkan rating dan harga jika rating sama."
            },
            {
                "question": "Dalam kasus di mana Anda memiliki daftar yang berisi item dengan kode dan tanggal kadaluarsa seperti `['Item1:2024-07-15', 'Item2:2024-01-30', 'Item3:2024-07-01']`, bagaimana Anda mengurutkan item berdasarkan tanggal kadaluarsa?",
                "answer": "Gunakan kode berikut: `items = ['Item1:2024-07-15', 'Item2:2024-01-30', 'Item3:2024-07-01']; items.sort(key=lambda i: datetime.strptime(i.split(':')[1], '%Y-%m-%d'))`. Ini akan menghasilkan `['Item3:2024-07-01', 'Item2:2024-01-30', 'Item1:2024-07-15']`, mengurutkan berdasarkan tanggal kadaluarsa."
            },
            {
                "question": "Jika Anda memiliki daftar catatan dengan tanggal dan deskripsi seperti `['2024-06-15:Meeting Notes', '2024-01-10:Project Ideas', '2024-03-20:Research']`, bagaimana Anda akan mengurutkan catatan berdasarkan tanggal?",
                "answer": "Gunakan kode berikut: `notes = ['2024-06-15:Meeting Notes', '2024-01-10:Project Ideas', '2024-03-20:Research']; notes.sort(key=lambda n: datetime.strptime(n.split(':')[0], '%Y-%m-%d'))`. Ini akan menghasilkan `['2024-01-10:Project Ideas', '2024-03-20:Research', '2024-06-15:Meeting Notes']`, mengurutkan berdasarkan tanggal."
            }
        ]
    }
]
