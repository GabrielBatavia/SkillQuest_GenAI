[
    {
        "sumber": "Python Essentials",
        "penulis": "Jane Smith",
        "tanggal": "2024-12-15",
        "judul": "Dasar-dasar List Comprehension di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Pemula"],
        "konten": "Panduan ini menjelaskan cara membuat dan memodifikasi list menggunakan list comprehension dengan berbagai contoh yang mudah dipahami.",
        "pertanyaan": [
            {
                "question": "Anda diberikan sebuah list `['red', 'blue', 'green']`. Bagaimana Anda bisa menggunakan list comprehension untuk menciptakan list baru yang hanya berisi string dengan huruf vokal 'e'? Jelaskan proses pembuatan list ini dan hasil akhirnya.",
                "answer": "Gunakan kode berikut: `filtered_colors = [color for color in ['red', 'blue', 'green'] if 'e' in color]`. Hasil dari list baru adalah `['red', 'green']`, karena hanya string 'red' dan 'green' yang mengandung huruf vokal 'e'."
            },
            {
                "question": "Diberikan list angka `[3, 6, 9, 12, 15]`. Bagaimana Anda bisa membuat list baru yang berisi kuadrat dari setiap angka yang lebih besar dari 10 menggunakan list comprehension? Apa kode yang digunakan dan apa hasil akhirnya?",
                "answer": "Gunakan kode ini: `squares = [x**2 for x in [3, 6, 9, 12, 15] if x > 10]`. Hasil akhirnya adalah `[144, 225]`, yang merupakan kuadrat dari angka-angka lebih dari 10 dalam list asli."
            },
            {
                "question": "Jika Anda memiliki string `'python'` dan ingin membuat list baru dari huruf-hurufnya yang digabungkan dengan karakter `'!'` menggunakan list comprehension, bagaimana cara melakukannya dan apa hasil akhirnya?",
                "answer": "Gunakan kode berikut: `exclaimed_chars = [char + '!' for char in 'python']`. Hasil akhirnya adalah `['p!', 'y!', 't!', 'h!', 'o!', 'n!']`, di mana setiap huruf dari 'python' diikuti oleh karakter '!'."
            },
            {
                "question": "Anda diberikan list string `['apple', 'banana', 'cherry']` dan ingin membuat list baru yang berisi jumlah huruf dari setiap string menggunakan list comprehension. Bagaimana cara Anda melakukannya dan apa hasil akhirnya?",
                "answer": "Gunakan kode ini: `lengths = [len(fruit) for fruit in ['apple', 'banana', 'cherry']]`. Hasil akhirnya adalah `[5, 6, 6]`, yang merupakan panjang dari setiap string dalam list asli."
            },
            {
                "question": "Bagaimana Anda bisa menggunakan list comprehension untuk menghasilkan list baru dari angka `[20, 25, 30, 35]` yang mengandung angka-angka tersebut dibagi 5? Jelaskan kode yang digunakan dan hasilnya.",
                "answer": "Gunakan kode berikut: `divided = [num / 5 for num in [20, 25, 30, 35]]`. Hasil akhirnya adalah `[4.0, 5.0, 6.0, 7.0]`, yang merupakan hasil pembagian setiap angka dalam list dengan 5."
            },
            {
                "question": "Cobalah untuk membuat list dari string `'data science'` yang hanya berisi huruf-huruf konsonan dengan menggunakan list comprehension. Bagaimana cara Anda melakukannya dan apa hasil akhirnya?",
                "answer": "Gunakan kode ini: `consonants = [char for char in 'data science' if char not in 'aeiou ']`. Hasil akhirnya adalah `['d', 't', 's', 'c', 'n', 'c']`, yang merupakan huruf konsonan dari string 'data science'."
            },
            {
                "question": "Diberikan list string `['house', 'mouse', 'cat']`, bagaimana Anda bisa menggunakan list comprehension untuk menghasilkan list baru yang hanya berisi string yang panjangnya lebih dari 4 karakter dan mengubah setiap karakter menjadi huruf besar? Apa kode yang harus digunakan dan apa hasil akhirnya?",
                "answer": "Gunakan kode ini: `upper_long_words = [word.upper() for word in ['house', 'mouse', 'cat'] if len(word) > 4]`. Hasil akhirnya adalah `['HOUSE', 'MOUSE']`, di mana setiap string yang panjangnya lebih dari 4 karakter diubah menjadi huruf besar."
            }
        ]
    },
    {
        "sumber": "Beginner Python Guide",
        "penulis": "Robert Brown",
        "tanggal": "2024-12-16",
        "judul": "Pengantar List Comprehension untuk Pemula",
        "tingkat_kesulitan": "Pemula",
        "tag": ["Python", "List Comprehension", "Pemula"],
        "konten": "Artikel ini memberikan pengantar praktis tentang penggunaan list comprehension untuk pemula, dengan berbagai contoh yang mudah dipahami dan diterapkan.",
        "pertanyaan": [
            {
                "question": "Bagaimana Anda bisa membuat list baru dari list angka `[1, 4, 7, 10]` yang berisi elemen-elemen yang merupakan kelipatan dari 2 menggunakan list comprehension? Jelaskan proses pembuatan list ini dan hasil akhirnya.",
                "answer": "Gunakan kode berikut: `multiples_of_two = [num for num in [1, 4, 7, 10] if num % 2 == 0]`. Hasil dari list baru adalah `[4, 10]`, yang merupakan kelipatan dari 2 dalam list awal."
            },
            {
                "question": "Jika Anda memiliki string `'data analysis'` dan ingin menghasilkan list yang berisi setiap kata dalam string tersebut dengan karakter pertama dari setiap kata diubah menjadi huruf besar menggunakan list comprehension, bagaimana cara Anda melakukannya dan apa hasil akhirnya?",
                "answer": "Gunakan kode ini: `capitalized_words = [word.capitalize() for word in 'data analysis'.split()]`. Hasil akhirnya adalah `['Data', 'Analysis']`, di mana setiap kata dalam string memiliki huruf pertama yang dikapitalisasi."
            },
            {
                "question": "Cobalah untuk membuat list baru dari angka `[5, 10, 15, 20]` yang berisi elemen-elemen yang dikalikan dengan 2 dan hasilnya dibatasi hingga 30 menggunakan list comprehension. Apa kode yang harus digunakan dan apa hasil akhirnya?",
                "answer": "Gunakan kode berikut: `doubled_up_to_30 = [num * 2 for num in [5, 10, 15, 20] if num * 2 <= 30]`. Hasil akhirnya adalah `[10, 20]`, yang merupakan angka-angka yang dikalikan dengan 2 dan hasilnya tidak melebihi 30."
            },
            {
                "question": "Anda diberikan string `'algorithm'` dan ingin menghasilkan list yang berisi huruf-huruf yang muncul lebih dari sekali menggunakan list comprehension. Bagaimana cara Anda melakukannya dan apa hasil akhirnya?",
                "answer": "Gunakan kode ini: `repeated_letters = [char for char in 'algorithm' if 'algorithm'.count(char) > 1]`. Hasil akhirnya adalah `['o', 'g']`, yang merupakan huruf yang muncul lebih dari sekali dalam string 'algorithm'."
            },
            {
                "question": "Bagaimana Anda bisa menggunakan list comprehension untuk menghasilkan list dari angka `[10, 20, 30, 40]` yang dikurangi dengan 5 dan hanya mencakup hasil yang lebih dari 20? Jelaskan kode yang digunakan dan hasilnya.",
                "answer": "Gunakan kode berikut: `reduced_numbers = [num - 5 for num in [10, 20, 30, 40] if num - 5 > 20]`. Hasil akhirnya adalah `[25, 35]`, yang merupakan angka-angka setelah dikurangi 5 dan hasilnya lebih dari 20."
            },
            {
                "question": "Cobalah untuk membuat list dari list `['java', 'c++', 'python']` yang hanya berisi string yang panjangnya kurang dari 5 karakter dengan menggunakan list comprehension. Apa kode yang harus digunakan dan apa hasil akhirnya?",
                "answer": "Gunakan kode ini: `short_languages = [lang for lang in ['java', 'c++', 'python'] if len(lang) < 5]`. Hasil akhirnya adalah `['java', 'c++']`, yang merupakan string dengan panjang kurang dari 5 karakter."
            },
            {
                "question": "Jika Anda ingin menghasilkan list yang berisi hasil dari mengubah setiap elemen dalam list `[100, 200, 300]` menjadi string dengan format `item-` menggunakan list comprehension, bagaimana Anda melakukannya dan apa hasil akhirnya?",
                "answer": "Gunakan kode berikut: `formatted_items = [f'item-{num}' for num in [100, 200, 300]]`. Hasil akhirnya adalah `['item-100', 'item-200', 'item-300']`, di mana setiap elemen dalam list diubah menjadi string dengan format yang ditentukan."
            }
        ]
    }
]
