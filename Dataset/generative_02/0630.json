[
    {
        "sumber": "Python for Beginners",
        "penulis": "Guido van Rossum",
        "tanggal": "2024-07-27",
        "judul": "Mengelola Nested List di Python",
        "tingkat_kesulitan": "Beginner",
        "tag": ["Python", "Lists", "Nested Lists"],
        "konten": "Artikel ini menjelaskan cara mengakses, menambahkan, dan menghapus elemen dalam nested list di Python dengan beberapa contoh kode praktis.",
        "pertanyaan": [
            {
                "question": "Mengapa nested list penting dalam pengelolaan data yang kompleks?",
                "answer": "Nested list memungkinkan kita mengelola data dalam beberapa tingkatan atau dimensi, seperti tabel atau matriks, yang membuatnya lebih mudah untuk diorganisir dan diakses."
            },
            {
                "question": "Apa metode yang digunakan untuk menambahkan elemen ke sub-list dalam nested list?",
                "answer": "Anda dapat menggunakan metode append() atau insert() untuk menambahkan elemen ke sub-list dalam nested list. Contohnya: `nested_list[1].append('elemen baru')`."
            },
            {
                "question": "Bagaimana cara menghapus elemen dari sub-list dalam nested list dengan benar?",
                "answer": "Anda dapat menggunakan metode remove(), del, atau pop() untuk menghapus elemen dari sub-list dalam nested list. Contohnya: `del nested_list[0][2]`."
            },
            {
                "question": "Mengapa kode berikut menyebabkan kesalahan?",
                "question_code": "nested = [[1, 2], [3, 4], [5, 6]]\nelem = nested[3][0]",
                "answer": "Kesalahan terjadi karena mencoba mengakses indeks yang tidak ada dalam list. List utama hanya memiliki tiga sub-list, sehingga indeks 3 tidak ada.",
                "answer_code": "nested = [[1, 2], [3, 4], [5, 6]]\nelem = nested[2][0]"
            },
            {
                "question": "Bagaimana cara memperbaiki kode yang mencoba menambahkan elemen ke sub-list yang tidak ada?",
                "question_code": "nested_list = [['apple', 'banana'], ['cherry', 'date']]\nnested_list[2].append('elderberry')",
                "answer": "Sub-list ketiga tidak ada, sehingga menyebabkan kesalahan. Anda harus menambahkan elemen ke sub-list yang ada. Contohnya: `nested_list[1].append('elderberry')`.",
                "answer_code": "nested_list = [['apple', 'banana'], ['cherry', 'date']]\nnested_list[1].append('elderberry')"
            },
            {
                "question": "Apa yang salah dalam kode ini saat mencoba menghapus elemen dari nested list?",
                "question_code": "data = [['a', 'b'], ['c', 'd']]\ndata.remove(['c', 'd'][0])",
                "answer": "Metode remove() digunakan dengan cara yang salah. Anda harus menggunakan del atau pop untuk menghapus elemen dari sub-list. Contohnya: `del data[1][0]`.",
                "answer_code": "data = [['a', 'b'], ['c', 'd']]\ndel data[1][0]"
            },
            {
                "question": "Mengapa kode berikut menghasilkan error?",
                "question_code": "nested_list = [[1, 2], [3, [4, 5]], 6]\nelem = nested_list[2].pop(0)",
                "answer": "Kesalahan terjadi karena elemen `nested_list[2]` adalah integer, bukan list, sehingga tidak bisa menggunakan metode pop. Anda harus memastikan elemen tersebut adalah list sebelum menggunakan pop.",
                "answer_code": "nested_list = [[1, 2], [3, [4, 5]], [6]]\nelem = nested_list[2].pop()"
            },
            {
                "question": "Bagaimana kode berikut mengubah list yang ada?",
                "question_code": "nested = [[10, 20], [30, 40], [50, 60]]\nnested[1].append(45)",
                "answer": "Kode tersebut menambahkan elemen 45 ke sub-list kedua.",
                "answer_code": "nested = [[10, 20], [30, 40], [50, 60]]\nnested[1].append(45)"
            },
            {
                "question": "Apa yang menyebabkan kesalahan dalam kode berikut?",
                "question_code": "matrix = [[1, 2], [3, 4], [5, 6]]\ndel matrix[2][2]",
                "answer": "Kesalahan terjadi karena mencoba mengakses indeks yang tidak ada. Sub-list ketiga hanya memiliki dua elemen dengan indeks maksimal 1.",
                "answer_code": "matrix = [[1, 2], [3, 4], [5, 6]]\ndel matrix[2][1]"
            }
        ]
    },
    {
        "sumber": "Learning Python",
        "penulis": "Alice Johnson",
        "tanggal": "2024-07-27",
        "judul": "Memanipulasi Elemen dalam Nested List di Python",
        "tingkat_kesulitan": "Beginner",
        "tag": ["Python", "Lists", "Nested Lists"],
        "konten": "Panduan ini menjelaskan cara mengakses, menambahkan, dan menghapus elemen dalam nested list di Python dengan contoh-contoh praktis.",
        "pertanyaan": [
            {
                "question": "Apa keuntungan menggunakan nested list dalam pengelolaan data?",
                "answer": "Nested list memungkinkan pengorganisasian data dalam beberapa tingkatan atau dimensi, seperti tabel atau matriks, sehingga memudahkan pengelolaan data yang lebih kompleks."
            },
            {
                "question": "Bagaimana Anda menambahkan sub-list baru ke dalam nested list?",
                "answer": "Anda bisa menambahkan sub-list baru menggunakan metode append() atau insert(). Contohnya, `nested_list.append([100, 200, 300])` menambahkan sub-list baru ke dalam list utama."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam sub-list di nested list?",
                "answer": "Gunakan dua indeks: satu untuk memilih sub-list dan satu lagi untuk memilih elemen dalam sub-list tersebut. Contoh: `nested_list[1][2]` mengakses elemen ketiga dari sub-list kedua."
            },
            {
                "question": "Mengapa kode berikut tidak menghasilkan output yang diharapkan?",
                "question_code": "nested_list = [['a', 'b'], ['c', 'd'], ['e', 'f']]\nelement = nested_list[3][0]",
                "answer": "Kesalahan terjadi karena indeks yang diakses berada di luar jangkauan. List utama hanya memiliki tiga sub-list, sehingga indeks 3 tidak ada.",
                "answer_code": "nested_list = [['a', 'b'], ['c', 'd'], ['e', 'f']]\nelement = nested_list[2][0]"
            },
            {
                "question": "Mengapa elemen tidak ditambahkan ke sub-list yang diinginkan?",
                "question_code": "nested_data = [['x', 'y'], ['z', 'w']]\nnested_data[3].append('v')",
                "answer": "Kesalahan terjadi karena sub-list keempat tidak ada. Anda harus menambahkan elemen ke sub-list yang ada. Contohnya: `nested_data[1].append('v')`.",
                "answer_code": "nested_data = [['x', 'y'], ['z', 'w']]\nnested_data[1].append('v')"
            },
            {
                "question": "Bagaimana cara menghapus elemen dari sub-list dalam nested list dengan benar?",
                "question_code": "data = [['cat', 'dog'], ['fish', 'bird']]\ndata.remove(['fish', 'bird'][0])",
                "answer": "Metode remove() digunakan dengan cara yang salah. Anda harus menggunakan del atau pop untuk menghapus elemen dari sub-list. Contohnya: `del data[1][0]`.",
                "answer_code": "data = [['cat', 'dog'], ['fish', 'bird']]\ndel data[1][0]"
            },
            {
                "question": "Mengapa kode berikut ini menghasilkan error?",
                "question_code": "complex_list = [[1, 2], [3, [4, 5]], 6]\nelement = complex_list[2].pop(1)",
                "answer": "Kesalahan terjadi karena elemen `complex_list[2]` adalah integer, bukan list, sehingga tidak bisa menggunakan metode pop. Anda harus memastikan elemen tersebut adalah list sebelum menggunakan pop.",
                "answer_code": "complex_list = [[1, 2], [3, [4, 5]], [6]]\nelement = complex_list[2].pop()"
            },
            {
                "question": "Bagaimana perubahan yang terjadi pada nested list setelah menjalankan kode ini?",
                "question_code": "nested_elements = [[10, 20], [30, 40], [50, 60]]\nnested_elements[1].append(45)",
                "answer": "Kode tersebut menambahkan elemen 45 ke sub-list kedua, menyebabkan perubahan"
            }
        ]
    }
]
