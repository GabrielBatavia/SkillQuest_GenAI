[
    {
        "sumber": "Python Documentation",
        "penulis": "Guido van Rossum",
        "tanggal": "2024-07-27",
        "judul": "Penggunaan List dalam Aplikasi Nyata: Penyimpanan dan Manipulasi Data di Python",
        "tingkat_kesulitan": "Intermediate",
        "tag": ["Python", "Lists", "Data Manipulation"],
        "konten": "Artikel ini menjelaskan bagaimana menggunakan list dalam aplikasi nyata untuk penyimpanan dan manipulasi data di Python. Termasuk contoh kode dan tips praktis.",
        "pertanyaan": [
            {
                "question": "Bagaimana cara menyimpan daftar belanjaan dalam aplikasi Python?",
                "answer": "List dapat digunakan untuk menyimpan daftar belanjaan dengan menambahkan setiap item sebagai elemen dalam list, memungkinkan pengelolaan yang mudah."
            },
            {
                "question": "Apa metode yang digunakan untuk menambahkan elemen baru ke dalam list di posisi tertentu?",
                "answer": "Metode insert() digunakan untuk menambahkan elemen baru pada posisi tertentu dalam list. Contoh: `data.insert(1, 'elemen_baru')`."
            },
            {
                "question": "Bagaimana cara menghapus elemen terakhir dari list?",
                "answer": "Metode pop() tanpa argumen menghapus elemen terakhir dari list. Contoh: `data.pop()`."
            },
            {
                "question": "Mengapa kode berikut menghasilkan error IndexError?",
                "question_code": "tasks = ['clean', 'cook', 'shop']\ntask = tasks[3]",
                "answer": "Error terjadi karena indeks yang diakses berada di luar jangkauan. List hanya memiliki tiga elemen dengan indeks maksimal 2.",
                "answer_code": "tasks = ['clean', 'cook', 'shop']\ntask = tasks[2]"
            },
            {
                "question": "Mengapa kode berikut tidak berhasil menambahkan 'Diana' ke dalam list?",
                "question_code": "participants = ['Alice', 'Bob']\nparticipants[2].append('Diana')",
                "answer": "Kode tidak berhasil karena append() seharusnya digunakan langsung pada list, bukan dengan indeks yang tidak ada.",
                "answer_code": "participants = ['Alice', 'Bob']\nparticipants.append('Diana')"
            },
            {
                "question": "Apa yang salah dengan kode ini untuk menghapus elemen dari list?",
                "question_code": "orders = [123, 456, 789]\norders.remove(101)",
                "answer": "Kode salah karena elemen 101 tidak ada dalam list, sehingga tidak bisa dihapus.",
                "answer_code": "orders = [123, 456, 789]\norders.remove(789)"
            },
            {
                "question": "Mengapa kode berikut menghasilkan IndexError?",
                "question_code": "prices = [50, 100, 150]\nprice = prices.pop(3)",
                "answer": "IndexError terjadi karena mencoba mengakses indeks yang tidak ada dalam list. Indeks yang valid adalah 0 hingga 2.",
                "answer_code": "prices = [50, 100, 150]\nprice = prices.pop(2)"
            },
            {
                "question": "Mengapa kode berikut tidak mengubah nilai di dalam list?",
                "question_code": "names = ['Anna', 'Brian', 'Cathy']\nnames[1] = 'David'",
                "answer": "Kode benar dan mengganti elemen kedua 'Brian' dengan 'David'.",
                "answer_code": "names = ['Anna', 'Brian', 'Cathy']\nnames[1] = 'David'"
            },
            {
                "question": "Apa yang salah dengan kode berikut saat menambahkan elemen ke dalam list?",
                "question_code": "schedule = ['Monday', 'Tuesday']\nschedule.insert('Wednesday', 1)",
                "answer": "Kode salah karena argumen pertama insert() harus indeks, dan kedua adalah elemen yang akan ditambahkan.",
                "answer_code": "schedule = ['Monday', 'Tuesday']\nschedule.insert(1, 'Wednesday')"
            }
        ]
    },
    {
        "sumber": "Real Python",
        "penulis": "Alex Smith",
        "tanggal": "2024-07-27",
        "judul": "Penggunaan List dalam Aplikasi Nyata: Penyimpanan dan Manipulasi Data di Python",
        "tingkat_kesulitan": "Intermediate",
        "tag": ["Python", "Lists", "Data Manipulation"],
        "konten": "Panduan ini membahas cara menggunakan list dalam aplikasi nyata untuk penyimpanan dan manipulasi data di Python, serta memberikan beberapa contoh aplikasi praktis.",
        "pertanyaan": [
            {
                "question": "Bagaimana list dapat digunakan untuk mengelola inventaris perpustakaan?",
                "answer": "List dapat digunakan untuk menyimpan data buku seperti judul, penulis, dan status peminjaman, yang memungkinkan pengelolaan inventaris perpustakaan yang efektif."
            },
            {
                "question": "Apakah list di Python bisa menyimpan elemen dengan tipe data yang berbeda?",
                "answer": "Ya, list di Python dapat menyimpan elemen dengan tipe data yang berbeda seperti integer, string, dan objek."
            },
            {
                "question": "Bagaimana cara menggabungkan dua list menjadi satu list?",
                "answer": "Dua list dapat digabungkan menggunakan operator + atau metode extend(). Contoh: `list1 + list2` atau `list1.extend(list2)`."
            },
            {
                "question": "Mengapa kode berikut menghasilkan error IndexError?",
                "question_code": "cities = ['New York', 'Los Angeles']\ncity = cities.pop(2)",
                "answer": "IndexError terjadi karena mencoba mengakses indeks yang tidak ada dalam list. Indeks yang valid adalah 0 dan 1.",
                "answer_code": "cities = ['New York', 'Los Angeles']\ncity = cities.pop(1)"
            },
            {
                "question": "Mengapa kode berikut tidak berhasil menambahkan 'pencil' ke dalam list?",
                "question_code": "stationery = ['pen', 'notebook']\nstationery.append(1, 'pencil')",
                "answer": "Kode tidak berhasil karena metode append() hanya menerima satu argumen, yaitu elemen yang akan ditambahkan.",
                "answer_code": "stationery = ['pen', 'notebook']\nstationery.append('pencil')"
            },
            {
                "question": "Apa yang salah dengan kode ini untuk menghapus elemen dari list?",
                "question_code": "numbers = [1, 2, 3]\ndel numbers[4]",
                "answer": "Kode salah karena indeks yang dihapus berada di luar jangkauan. Indeks yang valid adalah 0, 1, dan 2.",
                "answer_code": "numbers = [1, 2, 3]\ndel numbers[2]"
            },
            {
                "question": "Mengapa kode berikut menghasilkan ValueError?",
                "question_code": "weights = [70, 80, 90]\nweights.remove(100)",
                "answer": "ValueError terjadi karena elemen 100 tidak ada dalam list, sehingga tidak bisa dihapus.",
                "answer_code": "weights = [70, 80, 90]\nweights.remove(90)"
            },
            {
                "question": "Mengapa kode berikut tidak mengubah elemen di dalam list?",
                "question_code": "fruits = ['apple', 'banana', 'cherry']\nfruits[0] = 'orange'",
                "answer": "Kode benar dan mengganti elemen pertama 'apple' dengan 'orange'.",
                "answer_code": "fruits = ['apple', 'banana', 'cherry']\nfruits[0] = 'orange'"
            },
            {
                "question": "Apa yang salah dengan kode berikut saat mencoba menambahkan elemen ke dalam list?",
                "question_code": "shapes = ['circle', 'square']\nshapes.insert(2, 'triangle', 1)",
                "answer": "Kode salah karena metode insert() hanya menerima dua argumen: indeks dan elemen yang ditambahkan.",
                "answer_code": "shapes = ['circle', 'square']\nshapes.insert(1, 'triangle')"
            }
        ]
    }
]
