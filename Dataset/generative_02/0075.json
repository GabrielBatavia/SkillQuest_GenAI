[
    {
        "sumber": "pythonmudah.com",
        "penulis": "Agus Wijaya",
        "tanggal": "2023-03-12",
        "judul": "Penggunaan Fungsi Lambda di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "lambda", "fungsi"],
        "konten": "Artikel ini menjelaskan cara mendefinisikan dan menggunakan fungsi lambda di Python untuk membuat fungsi anonim yang singkat.",
        "pertanyaan": [
            {
                "question": "Saya tidak mengerti apa itu fungsi lambda. Bisa jelaskan?",
                "answer": "Fungsi lambda adalah fungsi anonim yang ditulis dengan sintaks singkat. Fungsi ini hanya memiliki satu ekspresi, dan dapat digunakan untuk operasi sederhana tanpa mendefinisikan fungsi secara lengkap."
            },
            {
                "question": "Bagaimana cara saya mendefinisikan fungsi lambda?",
                "answer": "Anda dapat mendefinisikan fungsi lambda dengan kata kunci `lambda`, diikuti oleh argumen, titik dua, dan ekspresi. Contohnya: `lambda x: x * 2`."
            },
            {
                "question": "Apa itu fungsi lambda dan bagaimana saya bisa menggunakannya dengan map?",
                "question_code": "list(map(lambda x: x * 2, [1, 2, 3]))",
                "answer": "Fungsi lambda dapat digunakan dengan `map()` untuk menerapkan fungsi ke setiap elemen dalam iterable. Misalnya: `map(lambda x: x * 2, [1, 2, 3])`, yang mengalikan setiap elemen dengan 2."
            },
            {
                "question": "Saya belum memahami cara kerja fungsi lambda dengan filter. Bisa beri contoh?",
                "question_code": "list(filter(lambda x: x % 2 == 0, [1, 2, 3, 4]))",
                "answer": "Dengan `filter()`, fungsi lambda digunakan untuk menyaring elemen dalam iterable berdasarkan kriteria. Misalnya: `filter(lambda x: x % 2 == 0, [1, 2, 3, 4])` akan menghasilkan elemen yang genap."
            },
            {
                "question": "Bagaimana fungsi lambda diterapkan dengan reduce?",
                "question_code": "from functools import reduce\nreduce(lambda x, y: x + y, [1, 2, 3, 4])",
                "answer": "Fungsi lambda diterapkan dengan `reduce()` untuk mengakumulasi hasil dari fungsi pada elemen dalam iterable. Misalnya: `reduce(lambda x, y: x + y, [1, 2, 3, 4])` menjumlahkan semua elemen."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda dalam sorted?",
                "question_code": "sorted([('a', 3), ('b', 2), ('c', 1)], key=lambda x: x[1])",
                "answer": "Fungsi lambda digunakan dalam `sorted()` untuk menentukan kunci pengurutan. Misalnya: `sorted([('a', 3), ('b', 2), ('c', 1)], key=lambda x: x[1])` mengurutkan tuple berdasarkan elemen kedua."
            },
            {
                "question": "Bisakah Anda menjelaskan cara mendefinisikan fungsi lambda dengan beberapa argumen?",
                "question_code": "lambda x, y: x + y",
                "answer": "Fungsi lambda dengan beberapa argumen didefinisikan dengan memisahkan argumen menggunakan koma. Misalnya: `lambda x, y: x + y` menjumlahkan dua argumen."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda dalam list comprehension?",
                "question_code": "[lambda x: x * 2 for x in range(5)]",
                "answer": "Fungsi lambda dalam list comprehension memungkinkan pembuatan list dari hasil fungsi. Misalnya: `[lambda x: x * 2 for x in range(5)]` membuat list fungsi yang mengalikan setiap elemen dengan 2."
            },
            {
                "question": "Bagaimana cara menggunakan fungsi lambda dalam dictionary comprehension?",
                "question_code": "{x: (lambda x: x * 2)(x) for x in range(5)}",
                "answer": "Fungsi lambda dalam dictionary comprehension digunakan untuk membuat dictionary. Misalnya: `{x: (lambda x: x * 2)(x) for x in range(5)}` menghasilkan dictionary dengan kunci dan nilai yang dikalikan dua."
            }
        ]
    },
    {
        "sumber": "belajarpython.org",
        "penulis": "Indra Kurniawan",
        "tanggal": "2024-01-20",
        "judul": "Penggunaan Struktur Data List di Python",
        "tingkat_kesulitan": "Pemula",
        "tag": ["python", "list", "struktur data"],
        "konten": "Artikel ini menjelaskan cara menggunakan list di Python, termasuk cara membuat, mengakses, menambah, menghapus, dan memanipulasi elemen dalam list.",
        "pertanyaan": [
            {
                "question": "Apa itu list di Python dan bagaimana cara kerjanya?",
                "answer": "List adalah struktur data yang dapat menyimpan beberapa item dalam satu variabel, dengan setiap item dapat diakses melalui indeks."
            },
            {
                "question": "Bagaimana cara membuat list baru di Python?",
                "answer": "List dibuat dengan menggunakan tanda kurung siku `[]` dan memisahkan item dengan koma. Contohnya: `my_list = [1, 2, 3]`."
            },
            {
                "question": "Bagaimana cara mengakses elemen dalam list?",
                "answer": "Elemen dalam list diakses menggunakan indeks, dimulai dari 0. Misalnya, `my_list[0]` mengakses elemen pertama dalam list."
            },
            {
                "question": "Bagaimana cara menambahkan elemen ke dalam list?",
                "question_code": "my_list.append(4)",
                "answer": "Untuk menambahkan elemen ke dalam list, gunakan metode `append()`. Misalnya: `my_list.append(4)` menambahkan angka 4 ke akhir list."
            },
            {
                "question": "Apa cara terbaik untuk menghapus elemen dari list?",
                "question_code": "my_list.remove(2)",
                "answer": "Anda dapat menghapus elemen dari list dengan metode `remove()`. Misalnya: `my_list.remove(2)` menghapus angka 2 dari list."
            },
            {
                "question": "Bagaimana cara mengurutkan elemen dalam list?",
                "question_code": "my_list.sort()",
                "answer": "Gunakan metode `sort()` untuk mengurutkan elemen dalam list secara ascending. Contoh: `my_list.sort()`."
            },
            {
                "question": "Bagaimana cara membalik urutan elemen dalam list?",
                "question_code": "my_list.reverse()",
                "answer": "Untuk membalik urutan elemen dalam list, gunakan metode `reverse()`. Misalnya: `my_list.reverse()`."
            },
            {
                "question": "Bagaimana menemukan indeks elemen dalam list?",
                "question_code": "my_list.index(3)",
                "answer": "Gunakan metode `index()` untuk menemukan indeks elemen dalam list. Misalnya: `my_list.index(3)` memberikan indeks dari elemen 3."
            },
            {
                "question": "Apa cara menghitung jumlah kemunculan elemen dalam list?",
                "question_code": "my_list.count(2)",
                "answer": "Untuk menghitung jumlah kemunculan elemen dalam list, gunakan metode `count()`. Misalnya: `my_list.count(2)`."
            }
        ]
    }
]
